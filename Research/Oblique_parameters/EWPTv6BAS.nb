(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    826748,      16976]
NotebookOptionsPosition[    812082,      16742]
NotebookOutlinePosition[    812415,      16757]
CellTagsIndexPosition[    812372,      16754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["EWPT of the VDDMM", "Title",
 CellChangeTimes->{{3.7416238791057243`*^9, 3.7416238804907017`*^9}, {
  3.7416239361351137`*^9, 
  3.74162394201851*^9}},ExpressionUUID->"742dced8-88f5-4fc6-95cb-\
492732d7382a"],

Cell[CellGroupData[{

Cell["Loading package and Feynman rules", "Chapter",
 CellChangeTimes->{{3.741623890619297*^9, 3.741623892620915*^9}, {
  3.741623945469924*^9, 
  3.741623950090171*^9}},ExpressionUUID->"656cf661-9172-4d2a-bc00-\
489086462765"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "NotebookEvaluate", "[", 
     "\"\</home/bastilo/Dropbox/ProyectoVectorDM/ObliqueParameters/New/\
DefinicionesV2.nb\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Options", "[", "OneLoop", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7416239540785027`*^9, 3.7416239790887737`*^9}, {
  3.741631495269142*^9, 3.7416314992933397`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"da5c61b8-ffff-42ca-950a-0f655c54967b"],

Cell["\<\
Loading FeynCalc from \
/home/bastilo/.Mathematica/Applications/HighEnergyPhysics\
\>", "Text",
 CellMargins->{{Inherited, Inherited}, {1, 0}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.742294370931306*^9},ExpressionUUID->"c0019483-c38c-4646-bb09-\
90d4bb585b9e"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "HighEnergyPhysics`FeynCalc`MemoryAvailable`MemoryAvailable","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"MemoryAvailable\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"HighEnergyPhysics`FeynCalc`MemoryAvailable`\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"System`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"HighEnergyPhysics`FeynCalc`MemoryAvailable`\\\\\\\
\"\\\", TraditionalForm]\\) may shadow or be shadowed by other \
definitions.\"",2,2,1,24787999531254406431,"Local",
    "HighEnergyPhysics`FeynCalc`MemoryAvailable`MemoryAvailable"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742294372963423*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"af912e52-938a-4f59-8a3f-76013415c032"],

Cell[TextData[{
 StyleBox["FeynCalc",
  FontWeight->"Bold"],
 " ",
 "8.2.0",
 " For help, type ?FeynCalc, open ",
 ButtonBox["FeynCalcRef8.nb",
  BaseStyle->"AddOnsLink",
  ButtonFunction:>NotebookOpen[
   "/home/bastilo/.Mathematica/Applications/HighEnergyPhysics/Documentation/\
English/FeynCalcRef8.nb"],
  ButtonData:>{"Short Overview", "intro"},
  ButtonNote->"Open FeynCalcRef8.nb"],
 " or visit ",
 ButtonBox["www.feyncalc.org",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.feyncalc.org/"], None},
  ButtonNote->"http://www.feyncalc.org/"]
}], "Text",
 CellMargins->{{Inherited, Inherited}, {1, 0}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7422943741518583`*^9},ExpressionUUID->"b896f594-f59c-4ad1-a36e-\
25d9e3e5e431"],

Cell["Loading PHI ", "Text",
 CellMargins->{{Inherited, Inherited}, {1, 0}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7422943817244873`*^9},ExpressionUUID->"ed8b6e71-37da-4de6-91bd-\
62fbeacb4341"],

Cell[TextData[{
 "WARNING! Your FeynArts installation is not complete or the version you have \
cannot be used with this version of FeynCalc.\nFeynArts can be downloaded at ",
 ButtonBox["www.feynarts.de",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.feynarts.de"], None},
  ButtonNote->"http://www.feynarts.de"]
}], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.742294382827814*^9},ExpressionUUID->"70b64ad7-41e6-4635-b40a-\
e32703047ff6"],

Cell[TextData[{
 "Loading FeynArts, see ",
 ButtonBox["www.feynarts.de",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.feynarts.de/"], None},
  ButtonNote->"http://www.feynarts.de/"],
 " for documentation"
}], "Text",
 CellMargins->{{Inherited, Inherited}, {1, 0}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7422943828480787`*^9},ExpressionUUID->"16fa76b7-c6fb-48ab-81f3-\
bf1d05b4ea8c"],

Cell[TextData[{
 "FeynArts not found. Please install FeynArts, e.g., in\n",
 "/home/bastilo/.Mathematica",
 "\n",
 "and reload FeynCalc",
 "\n",
 "FeynArts can be downloaded from ",
 ButtonBox["www.feynarts.de",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.feynarts.de/"], None},
  ButtonNote->"http://www.feynarts.de/"]
}], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7422943828971777`*^9},ExpressionUUID->"b752fdfd-921e-48a0-b6f1-\
19d2c7e7a5eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Install", "[", 
   "\"\</home/bastilo/Documents/Programas/LoopTools-2.15/x86_64-Linux/bin/\
LoopTools\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7416315056882153`*^9, 3.7416315091842213`*^9}, {
   3.741631549929932*^9, 3.7416315603638287`*^9}, {3.741631856916561*^9, 
   3.74163185845269*^9}, 3.7416906291161137`*^9, {3.7416963271538143`*^9, 
   3.741696328107662*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"3d76ba44-6f6b-4706-9d0c-3dba64654fd9"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "PaVe","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"PaVe\\\\\\\"\\\", TraditionalForm]\
\\) appears in multiple contexts \\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\
\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fcloops`PaVe`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,4,24784086991643699019,
    "Local","LoopTools`PaVe"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229309366*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"9a9653e0-7e66-499a-ade0-1c66a87aa48e"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Li2","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"Li2\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`FeynCalc`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,5,24784086991643699019,
    "Local","LoopTools`Li2"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229346352*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"0fdb969e-f495-477a-8f19-7b1710e62527"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "A0","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"A0\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`A0`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,6,24784086991643699019,
    "Local","LoopTools`A0"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229385231*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"d958d7fa-e3b1-4f88-a700-fd6529fab4ab"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "B0","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"B0\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`B0`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,7,24784086991643699019,
    "Local","LoopTools`B0"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229435814*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"d4ebc2a0-d66b-4f74-9598-eab87c11d825"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "B1","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"B1\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`B1`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,8,24784086991643699019,
    "Local","LoopTools`B1"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229451684*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"264f8e0f-dc7d-44c9-a8a5-3a5a02c78bbd"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "B00","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"B00\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`B00`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,9,24784086991643699019,
    "Local","LoopTools`B00"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.7417082294653587`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"55f01063-bc24-4c4a-920d-1f31d0851299"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "B11","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"B11\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`B11`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,10,24784086991643699019,
    "Local","LoopTools`B11"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229474482*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"0e47175a-5d46-49aa-b43c-8ef2b475e31b"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "DB0","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"DB0\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`DB0`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,11,24784086991643699019,
    "Local","LoopTools`DB0"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.7417082294826937`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"b1f4ccfd-f19b-4f98-bcde-2410b1a30924"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "DB1","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"DB1\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`DB1`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,12,24784086991643699019,
    "Local","LoopTools`DB1"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229490159*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"91227b3b-a0bf-4721-b23d-1ea6f85e0e5b"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "C0","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"C0\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`C0`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,13,24784086991643699019,
    "Local","LoopTools`C0"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.741708229497838*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"1000761a-0ecf-4e3b-8e57-fbea9fd2be4e"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "D0","shdw",
    "\"Symbol \\!\\(\\*FormBox[\\\"\\\\\\\"D0\\\\\\\"\\\", \
TraditionalForm]\\) appears in multiple contexts \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"HighEnergyPhysics`fctables`D0`\\\\\\\"\\\"}], \\\"}\\\"}], \
TraditionalForm]\\); definitions in context \
\\!\\(\\*FormBox[\\\"\\\\\\\"LoopTools`\\\\\\\"\\\", TraditionalForm]\\) may \
shadow or be shadowed by other definitions.\"",2,94,14,24784086991643699019,
    "Local","LoopTools`D0"},
   "MessageTemplate2"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.74163157856299*^9, 3.7416318652770967`*^9, 
  3.741632264102261*^9, 3.741635467024118*^9, 3.741696330494524*^9, 
  3.741696986889058*^9, 3.74170822950492*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"a049fa11-c07e-4bb3-860c-9492621fef3c"],

Cell["\<\
 ====================================================
   FF 2.0, a package to evaluate one-loop integrals
 written by G. J. van Oldenborgh, NIKHEF-H, Amsterdam
 ====================================================
 for the algorithms used see preprint NIKHEF-H 89/17,
 'New Algorithms for One-loop Integrals', by G.J. van
 Oldenborgh and J.A.M. Vermaseren, published in 
 Zeitschrift fuer Physik C46(1990)425.
 ====================================================\
\>", "Print",
 CellChangeTimes->{3.741631873742474*^9, 3.741632264250873*^9, 
  3.74163546736278*^9, 3.741696332534424*^9, 3.741696987056772*^9, 
  3.741708229525345*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"34296b2d-7db1-4dc5-b9b6-a024f078cb43"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vaccum polarization Amplitudes", "Chapter",
 CellChangeTimes->{{3.7416240137992783`*^9, 
  3.741624025926359*^9}},ExpressionUUID->"b3194975-4961-4ed3-a749-\
b4d02d0b797d"],

Cell[CellGroupData[{

Cell["WW-polarization", "Subchapter",
 CellChangeTimes->{{3.741624001165661*^9, 
  3.741624008051319*^9}},ExpressionUUID->"2a4312f0-7a91-4326-b141-\
4d5e31a4f9a3"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
dfaATAmaN28+btw4yeymTlM///xzrRr4ehQPeOGFF+wOlVy5cjnfiISO77//
fsSIEU2aNJHztc67IF++fA0bNhw8ePCmTZsy0rItycnJkkBHjx4dERGhdQeB
jUx3Zb76+uuvS2SLjY1VXbhh5JgmRzY5vsmI0ro8w0aOk7Vq1ZJjphw5M9il
hgcPHpRz3EsvvVSyZMmAgACtPRAaGipxSc6bX375pZ98gq0WgchDlg1EvhvS
165da/fgYNRJQY4t6RuXpGbg5PPSpUsyT8jk4p0XRrHsmFROzinTpk2rW7eu
1q2v+iTRv/POO2fPnlW9He6TecWMGTMaN27s6gM+bJ544okxY8b49FcqcXFx
ctZr2rRpcHCwG3sgPDx8+PDhhw8fVr0d7ktMTFyyZEnLli3de5KpTGIHDhy4
f/9+M2q7cuWK1t9F5o179uwxo1P4KEkKWqPUmS++t2/f3rNnz/z587vxLsiT
J0/nzp03bNjg01+t/vzzz6+++qpMyN3YAzly5Gjbtu0333wjGV/1drjvwIED
gwYNKl68uBt7QI6fLVq0WLx4cUJCgurtcN9ff/01cuTIUqVKubEHZNocEREx
d+7cjPSJjdUQiDxk2UDkuyF99+7ddsekUeFo48aNdts38MreXr16SYMSBpWc
wS07JhWSOduAAQP0vzB1kgT85s2b7927V/U2uebcuXOyB/S/MHVpD8gET/U2
uebatWtRUVHuzcnTq1279tatW1Vvk2tiYmJkD+h/XejSHlizZo3hh7g2bdpo
9VinTh2fzkQw1sSJE7WGioRHrVclJibOnz+/QoUKhrwLSpYsOXXqVN8KKUlJ
SbIHtFaNdpUkXNkDvnVrmBxG5NglRzBD9oAcUeW46smTqpSQ85dReyAsLEz2
gJxhVW9TBkQg8pBlA5HvhvSjR4/aHTMHDx40pP0dO3bYbf/kyZOGtH/gwIGA
+/bt22dIg66y7JhUIi4ubuzYse59aagjKCioZ8+e3r90xw0yKZ0wYYIh8Twt
GeHt2rW7ePGi6u1zTE4N06dPz5s3r7F7INP9daSNOm6YbcGCBYUKFTJ8Dzzz
zDN//fWXgXVu2LBBp7vFixcb2Bd82vfff681TkaOHGn3JT/++KNR8TytUqVK
bd682cub7x6Zn1SvXt3wPVC0aNEVK1ao3jinyAxTjlqG7wGJ6vPnz1e9cU45
deqU1q0inpAz7KeffurTV1ZYEIHIQ5YNRL4b0q9cuWJ3zMgZ2ZD2W7VqZbd9
Q66llDhgW8PwlVde8bw191h2THrf1q1bH330UVfOM66Rs9LMmTNVb6Wen3/+
uXz58ubtgVy5ck2dOtXK52U5NVSqVMm8PZAtW7aoqCgrX/EoIbpOnTrm7YHM
mTNLJoqLizOk2qSkpCJFimj1FRYW5iufisBsN27c0Lp5Nv0jiq5du9alSxed
m20917x583PnzinZFc64fft279693bvVy0kRERESAFVvqCY5RsmRKkuWLObt
gdq1a1t58RY5uk6YMMHw7yzSevLJJ7kvyUAEIg9ZNhD5bkiXw4jdM+ny5cs9
b3zbtm1axxZDPglfsWJFpvuriyj8htGyY9KbJDaOGTPG1AlJqvbt21vzYr+J
EyeaOiFJ1axZM2uuITNr1ixTJySp6tWrd+nSJdWba8dXX31l+EUUdj311FNG
xWf5q+l0VLlyZT956AAc0npmX6b/+03QgQMHSpYsacKof1ChQoW2b9+ucIdo
iY6OLleunBf2QN68edeuXat6c+04c+bM008/7YU9kCNHjkWLFqneXDsk7jVs
2NALeyAkJGT69OmqNzeDIBB5yLKByHdDurB7YeqMGTM8bFZG+5NPPqk1Jj2/
kDI2Ntb2va3a55dZdkx6TUxMzHPPPefKWcVTFSpUOHHihOrt/p+7d+/q3Ntr
hvDw8EOHDqne7v9JSEiw3QnlNYULF/71119Vb/f/JCcnDxgwwJt7IF++fIZ8
vC8Hav2LHxo1apTBllaGe4YMGaI1SFLPwgsXLnRvlUj3BAUFTZ06Ve1uecCa
NWu880mdjWSKqKgoSy0fIWEkLCzMa3tAyLHXUk8r27NnzyOPPOLNPdCjR4+M
9BAEhQhEnrBsIPLpkG53qcl3333Xw2Ztz/cpUaKE3cP1J5984mH777//fqb7
t6cZdeWneyw7Jr3j7Nmzpl7erEXOgKpuunnA1atXTb28WYu8rXbu3Kl66//r
9u3bERER3t8DMhNev3696q3/LzkEtWvXzvt7ICQkxJDbxnU+4bepVavWhQsX
PO8IPk1nnMj8MDk5+YMPPvDO9VQPGDZsmEVSqkx7vHM91QN69uyZmJioeuv/
a9myZd65nuoBL7/8skVWFNy0aZNteW0ve/bZZ2/evKl6630egcgTlg1EPh3S
7S5sMnjwYE/avHHjRoECBaSdFStW2L3u66233vKkfZkx5siRQ9pZvXq1J+14
zrJj0gtiYmJcugU7d+7cTZo0GT58+Lx58yRe/fzzz7/99puc0RYtWjRmzJgX
XnjBpbW2ZID9/fffavfAvXv3atas6XzN2bNntz38d86cOevWrfvpp5/27Nmz
ZcsWiVpRUVEvvfSSSx+/y0xA+cPEZWb4/PPPO1+z5Erbw39nzZq1Zs2a3bt3
yx749ttvlyxZMn78eJloyVnMpdZ++OEHtXtA0kH79u2drzlr1qy1a9fu16/f
jBkz5PC1a9cu2QPff//9V199JedZCfulS5d2vrWgoCDZjZ5vhex5/Y5kZEpG
87wj+C55s+fLl09rhLh0LU1AQEDFihW7des2adIkmSTs2LFD3gXyXl65cuW0
adMkcj711FMu5X05g6jePf99vpJLt+E//vjjnTp1+uCDD77++mt5c8ke2Llz
56pVq6ZPn967d2+ZmMm72/nW+vTpo3oH/EdO6y49b1QyhRzx3nvvPTn6yTFQ
9sCPP/4oR0U5NsoRUo6TcrR0vrU2bdooX7BF6nfpM4rixYvLsVfOfXIGlPOg
7AE5J65du1bOj3KWrF+/vpzjnG9N5ldWXrDFJxCIPGHZQOTTIb1p06bpx0zX
rl09aXPYsGGZ7q9FLDPYunXrpm9fjj+etN+jRw9ppHHjxso/P7fsmDRbfHy8
k6u2BgcHR0ZGyunb4Ud8coaVedqAAQOc/CBaTvGXL1/2zvbarVZitTN1yrxF
cpzMPyXU67cp4/mXX34ZPny4k5cLFi5c2JmHFJtHptPO1Cnz7RYtWshM7Nat
Ww7b3L9//9ixY518oLCkBrUPUh8xYoQzdcrs/fnnn1+wYIEzDw86dOiQTNuc
/Lwie/bsnl/5f+XKlaJFi+p3JH9EmTkrfMdBORkAzoxJHU8++eTUqVOdWfHs
/Pnz//73v52/tVntsqKSMZ1MlI899pgEc2c+YZZ35ezZsyWpObkHPP++zxMS
MG1JwSFJpnJ8c+aOLTlayjHzueeec/LTj6FDh3phS7UcPXrUyRO3nN3kHOfM
1YC3b9+W86acPZ38zKpbt27KZ8U+jUDkCcsGIp8O6V26dEk/Zpo1a+Z2g9HR
0VmyZJFDiu2xBS1btkzffseOHd1uf+/evXLElvb/+OMPtxsximXHpNk6derk
8Hwh8XzQoEFuPGLyxo0bMt/Q+dYmVY0aNVRd5DZw4ECH5Uk8792797Fjx1xt
/M6dO5MnT37ooYccdlG+fHlVF7nJRMthefI+7dy5sxs5Oi4u7rPPPpPpnMMu
JMyqWilFQoTD8kSrVq3cuDsjISFh/vz5ZcqUcdh+wYIFjx8/7uG2/Pjjj858
a5MzZ87+/fv/+eefHnYHXyR/d7fXbK9ateqaNWvcmEZ+9913tlWL9cnBdsOG
DWZstUOSN/PkyeOwwnLlyi1dutSNb3t3794tUzKH7cufRtUqaidPnnTmbFWq
VCmZKbnxbe/+/fvbtGnjzNjz/Mph91y+fNmZ9RKLFCkyffp0NyYtR44ckQDu
TFSPiooyYfv8BYHIE5YNRD4d0iVGpR8zkn3cbvDFF1+UFvr27Wv7f+1+1/bc
c8+513jqJ1EyGNyu0ECWHZOmst1fo69p06YeBoeYmJgBAwY4PCtJWDZqu5z3
9ddfO9wDjRs3luOzJ73cvXt35MiRDi96lBRs1HY5b/v27Q7/NNWrV5fJlSe9
yHRuwoQJDpeiUvIZ8p49exxe2ynTcg+XDkhMTJw6darDr6hkV3u+dNLy5cud
v8b4qaeeGjFixKpVq+RtrvwDfHiNG4+9LlCgwLJlyzzsVwK+w4s9JCmfOXPG
kM10ngSuxx9/XL+wXLlyzZw508OLseWQ+9hjj+l3FBoaevToUaM2zUly5HF4
25ccweQ45uGN8z/++KPDZfPlmKxkTVGHn6LIWUzis8Or6fRJ0LN7PXZaEtk2
bdpk1Hb5GwKRJywbiHw6pL/zzjvpx0zp0qXda23r1q2Z7t99nHpV5PDhw9O3
X7VqVffa/+qrrzLdf/LI1atX3WvBWJYdk+Y5e/as/rcGMs+fOHGiUfN2CQ76
N3lJhpVztyF9Oen69euFCxfWKUmMHj3aqPvjNm/e7PD6/3Xr1hnSl5NkpuHw
G145Kxl1f9zu3bttt3TpmD9/viF9OUlmm3IQ0y+pQ4cORl3mIXMzhwll0qRJ
nnc0e/Zs99b+yp49u5f/BFBi9erVLg2MypUru3ExlV1y0q9Xr55+d61atTKk
L+eNGzdOvyQ5VBq1fMqtW7cchsEGDRp4+dbsjz/+WL+kIkWK2L5G9JwcUTt2
7KjfXaVKlbx8a/bixYv1S8qfP79RsxTZtFdffVW/u/DwcC8/kuPGjRuDBw8u
Xrx45syZ5cw4Z84cH/3klkDkCcsGIp8O6dOnT08/ZvLly+dGUzJxta0kNmXK
lNR/nDBhQvr2S5Qo4Ub7Eg1sl79OmzbNjZebwbJj0jx279lJFRwcLMcNY3uU
jCbnOJ1OZRbk4QfULrF7QVQqOUl5/sCOB8gMR+Y5Op0WLlz4+vXrxnaqQ07H
OsUEBAS8//77xvb4zz//6K+oJucpo7KAM/71r3/pFCNGjBhh7Czl3Llz+k9S
yJYt219//eV5RwsXLnR7hWqZrnteAKxMRrXzq2VWq1ZNZu8G9h4XF+dwnUZD
HnngpH379um/WWrVqmXs/DkpKalv377WeRvKkTl79uw6xVSsWNHYI7OMwFGj
RunvAW9e8n3hwgX9W9ElMnt4TV16H374of7F//379ze2Rx3yHk9/hcOAAQO8
VoCBCESesGwg8umQvnTp0vRjRt7+blw8abtD87HHHkv7MeasWbPSt58zZ043
SrVNjMuWLWudFSwtOyZNsmrVKp3zQlBQkPyCGf3u379f/9vkQYMGmdFvevpf
JMkbZ+7cuWb0+/fffxcsWFCna69d9L5z5079L1snTpxoRr+SUvVvUW/atKkZ
/aZ38OBB/UWiZA5pRr/Xr1/Xv9pT0pMhzwv+7rvv3HvSsRwB1D4CBl7www8/
OD8kZD4wc+ZMA1cOSU5Obtu2rU6PMnS988TA+Ph4SaA6lVSrVu327dtmdK2f
0yU1e+fRJ/K3sLsQViqZrZn0Hd+YMWN0+s2SJcvevXvN6De9Fi1a6FRStGhR
k27BkOin069MReQwbka/6b3yyit2C/jll1+8U4CBCESesGwg8umQbrseI70r
V6641I5MIG3zugcWb1mxYoXd9uUE51L7MkW3fWC7ceNGl15oKsuOSZN07dpV
57xg6vq6csbRuTdZYuOOHTvM691G3hT6y+OYur7ub7/9pn9v8sqVK83r3ebO
nTvh4eE6NXj4sBJ9R44c0Q+Ps2fPNq93GzkhVq5cWacGU9fXPX36tP41FRMm
TDCko+PHjzuzWld6vXr1MqQAWNkLL7zg0qgoVqzYvHnzjLoMOy4uTv/WeCnP
kI70jR49WqeG0qVLm/coBIkM+s8WqV27thcuep80aZJODYULFz558qRJXcsx
1raotZby5ct74QPD+fPn69SQL18+Zxaxd5vda6dTlShRwpnHqXho3bp1WgWM
GDHC7N4NRyDyhGUDkU+H9H379tkdM65eOWlbbyH9l1nbt2+3276rn3Xb4qEn
qyyawbJj0iQ6N8R5YXI+depUrd5FyZIlTb3kW2YFrVq10ilAZk3m9W6zcOFC
nQIKFSokh25TC7D7mXmq+vXrmz0zlFOezmV+uXLlMvsrJP0rLStVquTq2dZV
P//8s85agsHBwW6sJG+XDPgZM2a4+pW61LZr1y5DCoBlnT592qXnQdvUrFnT
qOt+r127pv+Uxs8//9yQjrTs3LlTZ91IeRuavdjy3bt39e8Aeu+990wt4ODB
gzpjwAvHgYSEhCpVqujsgSFDhphawPHjx/XX51mzZo2pBcghulGjRjoFdOvW
zdQCLl68qLM+T8+ePU3t3QwEIk9YNhD5dEg/deqU3THj0jIXMoAz33fkyJEH
/pOcquy279JDfH799ddM9+/2NeSmywdIm19//fUst6R+2RQZGenGy2fPnr1u
3TpVD5Byg+2Bj+l55zNbCYD63+7VqVPHvJvT5Yyv03WBAgUuXbpkUtdp6X9Q
ULFiRWNvAk1LZn06XefIkcPzB4E5o3fv3jplhIeHm/eG0n+uQdasWY1aH0mf
/ld4El4M/ENcv35d5hsuJbKnnnrKy0tXwfv0jwZaQkNDjZq/6XyFl+n+Bc/m
rXF9+PBh/Q+vjLqgRZ9M0nQ+rwsMDFyyZIlJXcu88ZFHHtHZAzJVMKnrtGQa
qf/gyOnTp5vU9eXLl/VXT5U5oUldpyV/CP07Ad955x2TupYpnxzqdbr+6KOP
TOraPASiDBmIfDqk37lzx+6YcekzQNtiYnavdD137pzd9p2/ODl1pRozPheV
SbV7qxkbqHDhwobcSeoFMvlPP10PCAj4/vvvvVPAiRMncubMqbMzW7RoYcZX
me+//77+H3H58uWGd2qXzA30b06X46QZK7tKPtVfqeazzz4zvFO7ZG5QokQJ
nUqqVKlixjUV8ifWfxzev/71L8M7tcvhzbAyezx//ryBPcqoe+uttxyusZ/K
m4t3QRX9FcN0DBo0yJBTnv4Fzzly5Ni9e7fnvTxAzkHFihXT6deopSGcMWLE
CJ1KsmbNasYnFTKLLlu2rE6/TzzxhIGrEOj78MMPdSqRI/bSpUsN7zQmJqZa
tWo6/RYtWtS8T8sfMGfOHJ1K5Kxtxqn57t27+l/ih4WFuXqJuBUQiDJkIPLp
kC5/cbuLIDn/cffGjRsz3X/GhBy40v/XuLg4u3+Ib775xsn2bY+30GrfQ9u2
bTN1vDkjJCTEm4uTe0gOVmljcpYsWf797397s4AZM2bo789nnnnGwKGSnJxs
99GZabVv396o7pwhaVG/nqpVqxq7dNI777yjn9CbNGnizUeufPfdd/r1PP74
4zKXNrDHTz75RD+hy5zNw6cAu8ThstLFixc39nbIL7/8Un+5vLRKlixp9mX/
UC46Olrnkm99HTp08Pz9IjlI/9GEoaGhxq5lumfPHv3L7I16yIKTJAtLItap
R96zxj4b8ciRI48++qhOj15+UrnDp7RL6Jg6daqBPZ46dUp/AU85N23evNnA
Hh2KiIjQrycqKsrAE/SlS5ccPq7dvKs4TEUg0v+zeoEZgcinQ7qwe9Jx8kqV
hIQEmQ/L7+s8dsru5+2zZs1ypv27d+/azsKGP9bKRt6SK1asGDdu3EAVJP29
9957PrcG5rlz5yZMmDBy5EjJbt6ckNjIn6xx48b6b3OZt+zfv9/zvi5evKi/
dqt46KGHvP+Qynbt2ulXJfMoQ24JvH79eufOnfX7yp079+nTpz3vyyUOnxUr
f5ctW7Z43tHt27dT77TSIqcVUxcIssvhA5rz5s0rBzfPO5J5xejRo/U/FUlv
zpw5nncNi4uPj5cjpEwh5CCgf+Fxei+//LLn35hs2rRJf2QGBQW9++67hnyA
tmDBAv2lO8XkyZM978glMn/Q/6hE9o+crA35anvlypX58uXT3wNjxozxvCOX
yCTE4f04ffv2NWSl/a1bt+p/SiP69OnjeUcuOXv2rP7d8aJjx46GXGC2e/du
/cVjRevWrT3vSBUCUcYLRL4e0m3P8nuAk08R+vjjjzPdvxNW52xr99owJ2/a
euuttxy2D39z8uRJ/fuwMt3/PH/YsGFun5dlvM2cOVNijn4vMv9ZvXq1sVvn
jCtXrhQqVEi/tsDAQJmZuH1elsP1okWLHPYiTHrqnD75y5YsWdJhbZ07d/bk
Fif54+pf2mrz4YcfGrhpTpJ8pP/kdBvJUKdOnXK7l++++07/1kstlStXNnBj
YX1yxDh8+PCUKVP0H3+Q1muvveZ5v7169XLY0ZNPPvnTTz+53UV0dLTDT4ZF
vXr1lKzG8MYbbzisrXTp0t9++63bXcgxpGXLlg57kamakkto9NeZt5F048ll
FXIecfh5dab7H497YX2e9ObNm+ewNjmbyznd7a/UZS7Rr18/h5dDFyxY0Lzn
GngBgSjj8fWQXr9+/fRjxpnFuq9evWpLMdu2bdP5NbszyeHDhzts/8yZM7YP
SL12yzN8xaZNm/Qv97UJCwuTw9q1a9ecb1nmGHPmzNFfODeVNG7eNuqTOWdo
aKjDCnPlyjVy5EiXgqoc/xcvXlyhQgVn9sDrr79u3jbq+/PPPx1+fZDp/iWv
AwYMcOm7fpnGyHTu6aefdmYPdOzY0ZuX+qd14sQJh1/rZLp/yesrr7zi6rr3
mzdvtntqcJ5Li+0gI5GjkzOZLpMRD+6MjY2tU6eOM309//zzP/zwg0uNy0Gm
U6dOzlzVL+lM1RqwiYmJOg9eSUve0a5eif3PP//I0cOZW10eeugh76wdmp4c
gbt06eLMHqhWrdrKlStdOmLLuUPOIM6cbXPnzm32qv46Bg4c6MwekDO7nN9d
SnkysGUW4fCbkUz3b/fw9cM+gSjj8fWQbne9aPlHhy/s379/JieubLG7vkT3
7t0dti8nRycrgR+aO3euk5fghoSENG/eXH7/2LFjWmdnOQ2tXr06MjLS4eV8
qXr06OHlTX6ABEn9G6VTZcmSpUmTJjNmzDh69KjWdz1yitmwYUPv3r31F6ZL
S+bhaj/RlbNhcHCwM6XKjmrQoMG0adMOHTqkde1rTEzM1q1b5bCmv3BxWtKm
F57Gq2Pv3r0OL8G1CQwMrFmz5sSJE3///feEhAS7rd28eXP79u1Dhw7Vv+00
LZmXav0nmTZ7eW/AUuTt6fByF8k+hw8f9rAjOXY99thjTo7YMmXKjBo1SqKE
1nVW8fHx+/bte++99/Sf8JVWWFiY9+/8SuvOnTtVq1Z1stoSJUoMGTJE/jry
frfbmhwf5Cjx0Ucf1apVy8mFpOQotGfPHi9vdVryV9NfyiwtOcK/9tprW7Zs
0brSTM5rMiw//vhjOcI7eZLNmjXrd9995+WtTkvO7PoPf0lLzvISPNevX6+1
vJu0Fh0dPXPmzGeffdaZL0Qy3T/FGHKDlVoEoozH10O63avF6tevr/8qmevK
sUtmyA4/O23btm369l988UX9V/3000+Z7h/3JFi5tDnwH2+//bYz5460cubM
WaNGDRl+ErElkMoRT4a6Mxd1P+D555/XSjre9Omnn7p6s7DMip9++ukXXngh
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
Bw4ePHjYsGEjR478wQ9+MGbMmKuvvnrChAnXXnvtlVdeGf+TSy655IILLjjv
vPP++Z//Of7gPn36xD/xlFNOeeSRR6oyw5QpU0rX6du376BBg+LrX3jhhf/6
r/8aHyC+9TXXXDN69OiLL754yJAh3/ve9+KPOfnkk+NDFhcXp+qLAACUEukA
EK5PPvnkgCo7//zzKz3Apk2bKrfpunXrUvh1AAD+W6QDQNh27tx51llndejQ
4eCDD87Pz9+vTK5Xr15BQUHXrl1ffvnlSg+wZ8+e+ABNmzat+L6NGjUaMWJE
LBZL3ZcBAPgfIh0AImX37t3PPffciSeeGBTIBx100E9+8pM333xz165dKdw3
XtwbNmy44447mjRpknDfLl26TJ48efny5Tt37kzhvgDAN4l0AIigVatWBRX6
mjVr0rr1W2+99a1N27Zt+9xzz6V1UwCglEgHgAiKxWLNmjUrG+mDBw/OwO7x
Kv96xz59+mzevDkDmwIA/y3SASCqTj755LKR3rt373TvW1RU1KBBg9Lt+vbt
u2fPnnTvCAB8TaQDQDRdcMEFZSO9oKAg3fvOnj27dK/OnTv/7W/+kQAAGSXS
ASCabrjhhrKRnpOTk9aXtouLi7t06RLfKD8///3330/fRgBAQiIdAKJp5syZ
Cd87btWqVenbdMaMGaW7xH+Rvl0AgCAiHQCiacGCBQkj/YUXXkjTjp9++mnD
hg3jW5x22mklJSVp2gUASEKkA0A0rVmzJmGk/+Y3v0nTjt///vfj69epU+cv
f/lLmrYAAJIT6QAQTfv27atVq1bZSJ84cWI6tnvqqadK1580aVI61gcAKkKk
A0BkHXbYYWUjfciQISnfaNu2bQUFBfHFjz76aPdcA4AQiXQAiKzTTz+9bKSf
dNJJKd9o7NixpYu//PLLKV8cAKg4kQ4AkXXJJZeUjfRmzZqldpe333679Pvq
R44cmdqVAYD9JdIBILImT56c8L3jtm/fnqotioqKunbtWtr+mzZtStWyAEDl
iHQAiKxZs2YljPTCwsJUbXH77beXrvnQQw+lak0AoNJEOgBE1muvvZYw0ufN
m5eS9T/66KP69evHF+zXr18sFkvJmgBAVYh0AIisTz75JGGk33HHHVVfPF7l
Z511Vny1/Pz81atXV31BAKDqRDoARFZJSUmdOnXKRvpVV11V9cX/8Ic/lK72
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
IkKkAwAAQET8P6pM1Gc=
       "], {{0, 666}, {1335, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> Association["Software" -> "gnome-screenshot"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{257.9999999999995, Automatic},
     ImageSizeRaw->{1335, 666},
     PlotRange->{{0, 1335}, {0, 666}}], " ", "+", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
tG/fvi07I1Kp2rVrK4zMIkWKyA4IAICzYxoOiRh+AOCEJk+ezEQbTujZs2dp
06ZVGJyBgYGyMwIA4OyYhkMihh8AOKFBgwYpTLRbtmwpOyBSqcOHDyuMTGHL
li2yMwIA4OyYhkMihh8AOCHlF4QNHTpUdkCkUt9//73CyEyXLt3z589lZwQA
wNkxDYdEDD8AcEINGzZUmGtPmTJFdkCkUgMGDFAYmZUrV5YdEACAFCD1TMPj
4+NHjBhRrVq16tWr16tXz9/fv0WLFu3bt+/WrVu/fv0GDx4s/uvo0aPHjBnz
2WefDRs27KOPPhL/3qNHj44dO7Zu3bpp06aNGjUSvyh+vVKlSj179hQbVG7x
+fPnYgsVK1a01OLw4cNfb7F79+7JW6xbt674dXFhI/5TbGys+v198OBB7969
q1SpUqNGjfr16wcEBLRs2bJDhw5i+/379//4449HjhwZFBQkAgQGBorLKpGq
TZs2TZo0ES2K5kQex/pbldQz/AAgBRHnHYW59owZM2QHRCrVoEEDhZEprpRk
BwQA/A/m4E44B3+Rmqbh27dvV7hysMOlS5eUW1y2bJm2LZ4+fVr9/k6fPt3B
5h49euRYl1uXeoYfAKQgylWgmTNnyg6IVMrX11dhZM6aNUt2QADA/2AObisD
5uAvUtM0fNOmTQ4Pgf/Kly9fXFyccos//fSThi3myZPn2bNn6vc3ODjYkebK
lCnjWH+rknqGHwCkIPXq1VM4QYjzi+yASKUyZ86sMDL/+OMP2QEBAP+DObhN
jJmDv0hl0/C///57zZo1P/744zfffDNmzJjmzZu7u7ur+ThKlizZvn37oKAg
8Ys//PDDsmXLbt68abW5xMTEPXv2rFy5csGCBSEhIV9++WWzZs3Sp0+vpkXx
ufTp02fSpEmzZs1atGjR6tWrIyMjbdrZ2NjYzZs3f/vtt8OHD69ataqaRkuV
KtW7d28xdDdu3PjkyRN7u9kGqWr4AUBKERAQoHCyGDlypOyASI2io6OVL2MO
HDggOyMA4FXMwZUZPwd/keqn4WfPnvXy8lL4UDp27Hju3DkNWzx27FiGDBkU
WhQfRFhYmIYtml25cqVbt25vbNHT03Pw4MHa7qZKqXz4AYBz6tWrl8J5qlOn
TrIDIjX6559/FIalcPXqVdkZAQDWMQeXOwd/wTT8xQtLn4vQoUMHk8mkeYvN
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
/efKdvbs2bI7Q5WIiIgyZcrI7rD/GDBggOarhh4+fFjNC467devmYguWwjnN
mTNHeSgmPRQ2d+5cJzn463SrnuZ27Ngh9xsTM/GpiU9Zdmeocv78eSk3Zr9O
XBwmJCTI7g/rHj582KhRI9m99R+NGzd2jfW7UjTm4BIxDX+RbOGm1x08eFCr
VrZs2WLe5v/93/998sknllrU8FbYpEUUZ86cqdU2tcXws0lcXJysm7TfKHfu
3GJ6KLtXrJg2bZqRSycpS5cunfMvTrhmzZoMGTLI7qr/GjdunOwuseLEiRP5
8+eX3U//1aZNG82fz1JZfH7//fe5qIberl27pnxUr1evnvixiRMnOs/B39vb
e+XKlbJ7zopVq1YZuW6eMvHZiU9QdpdYcfTo0bx588ruqv/q0KGDk6+qFxkZ
WalSJdn99F9VqlS5ffu27F5J1ZiDS8Q0XPj2228tjQet7kqNj483rxdavHhx
cYj+8ssvLbWo1Zr/T548yZcvX5qXq6w77U2PDD/1TCZTz549LQ0bBe7u7uXL
l+/Vq9esWbM2b968c+fOv18SI23r1q3Lli377LPPGjVqlCVLFjs2nj17dme+
IygkJMSOnUrz8h5+cTX11VdfiSPA9u3bzT12+PBh0WNr1qwRf78tW7Y0/33Z
Km3atM78oNO2bdvsex1wnjx5mjdvLs7mf/zxh+gl0VfmTvv3v/+9YcOGr7/+
ulOnTiVKlLBjy8K0adNkd4xF4eHh9r3cJFOmTA0bNhw1atTvv/8uemz//v3m
Htu1a5f4O50zZ06fPn3effdd+579FKNX2xubHz9+rPIdvuKM4/zFYaR0FStW
VB6Hyus/KChWrFjHjh3FIUscuF4/+E+YMEEc/O2b+Ht6em7cuFF2z1m0adMm
+9Y0EwfAFi1aiJ4R/ZP84C96z3zwF/1p990yYsomu2MsunDhgsJKswoyZ87s
5+f36aefLl26VPSYuBhLfvCfPXt27969xeWxmjswX9elSxcnXITW7NGjR1b/
ct/I29u7Zs2aH3/88U8//SR6bM+ePeYeE/+P+J/iHwcPHix+wL7l3ytXrixO
cLL7JvViDi4R03Bh8eLFlsbDokWLNGki6QbmdevWvXi5roveY37MmDHmDTrz
VQfDT73PPvvM0ph5I3H9EBAQ8P3339+8eVPN9sVBctu2beJMauuUVswNr1+/
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
ejVv3rxqMov+IHqFOHXXqumQkBA19+kbffTRR1q1a6XHjx/7+PiojN25c2cN
h5znz59v0KCByqYzJGs2cjif+/fv//rrr+IgJfpkpjN6pTdjxgxt86i/hl/s
qMXuWqsTaXN3/j/99JMm7VrvwoULmU7ha6T5zn/Pnj3q57ofP368Vu1aSez8
X1F3VUmOZzt/DW8NFmdZ9erVU9l069ats8g4UcRQ+dWYUL9+fQ2voRVHXvER
qGxaypME7YkxOOTat2+fqf6g/mZtsUc1Hmq7du2a6Yt//PFH6/t8ZGSkcbYK
NS0C2kpMTFR/3NfpdP369bNy8nxxyN6+fbvKrwiNZs2apdX6akLlpRpGgYGB
hw4dsrLFY8eOtWnTRn2j3bt312RNtbJw4UL14atVqyZGW1aeYV67dm3QoEHq
R46iQ0p5NIwpYWFhamYxMipWrNjXX39t5cVy9+7dmzJliprpQJWJbe5Yz9eA
Q4iKipo5c6b6om6OZwcss8YCaqiZvz2NGJweOXLEyhbFEtQPcoX33ntPkzXV
yty5c9WHr169+rZt26zc+V+9enXAgAHqd/4BAQEaVp+sFxoaqv5SzBIlSixd
utTKnX9sbOzkyZPV3FplJI44sp46kSFxuDdey6GGOMaJI5043lnTotjg4pgr
toPKRsXRfP/+/Vqtb9bEGBxynTlzxlR/UP/sBuM91zlz5lSzi0ubUdyaPm+c
5Fxli4DmxF7XePmlSq6urt26dQsPDzf3VC0+Pn7NmjVqHh3yvKFDh9poxS2W
nJycfq4nZW+88caOHTvMnQNZNLRr1y6VdwGkadKkSVa4e+4FCjMHZsjf3//b
b781dx5F0SfFoKlXr14qLzMzKlu2rO2eumWxdevWmXVTTPHixb/88ksL7kO8
fPny2LFj8+XLZ9YHpEDzm3EAI71ev3btWvXXeOTNm/fChQsaBhD78ObNm5v1
59CsWbOdO3eaO1mQaOjnn38W7zW3Lbs9dUs9cQZu1lpUrVp11apV5k7RJnb+
hw4d6tGjh1k7//Lly2eRO/SfJ1bfrJ1/yZIlZ82aZcGKXLx4ccyYMSov1jUS
L7bbU7fUO3r0qFlfYYjjnTjqWTCvkThVEMdZcbRV35b4KMVeyxZrnaUwBodc
t27dMtUfxKBAzRJOnz5t/Ppg8uTJal5/9uxZK/v8r7/+any9yhYBW4iMjFT/
TUqaEiVKDBkyZMuWLQrzz6SkpIg/q6VLl7Zt21bsZs1tolOnTuK0356bQiVx
glqrVi1zV6dAgQLdunUT5wOXLl0yVUMTP79y5cq6det69uxZsGBBc5uoUqXK
/fv37bw11EhNTe3atau5q+Pp6dm6devFixefPHlSYRgldv7btm0bNmzYyy+/
bG4T3t7eNp1m2RribNPc1RGHsAYNGog3/v777wrXn4tOsnfv3okTJ/r7+5vb
hKurq/L37IUKFRJ/+PbcUMhWEhMTRddVOdivWrWqtpPaPXz4sHr16ub+1Xh5
efXo0UPs/MXAU2HnL34rXvP8w3/Vq1atWtZ8/JDY+au/cSaNOGF48803lyxZ
curUKYWdf1RU1NatWz/44IOSJUua20ThwoXFsdiem0I9lU+Ce57YLb/22msz
Z84MDw9XuLT13r17ISEhEyZMsOCRfO7u7rt27bLndlBvx44dZhUAjcQR8OOP
PxZHQ4Wrg8TGFMdTcVTNIremZk2MwSHX06dPTfWHNm3aZPp2cfx94403xIvF
OELlzZt///23NX1eDG+N10WobxGwEXO/SXlBkSJFmjRp0rFjx759+w4cOFCc
xIrzt1dffVXlnAAZEgdcW0xJrRXx52/W7QkvyJ8/vzhha9eu3XvvvSe2mPhv
+/btGzZsqH7yh/TEnsTc52Pakxi7GfexlvH09AwICBA78+7du4st1q9fv06d
OokFmvWt3AvEQCOL3wmucmrrDLm6uopT3MDAwC5duogt9v7774uxWPPmzcuX
L2/xMnU6nRiXGb8+U7Bv3z7ZWw5O7tChQyVKlFDTaYOCgrRtWox3SpcubfEf
kS12/iJPVFSUtqupIXF+3qhRI4vXTuyo69SpI3b+4tRCbDFxmiF2/uKUQ/0t
Oenlzp07PDxc9oZRMnjwYIvXTuz8q1Sp0rJly7Sd/zvvvCN2/tactIidv92e
oGSZpUuXWjOrvDgyik0kNpTYXGKjiU0nNqA4hqp8ikqGhg0bJnur2AljcEhn
6rbWunXrZvrezZs3G1+sflZVMaixps8vXrzY+OLscK0gsr4zZ85Yc2arra5d
u2apW/UzFBMTI07dZW+qf9SuXTsL3tb0ArHP7Nmzp+xN9Q9x6D916pTsTZK5
OXPmWPD9oy3kypVr06ZNItLevXuVXzlmzBjZmw3OLyoqSs0txm5ubhEREdo2
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
+/fvy073P1avXq38wQmhoaGyYwIAAAAAgCzEz89PoZJQvXp12QFtJSEhITw8
fO7cuT179vT39y9YsKByUSVnzpy+vr6dO3eeNm3azz//fPv2bVnJz58/nzdv
XuW01apVkxUPAAAAAABkTZ988olCMUGn00ksd9hCVFTUwoULW7Ro4e7urlxI
USa2TK1atcTWO3bsmMFgsFv+2NhYHx+fTONt3LjRbpEAAAAAAIBDCA8PV64n
7NixQ3ZGDTx58mTp0qWvvvqqTqezpviToZIlS06YMOHatWu2Xot79+6JVcg0
T0BAgD0LUwAAAAAAwCHo9fpChQoplBSmT58uO6NVIiMjx4wZ4+XlpV3VJ2Mu
Li6tW7fesmVLamqqLVbkr7/+qlGjhpoYBw8etEUAAAAAAADg6Fq3bq1QVejR
o4fsgBa6fv16nz59XF1dtav0qFKzZs2QkBBt1+XAgQPFixdX0/rQoUO1bRoA
AAAAADiNsWPHKlQVHHGe4ZiYmFGjRnl6empU17FEq1atzpw5Y/26JCcnf/75
525ubmoa9fHxefTokfWNAgAAAAAAp7Rq1SqFwoK3t7fsgOb57rvvRGaNajlW
cXFx6dmz55UrVyxel19++aVatWoqm8uZM2dERISGWxIAAAAAADiZ33//XbmU
odfrZWdU5fbt2x07dtSifqMlNze3Hj16nDx5Uv2KJCYmbtiw4bXXXlPfik6n
+/bbb223bQEAAAAAgBO4cOGCcoUhNjZWdsbM7dixQ3maa+n8/PzGjx+/d+/e
+Pj49PkNBsONGzfWrFnTrVu3AgUKmLvwTz/91P7bHAAAAAAAOJbo6GjlCsPl
y5dlZ1RiMBimT5/u4uJiaXnmRfny5Sv4XzaaXPrll1+uW7du8//y9/fPkyeP
xUsbOXIkj4YHAAAAAACZSk5OVi4yHDlyRHZGkxISErp162Zx/cTV1bVq1ar9
+/dfvHhxWFjYpUuXnjx58vzy9Xr933//ffz48e+++y4oKCgwMNAOD503y+jR
oykBAQAAAAAAlZQvRNmzZ4/sgBmLj49v2LChBZUTLy+vbt26rV27Ni4uztxG
k5OTQ0JChg0b9vLLL1taudGGi4vLzJkzbbFhAQAAAACAsypRooRCtWH9+vWy
A2bg8ePHjRo1MrdyUqNGjWXLliUkJFgfQK/Xb9++vV27dja6a0xZ/vz5N2/e
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
       "], {{0, 691}, {1538, 
       0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> Association["Software" -> "gnome-screenshot"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{280.13333333333304`, Automatic},
     ImageSizeRaw->{1538, 691},
     PlotRange->{{0, 1538}, {0, 691}}], " ", "+", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
t1544YUim4SqVasOHjx4+/btxd/suHHjGjVqVOSWO3XqVHq7BgAAAKSEJUuW
1K5dO7pDOProo7/88ssSbHzz5s0XX3xxkR3FO++8k/T9AgAAAFJI+/bto9uD
Vq1abd68eVeWGDBgQPQSTZo0ycvLS9YeAQAAAEX64YcfZs6cOWbMmMd/4o03
3li+fHnZh3nmmWeKvHdi7dq1u77QNddcE72Qp2UCAABAadu2bdv48eN79ux5
0EEHRQzpBxxwQKdOnYYNG7aLdywU00cffVSpUqWIPJUrVy7ZNzv+XV5eXps2
bSLW6tq1a1IWAgAAAP7dkiVLbrzxxpo1a0bfP/Az8c9fdtll06dPL71gn3/+
eZHvFR04cGASV1ywYEHFihUTrVWlSpUffvghicsBAAAAcStWrLjkkktycnJ2
qpr4qczMzMsvv3zNmjVJz/bxxx/XqVMnevWTTjopPz8/uevecMMNESsOGzYs
ucsBAADAbm7EiBFFNgDFtPfeez/99NOxWCxZ2YYOHRr9zY49/nE/w9y5c5O1
4o+WLFmSmZmZaNFu3bolfUUAAADYPW3atOnss89OSjXxUy1bttz1b3wsW7as
mNkGDRqUlKPx7yKeRHHMMceU0qIAAACwW1mxYsVxxx2XvFriX2RnZ3fv3n3h
woUlCLZhw4a77rqrdu3axVmoc+fOSbxh42cGDx6caN1KlSrt2LGjlNYFAACA
3cS8efMaN26cvEKicDk5OV27dh0/fnwxZ/mZM2f27NmzVq1axdz+0UcfvWnT
ptI7SlOmTIlYPVkvDQEAAIDd0+rVqw8++OBkNBDFVatWrY4dO959990vvfTS
559/vnjx4rVr165ateqbb76ZMGHCI488cvHFFzds2HCntlm/fv1vv/22VA/U
+vXrMzIyEgWI70uprg4AAABpbPv27a1atdqpKiArK+uAAw446B+KfGRl2Tjw
wAPnz59fBodr//33T5Th3nvvLYMAAAAAkJauuOKKYpYAzZo1u/vuu2fMmJGb
m/vjj+fl5c2ePXvIkCHHHHNMksqGnda4ceOSPd2iBE455ZREMS688MKyyQAA
AABp5sMPP4x4deaPWrVq9be//a3Irb3//vul95jNRNq2bbtmzZoyOFYFevTo
kShJgwYNyiwGAAAApI0dO3Y0a9YsevzPycm5//778/Pzi7nNWCz2zDPP1KlT
J9k9RCGysrL69OlTxu/OiHiRR9zs2bPLMgwAAACkgcceeyy6Aahdu/a7775b
gi2vWrXqv//7v5PaRvzcCSec8NlnnyX7kBRt9uzZEaluvvnmso8EAAAAqSsW
ix1++OERs3b16tVnzJixK0u88847J510UrKbiT0OPvjgYcOGFf+mjuSKH7e6
desmyrbvvvtu3bo1SDAAAABIRe+8805ECZCZmfnqq68mZaG33367TZs2xXnS
RZGOPPLIYcOG5eXlJSVYiXXv3j0i5MMPPxw2HgAAAKSQc845J2LKvvLKK5O7
3OLFi++///7jjjsuKytrZ3uJBg0aXHfdddOnT09upBJ77733ItLWq1dv3bp1
oTMCAABACtixY0f16tUjRuz169eX0tLx4f2VV1659tpr27Vrd9BBBxXaV9Su
Xfv444/v1q3bo48+Onfu3FJKUmKxWCyePKKjuOyyy0JnBAAAgBQwbdq0iPn6
lltuKbMk27ZtW758+VdffRWPNGPGjG+//XbDhg1ltnqJPfTQQxEHMCMjY8yY
MaEzAgAAQHk3aNCgRMN1ZmbmokWLQgcs77Zu3brffvtFdBS1atX6/PPPQ8cE
AACAcu28885LNFkfeeSRodOlhj/96U8RBUVc3bp1Z8+eHTomAAAAlF+nnXZa
orH68ssvD50uNeTl5R199NHRHcWee+45efLk0EkBAACgnGrRokWimfqee+4J
nS5lfPDBB0W+PrVSpUp//OMfd+zYETosAAAAlDuNGzdONFA//vjjodOlkv/5
n/+JLigKHHvssR9++GHosAAAAFC+NGrUKNEoPWTIkNDpUkleXt4pp5xSnI4i
IyOjc+fOvvEBAAAAP2rZsmWiObpfv36h06WY5cuXRxQ+/+6www67+eabx40b
99133/1sU7m5uQsXLnz//fdffvnlhx9+eMCAAfF//vnPf3799denT5+en58f
ZAcBAACglHTp0iXR+Ny1a9fQ6VLPggUL6tevX/yO4kc5OTkHHHDAQf8Q/0VW
VlbEh2vXrt2pU6eBAwfOnz8/9B4DAABAElxzzTWJpuB69erFYrHQAVPPN998
c+CBB5agoyiBzMzMM84444033nBPBQAAACnt8ccfj5h/p0+fHjpgSlq6dGnz
5s3LpqMocNhhh73xxhuh9xsAAABKaOHChRFj79133x06YKratGnT2WefXWYF
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
I6GTUory8vIGDx68//7771QvUeCss87aunVr6D0AAAAghb377ruVKlUqcgK9
6KKLQielFL355pvFf9DEz1xxxRXunQAAAGBXzJo1q2bNmkVOoM2bN/f34+lq
4cKFHTt2LFk1UbFixccffzz0HgAAAJDali9ffsABBxQ5hB544IHfffdd6LCU
ipEjRxbn2z2F+o//+I+ZM2eG3gMAAABSW15e3imnnFLkENqoUaOFCxeGDkvy
bdq06ZJLLilZNVG9evUBAwZs37499E4AAACQ8vr27VvkHNq4cWP3TqSl+Glt
0qRJCaqJatWqXXPNNUuXLg29BwAAAKSDTz75JDs7O3oUPfTQQxctWhQ6Kcn3
5Zdf1q9ff2eriUMOOeS+++5bu3Zt6PgAAACkiby8vCOPPDJ6Gj3qqKOWL18e
OinJ9+mnn+69997F7yWys7M7d+48YcKEWCwWOjsAAABpZciQIdEzaePGjZct
WxY6Jsn36aefFuelLQXq1Klz6623LlmyJHRqAAAA0tCGDRvig2fEWFqrVq25
c+eGjknyLVmypDgvbYmrUqVKnz591q9fHzoyAAAAaevee++NmEwzMjJee+21
0BlJvi1btrRo0aI47USnTp0WL14cOi8AAADpbNu2bfvtt1/EcNqjR4/QGSkV
Z599dpHVRE5OzoMPPuhZEwAAAJS24cOHR8yndevWXbduXeiMJN/TTz9dZDux
zz77fPzxx6GTAgAAsFv4z//8z4gR9cknnwwdkORbvHhxrVq1otuJBg0afP31
16GTAgAAsFtYtmxZZmZmohH1wAMPzMvLC52R5OvQoUN0O9G4ceNvv/02dEwA
AAB2F9H3+Q8cODB0QJLvL3/5S3Q7UadOnW+++SZ0TAAAAHYjEY9JrFix4urV
q0MHJMlyc3MbN24c0U5UqlRpypQpoWMCAACwe9l///0TDaqdOnUKnY7ke+KJ
J6Jvn3jqqadCZwQAAGD38v3330cMqo899ljogCTZtm3bGjRoEHHS27Vr542i
AAAAlLE33ngjYlb98ssvQwckyZ588smIM169enUPxgQAAKDsDRo0KNGsWrNm
TX+Tnn5atmwZUVDcfffdoQMCAACwO7ruuusSzarHH3986HQk2ddffx3RTtSt
W3fTpk2hMwIAALA7uvTSSxONq2effXbodCRZnz59IgoKr5QFAAAglAsuuCDR
uNqtW7fQ6Uiyhg0bJjrd1apVc/sEAAAAoXTu3DnRxHrFFVeETkcyffPNNxG3
T1x88cWhAwIAALD7at++faKJ9brrrgudjmQaOnRoREHxzjvvhA4IAADA7uvX
v/61v1LfTVx44YWJznWdOnXy8/NDBwQAAGD3dcUVVyQaWtu3bx86HcnUqFGj
ROe6S5cuodMBAACwW7vjjjsSDa1HH3106HQkzebNmzMyMhKd60cffTR0QAAA
AHZrTz31VKKhtWbNmm77Txtz5sxJdKLjpk+fHjogAAAAu7U33njD3Lo7eO21
1yJO9MaNG0MHBAAAYLe2fPnyiDv///SnP4UOSHLET2Wis1yvXr3Q6QAAAOB/
Dz300ESja+fOnUOnIzluvfXWRGf5+OOPD50OAAAA/vfSSy9NNLrm5OSsXLky
dECSoG/fvonO8qmnnho6HQAAAPzv888/n2h0jRs4cGDogCTBjTfemOgUt23b
NnQ6AAAA+N9FixZlZmYmml6POuqo0AFJguuuuy7RKe7QoUPodAAAAPB3bdu2
jbiJ4uWXXw4dkF11ww03JDq/rVq1Cp0OAAAA/m706NERBUWjRo22bdsWOiO7
5P777090fg8++ODQ6QAAAODvtm3bttdee0V0FEOGDAmdkV3ywgsvJDq51apV
C50OAAAA/unaa6+NKChq1Kgxb9680BkpuXfffTfi/HpXCwAAAOXEkiVLqlat
GjHDNm/e3Bc9UtfcuXMjTu7YsWNDBwQAAIB/uvXWWyNm2Lirr746dEZKaMeO
HdWrV090Zvv27Rs6IAAAAPzTxo0b99133+iO4qGHHgodkxJq06ZNotN68skn
h04HAAAA/+fJJ5+MLigyMzM9MDNF9evXL9FpzcrKWrJkSeiAAAAA8E/5+fnt
2rWL7ijibrrpph07doQOy8557bXXIs7pAw88EDogAAAA/J8VK1YU+UWPuFNP
PdXfuaeWDRs2VKpUKdEJbdasWeiAAAAA8C8mTJiQmZlZZEdRp06d559/PhaL
hc5LcXXp0iXihL7zzjuhAwIAAMC/6N+/f5EFRYGWLVu+/fbbofNSLC+99FLE
qWzdunXogAAAAPAv8vPzzzvvvGJ2FHv84wsCDz/88KpVq0IHJ8rWrVtr1qwZ
cR4/+OCD0BkBAADgX+Tm5nbs2LH4HcUe/3gZRJs2bQYMGPD+++9v3Lgx9B5Q
iEsvvTTiDB577LF5eXmhMwIAAMC/yM3N7dat2051FD/KyMho2LDhmWee2bdv
35EjR3755Zde/FEezJ8/v0KFChEn7q677gqdEQAAAH4uFovdcsstGRkZJasp
fqpy5crt2rV79NFHvf4jrEsuuSTiNFWsWPHzzz8PnREAAAAK8ec//7ly5cq7
3lEUyMzMPOGEEwYMGLB8+fLQe7Y7KvImimOOOSY3Nzd0TAAAACjEV199ddxx
xyWroyhQqVKl3/3ud3PmzAm9c7ud6CdRxP3+978PnREAAAAKl5eX98ADD9So
USO5NUVGRkbHjh29P6IsrV27dt999404KdnZ2dOmTQsdEwAAABJatmzZZZdd
lpOTk/Sa4uKLL169enXo/dtdjBkzJvqMHH/88fn5+aFjAgAAQJTvvvuuZ8+e
tWrVSm5NUadOnaeffjoWi4Xev91C165do0/HU089FTojAAAAFG3Lli3PPfdc
hw4dKlasmMSaolWrVkuXLg29c+lv5cqVdevWjTgRBxxwwLZt20LHBAAAgOLa
sGHDiy++2KtXrxYtWiTl2x/77rvvpEmTQu9W+vvrX/8afSIee+yx0BkBAACg
JHJzc2fPnj1ixIg+ffp07NixQYMGJesoKlSoMGjQoNB7k/66desWcRYOOuig
HTt2hM4IAAAASbBmzZoXXnihS5cu1apV29maonv37gbkUrVy5co999wz4hS8
/vrroTMCAABAMm3duvXll19u1arVTnUU559/vo6iVA0aNCji+Hfq1Cl0QAAA
ACgVn3zySdeuXbOysorZUZx77rl5eXmhU6etLVu21KtXL9HBz87OXrVqVeiM
AAAAUFo+++yz448/vpgdxX/913/l5+eHjpy27rzzzoiD//TTT4cOCAAAAKUo
Pz//scceq127dnE6iv79+4fOm7aWLVsW8fqVjh07hg4IAAAApe7bb79t0aJF
kQVFRkbGX//619Bh09aZZ56Z6MjXqFHDY0AAAADYHeTl5d10001FdhTVqlWb
PXt26LDp6Zlnnok48tOmTQsdEAAAAMrIwIEDMzIyojuKpk2bbtu2LXTSNLR0
6dKIw/7oo4+GDggAAABl58knn8zMzIzuKPr06RM6Zno65JBDEh3zq666KnQ6
AAAAKFODBg2KLigqVqz45Zdfho6Zhrp27ZromP/nf/5n6HQAAABQ1nr37h3d
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
gFIxceLEiNF+/PjxoQP+i7Vr155wwgnFryb22muvu+++O/5ToYMDQGozFVIe
TJ48OSsrq1KlSjNmzAidBYDke+CBByJuPChXj1zYtGnTiSeeWMxqolatWrff
fvuGDRtCpwaAlGcqpJy49dZbC/6k98c//jF0FgCS78ILL0w04zdv3jx0uv+z
ffv2du3aFbOduPjii901AQDJYiqknLj88ssLLsVrr702dBYAku+kk05KNOb3
6NEjdLp/ysvLO/PMM4tTTRxyyCFTpkwJnRcA0oqpkHLisssuK7gUr7rqqtBZ
AEi+hg0bJhr277vvvtDp/qlnz57FaSfOPffc9evXhw4LAOnGVEg54VIESGOx
WKxChQqJ5v0RI0aEDvh3I0eOLLKayMjIuP322+O7EzosAKQhUyHlhEsRII1t
3rw5Yur/29/+Fjrg/86bN69mzZrR7USlSpX+8pe/hE4KAGnLVEg54VIESGOr
V6+OGPynTZsWNt62bduaN29eZDvx7rvvhs0JAOnNVEg54VIESGOLFi2KmP2/
+OKLsPGuvfba6HYiKyvrlVdeCRsSANKeqZBywqUIkMZWrFgRMf6Hfdf5J598
kpmZGREv/l9feOGFgAkBYDdhKqSccCkCpLENGzZENAAffvhhwGxt2rSJvn2i
f//+AeMBwO7DVEg54VIESGN5eXkZGRmJGoBXX301VLAxY8ZEtxNt2rTJz88P
FQ8AdiumQsoJlyJAeqtbt26iEmDIkCFBIm3durVRo0YR7cSBBx64Zs2aINkA
YDdkKqSccCkCpLdmzZol6gGuv/76IJEeeeSRiHYiMzPTazsAoCyZCiknXIoA
6e2ss85KVAW0bdu27PPEYrFDDz00oqC48MILyz4VAOzOTIWUEy5FgPTWt2/f
RFXA3nvvHYvFyjjPG2+8EdFOVK1adfHixWUcCQB2c6ZCygmXIkB6GzVqVEQh
UPZvGo1+ecfdd99dxnkAAFNhIhs3bnzttddGjhw5ZsyYcePGvfvuux988MFn
n332xRdfzJs3b/HixStWrFiyZMnChQu//vrrWbNmTZs2Lf6B+MfefPPNV199
dfTo0S+88EJx3ps2c+bM4cOHxz8fX+7tt9+eNGnSxx9/HP/N+Ga//fbbZcuW
LV++/Pvvv48vGl96+vTpH330UfwzEyZMeP3111955ZV4wpdffnndunXF37V4
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
8eMjR44sVqyYrjIRFSpUmDRp0iv5AOfFixfSsMhgxt/fX1eZ+Pj4NGrUaN68
ea/kk2GJWSSy7tatm97p3xKeyxBx8+bN1hzxYzH5rSMiIlq2bKnlQMmEihcv
Pnz48P3795v3LBfKiArNQ1Soy8qVK+1WRRmSGZuQ3U5Noi3Dw8lBgwZ5xW1a
7vbXGVRFXfbt29eqVSu9zyWSypYt24gRI9z+6xtCxoQSVVWuXFnvc4mkihYt
OmvWrMePH7v7mgwgwebUqVMLFizoYplIUFazZs3169e/GmOha9euDR482PVl
kq+//nr79u0PHz7s7gsyxrFjx4KCglKnTu1isWTOnHnAgAFXrlxRSCsmJiZn
zpwKX+Lr6xsZGWnGZZYpU8ZRor17907695s2bapTp47e5xJJ5c+ff8qUKa/G
W3JpHufOnSshkotl4hU3UXn58uWvxqykW7duhYSE6H0ukZSPj8+77767Z88e
d1+QMc6ePdutW7d06dK5WCx+fn49e/Z8ZR5q7dy5s0mTJnZjT10CAgLGjh17
584dd1/Qvw5RoXmICnXZsWOH3aooIzpjEypVqpTdhP766y8DU5EuQzpB+dqw
sDADv9Y5VEWNtm3bJkNlnd2XijRp0vTt2zf5rnF4+vTp/PnznXiFpyxHjhyT
J092egme28lwRQYthm9VVLp06aVLlybfuTcyuJUh7uuvv25gmcg4oXHjxrt2
7XL3xTlv9+7dTZs2df3hXkK+vr49evRQOActIiJC+Rty5sypa+WIRgoPRhJO
25CQedmyZQpPM5yTOXPmzz77LPm+Io+JiZkyZUquXLmMLZYiRYqEh4cn31fk
V65c6d+//xtvvGFssdSqVevHH39098U579ChQ+3atXP94V5CEtG///77J06c
cPfFOenly5fr16+vUqWKgWUi0qdPP2zYsOvXr7v7+v5FiArNQ1Soy9GjR+3W
kAYNGhiYiozHHA2eT58+bWBCzZs394p7WewJy3Ooiqrk169Ro4ae/kofaZeG
Dh2a7KYNbNu2Te+yBV0yZsw4e/Zsd1+lPhJYSf/i5+dnXrGULFnSpLfb5nnw
4EGfPn1cf12loHHjxmYE1KaKjo5u2rSpeWUisUmPHj3sThuQgbrqKL1EiRKG
n8Du6+vrKLmVK1fa/mbfvn2OxoSGkNtTbtJkN20gIiJCefMQFxUoUMDYDfAt
IJ2mdJ22gb1JqlevfurUKXdfqD43b95s27ateWWSIkWK4ODgZPeg78SJE5Ur
VzavWFKnTj1x4kTnTl6AXkSF5iEq1OXKlSt2a0j58uUNTKV9+/aOWp7du3cb
lYqMAWzfuWnTJqO+0xVURQXPnz+XHsf1eddaFCpUaMeOHe6+Yk1kZCLjE2Pf
+TrSqFGjS5cuufuKNZFxrIxmLSgTW+CZXGaYSIsnsY8FxZI2bVq5W5NF4GnB
g6x4+fPn37x5c9I8nDlzRnXldZkyZQx8T/Tw4UOFtKT1i4mJkYpt7DtfR6pW
rRoVFWXUpZlKBsmNGze2oExsgeetW7fcfcWaREZGlixZ0oJikQFASEhIcplh
Mnv2bL072DjH399/xYoV7r5cTSx4kBXvrbfe2r9/v7uv+NVHVGgeokJdHj16
ZLeGyNDLqCR+/fVXhTZn3bp1hqTy7NkzW5cq4w1DvtB1VEVH7ty5U69ePbXu
yEipUqUKDQ1193WrkFG9qRMnkpLh1rZt29x93Sq+//5719f56lK8eHEPXxH8
8uXLMWPGWBNvxnv33Xc9fP/M2NjY1q1bW1kmEnh++umnSfcwCQsLU/2sdFhG
bdN6//59hYTWrFlj6sSJpNKmTbtq1SpDLs08O3bsyJw5s5XFki9fvuPHj7v7
ulV89dVXps7ISqp27doePmfg6dOnXbt2tbJMvOK2jvHwVYc3btwwdeJEUq+9
9tq8efPcfd2vOKJC8xAV6mX3XU/69OkN+fIXL16UL19evtDb29tuVfz2228N
SWjmzJlecXGo50wapCraJT+QNa99k/rggw889mWNtMmGL/XVQm5MGZG6++od
CgkJsWY+SSIZM2b02Fk3Dx8+tDgMjyfdvcfOurl8+bLFYXi8li1bxsbGJszM
y5cvW7VqpfrBgIAAQ07YuX37tkIq0psbd61ayW0rN6/Hbj87ffp0R2MSU6VN
m/b7779399XbJ2F4ly5drC8Tr7jYx2Nn3UgYXqlSJbcUS926dT12l8iDBw8q
bwhsnj59+iSL6XzJF1GhSYgK9cqdO7fdSmLIgh2paV5x28L37t3bbipffPGF
66nI8Mz2KqR///6uf5tRqIpJRUZGmrraV1Xjxo09cMP5efPmWTNJ0pHhw4d7
Wijx/PlzuXHcWCapU6f2wHm20tbVrl3bjcUi/cWxY8fcXQyJnThxQu+xqsaq
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
REdH58iRQyEbVu6CJRGl8ks0GZZYs/H+9u3blRd3WLkLlsS2yi/RChQoYPbb
IhvVTcmaNGliQTZsVF9gSWYsONLr+fPn7777rnJOxo0bZ3Y24smATTkzY8aM
cfRZaZe++eYbLRu0GsKyLc1jYmIcvRezkWGkNfOxDxw4oLwSR2Kr69evW5CT
f+KCceWnfNmzZ7dm1wXpeZWripX7JM+bN085M1WrVrVgyo2MKj/88EPlnPTv
39/sbMRTneLYp08fC7Ih97Lq7kwrV660ICf/xG0lWqpUKeXMmLcoKSEJmpTP
zJ0+fboF2TAPUaFJiAr1unXrlt0aUqRIEb1fZRs61q5d2+6ESUcvVvRuJx6/
waCpe9Zdu3YtIiJi7NixIc6Kny5eoUIFp79k/PjxCxcuNG9xn6kk8HTUgEtj
YuXy0gsXLijvHC5jZrPPI5AbTfWICosP9ZZLVs6PDOBPnTplah6kJ1J+iZYi
RYqtW7eamodEVJchly9f3uw5hNL4KC9NkgGSeZu3JCUBi+pBll26dDH7po7v
3x2RxtbKo8+lm1A+C09+RAnBFL7hwYMHo0ePtq2cNU/JkiUtK5N/4jZsV37K
J63xb7/9Zmoezp49q7qK4bvvvjM1D4lIb66cHxl0mb3l7Pfff6/8NNj6k6ZV
zx5t2bKl2Q9MVPdntvik6Xv37inP5fMyf4rjkydP6tevr5yH9957z9Q8JHL4
8GHlXcV8fX1dP2hbmXS7qnsdu/dIZdcRFdpFVGg9afntjoRl3KXre7Zt2+YV
NwvO0bz9jz/+2G5VXLp0qfZUnj59KveIl/kNo+qKeCvVrVvX1Is1ibRIlSpV
Sno5fn5+hm8jr2rWrFnKhWzqZoN37tyxWxQJlS1b1oLJxokEBQUp50qGSeZN
so2KisqePbtyBnr27GlS6o48evSoaNGiyrmSW9KoMz2TWr16tep+oQsWLDAp
dUck4lPdbHDQoEHmPaNQ3d9AbmHrF/8uW7ZMOVfyU6ru0RETE/Pll1+qhiTO
kf7d+vOU+/Xrp5yrrFmzHj9+3KTUL126pDyLQ7Rp08ak1B2Rsdbbb7+tnCsZ
uJq3YabEbqqbu0o9NCl1R/7880/VB3RdunQx7xmFls1dDTzvWyMZUavuDGne
PiEyFGnXrp1ysfj7+0ska1IGHBk9erRyrtKnT2/eTrw3btxQncWRTIfrCREV
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
q7rlbDypVHXr1p09e7aWY4Xlm1euXNmxY0ftXX+WLFmce7jqsYgK4SEcbbgd
ERGh+lmJO+QvZVCh+pfnz5+3m4oM0VU/G79M3uyzyfBvcP/+fdV9lhKRDk6G
2dJoh4aGrlq1Srr1AwcO7NmzR5prib7lDqpZs6bySaZJybjavHNDnBAVFaX3
uEOJg2SQIMMn6frlJt21a5cUiwT1a9eunTlzZvfu3cuVK6dlymhCMuw0Y484
p61YsUL7oxUbPz8/GfMPHDhQmtCNGzdGRkZKsUjAKMMeiaY7dOigekpIUhJx
uH1KSUJydXovIWfOnM2aNZMwYcmSJRJx748jt8DSpUvlH5s3b67xtXJC2ueC
WuDx48caZ+8nJJVBqoRUDKlpUkmkqkiFkWojlWfQoEEyrtYyFz0hqa66dkE3
W3R0dEBAgK5LkEZDmo5u3brNmDFjzZo1P//8sxSLNC/SyMyZM0caHGl29G4l
mjFjxhMnTri7MP5n27ZtGqeTxZMuRiqYdDfh4eHr16+X2FyKRToj6ZKkY5Lu
SYJT7QG+zVtvveXe6fqJTJgwQVf+RbZs2WQIOmLEiMWLF2/atEmiHimWrVu3
fvfdd2PGjGnVqlWePHn0fmdQUJDnRD3Pnz/XskdHIgUKFGjbtu348eOXLVsm
lU3KZO/evRIzLlq0aOjQofXr13fidGO5H91dGP9z8+ZN1Z14E/H29g4MDPzw
ww+nTp26evXqnTt3SrH8+uuv69at++abbz7++OOqVatqnIsVT/7e+kNezEZU
CA8hbbjdSjJlyhTlD8og0ytuLKHl4eGdO3fspiKtqPIHnzx5UrBgQfnLzp07
a78oQMH169e1z/M0g3RqHvImIiEtG+CbKm/evB4VRNgsWLBAbyhhLIlKzDt8
0DkvXrzQvqjBJP/5z3/cu3lLUtLN1a5d241lIhVVold3F0NiUVFRWrb7M0/2
7NnNO3zQaTLG1j7dzgzlypX7888/3V0MiY0aNUrvYxZjdezY0UOmlMR7+PCh
li09zZMyZUrViMB6Fy9eLF68uBuLxc/Pzy3H0pmNqBAeYubMmXYryfDhwxU+
9fTp02LFismfDRgwQEsqMpK0+yJSbnDlD9pOqZZ+/OrVqzquClAkTdwHH3zg
TJ/ksnz58rl9ebgjMl5116Mbiey07xFtMYlu3PXopk+fPh6ysiOppUuXap8H
ayAJw+fNm+fuq7dPfiyNm0MaTsJwjWuErXf79m0tp7GYoXz58h47eDhx4oS7
Ht106tTJvXuoKti4caP2JTAG8vb2Vt7Wz41evnw5ceJEvdP5DJEhQwbXtw03
yYMHD9z16EYioPPnz7u7AExBVAgPsWzZMrtV8f/+7/8UPjVt2jSvuLVX2k84
sm3rmpTCLmo3btyw9VPjx4/Xd1WAGunxR44cafHLmrJly3rIOmhHYmJimjdv
bmWZeMVNqXXXaW4ayVDE4pc1MlqePHmyu69bxdatWzVuJWoUGS1v3rzZ3det
YsqUKVq23zdQ0aJF3XhMpBYSDmvco9hAjRs3vn//vrsvXYmMsXXtReM66fJG
jBjhOUsY7IqMjLT4mXCaNGmWL1/u7utWER4ebvF0vjx58ji3yaRlJILQckK3
sWrUqOHc7rXJAlEhPISMMO3WkDZt2jj6yN9//21bvzZ79mztCTnaoUjhLK0e
PXp4xb1x9vDgBcnXnj17bE99zebr6ztx4kQnDjVwCxmqaTyIxEU5c+Zcv369
uy9Xk6dPn8ovaM34sGzZsh4+LIwnDbh0FhaUiWjdurWWjc48wbFjx8qXL29B
mfj4+ISEhCSXLnLDhg25cuWyoFhkiOL58aaNdArSsFgzGalo0aLJZcn83bt3
ZQRozRuEevXqOXc6lfXOnz9fq1YtC8okZcqUQ4cOjY2NdfcVa/Ljjz9q3+jb
FW+88Ybrh7p6OKJCeIhDhw7ZrSHSBjr6SO/evb3itlfSNfe4SpUqdhOKioqy
+/dHjhyxzf9ZuXKl7qsCNJOGTkb42neDd0LFihU9cHcFZRIJSjxoXpkI6Wu0
P2z3EEePHtW7yaouyetBVrx169Y5sculdlmzZk0u8WY8W+CpdztHXcqUKSMd
pbsvVB+55c0OPFu2bJnsTv2TwNOJTVa18/b2lngz2Y3qN2/e7MQul9plzJgx
IiIiecWbklsJA/Xuy61L4cKFd+3a5e4L1Sc2NlZquKmrYOrWrev2c+EtQFQI
D3H58mW7NaRUqVJ2//7kyZO2yas7d+7UlZCjk4vtNoPSAtt2G5M7Inn1HUim
Dhw4oP3geO0KFCgwa9YsLUdPeqY1a9aYMQO5atWqGzdudPfFOUkG+WFhYblz
5za2TKRdbd++fXKZOJHU9evXBw8enC5dOmOLRcbhAwYMSHbxZrzjx4+/9957
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
VuUcSXh+DQAAAADAMkSF8BA3btxwVD1SpEhx+PBhoxJydLSuaN68uVGpAAAA
AAB0ISqEh3j27JmjGtKjRw8DE3J0tK6Pj8/Zs2cNTAgAAAAAoB1RITyHn59f
0hoi/3jjxg0DU3F0tO6gQYMMTAUAAAAAoBdRITxE/vz5k9aQ0NBQY1Ox7f6a
SLZs2e7evWtsQgAAAAAAXYgK4SHKly+fqIYULlz4yZMnxqYyb968pFVx7ty5
xqYCAAAAANCLqBAeokGDBolqyMaNGw1PJenRuoGBgc+fPzc8IQAAAACALkSF
8BAdO3ZMWEMaNmxoRiq//PJLoqq4c+dOMxICAAAAAOhCVAgP0bt37/jqkSpV
qqioKDNSOXnyZMJ62LZtWzNSAQAAAADoRVQIDzF69Oj4GtKvXz+TUrl582Z8
Kr6+vhcvXjQpIQAAAACALkSF8BBLliyx1ZBcuXLduXPHpFRevnzp7+9vS2jM
mDEmpQIAAAAA0IuoEB7i999/z5gxY/r06bdt22ZqQl27dk2ZMmXbtm2fPXtm
akIAAAAAAO2ICuE5XsSxICEqIQAAAAB4IKJCAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+q/wcU1V4d
       "], {{0, 706}, {1419, 
       0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> Association["Software" -> "gnome-screenshot"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{235.40000000000566`, Automatic},
     ImageSizeRaw->{1419, 706},
     PlotRange->{{0, 1419}, {0, 706}}], " ", "+", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
xOlySNbewcmTJ+++++5bxnz3u9+9+eabn3766ffee+/TTz99++23n3zyycsu
u2zvvffedvkBBxwwderUtMwAADJKhgIAUrdx48aqIkaLFi1SPMjtt99e8SVt
2rRZv359WoaVlZV98sknL7zwwm9/+9sBAwbstddelY6UobLzDibvWn5+fsUx
zz333Hfeeaeqz0wkEn/729+2vb95eXk333xz3ZcAABklQwEANbLbbrtV1TFW
r15d7ZcvWbKkSZMmFZ//9NNP13HMO++806xZs/r161e6p3Xr1lvOJUNtkVV3
MOkvf/lLxdF22mmnl156KZUvWb9+/Y9//ONt919//fV13wMAZI4MBQDUyA9+
8IOqIkbEi1i2OOmkkyo++dRTT637mLfeemvbGc2bN+/bt+8zzzxTVlb2ne98
R4baSlbdwWnTplW8FXmrVq3mzp2b+heWlJT85Cc/2fYS/vCHP9R9FQCQITIU
AFAjZ555ZlUR47HHHov+2scff7ziM5s1a7Z06dK6j1mwYEH//v0HDx48cuTI
22677a9//eu8efMSicSWT5ChtpU9d3Dz5s1du3ZNHq2wsHDKlCk1/fI1a9Zs
+9N5TZo0WbJkSR2HAQAZIkMBADVyzTXXVBUxbr311ogvXLt27R577FHxmXfd
dVc8a2WobWXPHfzjH/9YcbQrrriidkd46qmntr2KE088se7bAIBMkKEAgBq5
5557qooYv/jFLyK+8Je//GXFp3Xr1q28vDyetTLUtrLnDnbv3j15tPz8/Oef
f37Nmtr8F2lyRqdOnba9EC+IAoDsJEMBADXy0ksvVRUxjj/++Kq+atq0aXl5
eTv848ev3n///djWylDbypI7+Nlnn33z1MnDXnHFFWVlZTU9zq233rrthYwZ
M6buCwGAtJOhAIAaWbBgQVURo1OnTpV+SWlp6YEHHljxOVdddVWca2WobWXJ
Haz05+mGDRtW0+O888472x6nW7duaRkJAKSXDAUA1EhpaWl+fn6lEaNhw4bf
fHvwLcaMGVPxCe3bt//666/jXCtDbStL7uCdd9657YBmzZrV9Mf9Nm/eXFRU
tNVxWrVqlZaRAEB6yVAAQE21bdu20oiR9MUXX2z1yQsWLGjYsGHF306cODHm
qTJUpbLhDt54442VDli7dm1ND7X77rtve5ySkpJ0TQUA0kWGAgBq6uijj64q
YkydOvWbn5lIJHr16lXxV2eddVb8U2WoSmXDHXzwwQe3Pftee+1Vi0NV+i7l
S5cuTeNaACAtZCgAoKb69+9fVcR44IEHvvmZyX+t+PMdd9zxyy+/jH+qDFWp
bLiD69ata9my5VZn/z//5//U4lCtWrXa9kI2bdqUxrUAQFrIUABATV133XVV
RYzRo0dv+bRVq1Zt6Qz33HNPkKkyVKWy5A6+9dZbBxxwQMXxCwoKBg0atHnz
5poepKysbNu3umrevHna1wIAdSdDAQA19ec//7mqiDFgwIAtn3bBBRdU/GGP
Hj1q+r7T6SJDVSp77mAikZgxY8bEiRO3fU+qFE2fPn3bqzjuuOPSuxMASAsZ
CgCoqSlTplQVMY499tiKz5k8eXLFnxQVFX344YehpspQlcqhO1itW265Zdur
uPXWW0PvAgAqIUMBADX12WefVRUx2rdvn/yE4uLi/fffv+JPavduP+kiQ1Uq
h+5gtbp27brVJRQWFi5atCj0LgCgEjIUAFBT5eXlRUVFlUaMwsLCzZs3jxo1
quJfO3bsWFxcHHCqDFWpHLqD0d56661tL+Hcc88NvQsAqJwMBQDUwr777lvV
y2leeOGFLYnj1VdfDbszSIZasGDBkCFDjjzyyEMPPfTss8+eOHFiIpGI4bw1
kit3MNpJJ5201fhGjRrNnz8/9C4AoHIyFABQC7169aoqYrRq1ariH84///zQ
MwNkqPvuu69JkyZbfU/69+9fUlKS6VPXSK7cwQiVvsPVb37zm9C7AIAqyVAA
QC1cdNFFVUWMCrvsssvKlStDz4w7Q/3P//xPXl5epd+QQYMGZfTUNZUrd7Aq
GzZs2PYFXf369Qv1OxkBgFTIUABALYwZMyY6Ytx///2hN/4/MWeoH/zgBxHf
k2nTpmX07DWSK3ewKttmtB/+8IfZ9pIzAGArMhQAUAt//etfIwrGcccdlyXv
hhRnhtq0aVNBQUHEt+Wkk07K3NlrKlfuYKWeeuqprQYffvjhGzZsCL0LAKiG
DAUA1ML//M//VFUwGjRokD3vER1nhpozZ05E2EkqKipav3595gbUSK7cwW3N
nj27efPm3xx88MEHf/XVV6F3AQDVk6EAgFpYvnx5VRHjxhtvDL3uX+LMUOvX
r6/qjaG2ePrppzM3oEZy5Q5uZdmyZXvvvfc31/bp0yd74h4AEE2GAgBqIZFI
NG7ceNuC0blz59LS0tDr/iXm94bq0qVLdIYaM2ZMRgekLlfu4DetWrWqa9eu
31w7dOjQzZs3h94FAKRKhgIAaqdz587bRoypU6eG3vVvYs5Qzz33XHSGOu+8
8zI6oEZy4g5usXLlyoMPPnjLzsLCwrvvvjv0KACgZmQoAKB2evfuvVXBuPji
i0OP2lrMGSpp1KhR2/5oXufOnbt37578h5NPPjnTA1KXE3ewwooVK7773e9u
2bnrrrtOnjw59CgAoMZkKACgdgYNGvTNgrHbbrutXr069KitxZ+hkl599dWe
PXu2aNGiadOmhx566Lhx48rKyoYPH77DP34DXQwDUpQTdzDpyy+//OZPOx5y
yCFLliwJPQoAqA0ZCgConfHjx38zYjzxxBOhF1UiSIaq1BVXXJEc0Lt371AD
tpUTd3DZsmXfvInnnHPOxo0bQ48CAGpJhgIAaufzzz9v2rRpRRwYMWJE6DmV
y54MNXDgwB2y7L2hsv8OJhd26tSpYmFBQcHYsWMTiUToUQBA7clQAECtffnl
l6+//vrChQtDD6lS9mSo0047LTlg2LBhoQZUKpvv4NKlSzt27Fhx43baaadJ
kyal8lXl5eVl/yBYAUAWkqEAgO1Y9mSoinfYvvXWW0MNyC2fffbZvvvuW3HX
OnTo8NFHH6X4hXfddVfFV61fvz6jCwGAWpChAIDtWJZkqLKysqKiouSAxx9/
PMiA3LJkyZIOHTpU3LIf/OAHy5cvT/1rL7roouRXtW3bNmPrAIDak6EAgO1Y
lmSomTNnVgxYsWJFkAE5ZNGiRe3atav4dp122mk1fUPybt26Jb/wxz/+cYbm
AQB1IUMBANuxLMlQN910U/LsyTFBzp5DFi5cuPfee1fcrGHDhpWXl9foy0tL
Sxs3bpz82qFDh2ZoIQBQFzIUALAdy5IMdeSRRybP/p//+Z9Bzp4rFixY0KZN
m4pfivf73/++Fkd45ZVXKm70vffem/Z5AEDdyVAAwHYsGzLUJ598UnH2iRMn
xn/2XDF//vy99tor+V1q0qTJs88+W7uDDBgwoOJbPW3atPTOAwDSQoYCALZj
2ZChrrnmmuSp27dvX9MfMfv2+Pjjj/fYY4/kd2nHHXd88cUXV6Tgyy+/XLp0
6eLFi+fNmzdjxozkV9100015eXkVN3rt2rWhrwkAqIQMBQBsx7b8wrUKeXl5
MbegVatW7bjjjslT33TTTXGeN4fMnTu3devWO6TPnnvuGfqaAIDKyVAAwPaq
rKysadOmWzWKZcuWxbnhkksuSZ60YcOGMZ83V8yZM2e33XZLY4NK6tWrV+jL
AgAqJ0MBANulRYsWVSSgrZx22mkffvhhIpGIYcPcuXMLCwuTJx0xYkQMp8s5
s2bNatmyZXobVNKll14a+soAgMrJUABATrvrrrt+8Q8DBw4866yzfvKTn/Ts
2XPfffeNLhV77rnncccdd9JJJ5155pkDBgz4+c9/njzCDTfckN5tvXv3Tp6r
ZcuW69atS++RtwNffvll2l8HVeHuu+8OfXEAQOVkKAAgp51wwgnpyhff+c53
0jjsrrvuqjjshAkT0njY7cbtt9+erhu3lddffz30xQEAlZOhAICc1rt373r1
6jVu3LhFixYtW7bcc88927Vr17Fjxy5dunTt2rVbt249evQ49thjjzvuuOQ/
JP/1kEMOSf7V/vvv3759++Qnt2rVascdd0x+eVFRUefOndO1atKkSQUFBTvs
sMOpp54azw8A5pzRo0dnKEOtWrUq9MUBAJWToQAA0mvevHkVvx2vbdu2kggA
wBYyFABAGq1cuXK//fbbYYcddtxxxzlz5oSeAwCQRWQoAIA0GjVq1A477LDT
TjtNnTo19BYAgOwiQwEApNGcOXMGDBjw0UcfhR4CAJB1ZCgAAAAAYiBDAQAA
ABADGQoAAACAGMhQAAAAAMRAhgIAAAAgBjIUAAAAADGQoQAAAACIgQwFAAAA
QAxkKAAAAABiIEMBAAAAEAMZCgAAAIAYyFAAAAAAxECGAgAAACAGMhQAAAAA
MZChAAAAAIiBDAUAAABADGQoAAAAAGIgQwEAAAAQAxkKAAAAgBjIUAAAAADE
QIYCAAAAIAYyFAAAAAAxkKEAAAAAiIEMBQAAAEAMZCgAAAAAYiBDAQAAABAD
GQoAAACAGMhQAAAAAMRAhgIAAAAgBjIUAAAAADGQoQAAAACIgQwFAAAAQAxk
KAAAAABiIEMBAAAAEAMZCgAAAIAYyFAAAAAAxECGAgAAACAGMhQAAAAAMZCh
AAAAAIiBDAUAAABADGQoAAAAAGIgQwEAAAAQAxkKAAAAgBjIUAAAAADEQIYC
AAAAIAYyFABAdpo/f/6jjz56ww03nHnmmQcffHD7b/j+97+f/MNRo0Y9+OCD
S5YsCb0UACAlMhQAQPZIJBJvvfXW1VdffcABB+yQsi5dulx55ZWvvfZa8stD
XwEAQJVkKACAbFBeXv6Xv/xl3333Tb0+batz58733XdfaWlp6KsBAKiEDAUA
EFYikfjv//7vzp071yVAfVObNm3uuOOOzZs3h74yAIB/I0MBAAT08ccf9+jR
I10B6pu+973vzZw5M/T1AQD8iwwFABDK+PHjGzZsmIkGVaGwsHDYsGElJSWh
LxQA4P+RoQAA4rd58+ZBgwZlLkB907HHHrt27drQVwwAIEMBAMRt06ZNvXv3
jqdBVTjggAMWL14c+roBgG87GQoAIE6bN2/u27dvnA2qQrt27RYtWhT66gGA
bzUZCgAgThdccEH8DarC/vvv76fzAICAZCgAgNjcfffdNW1HrVu3PuWUU4YP
Hz5hwoRH/uHPf/7ztddee+qpp+666641PdqZZ54Z+nsAAHx7yVAAAPF47733
Uv+9eI0bNx48ePAbb7xRXl5e1QGTf/Xmm29eeumlzZo1S71E/frXv47zqgEA
tpChAABiUFZW9t3vfjeVTFS/fv2hQ4d++eWXqR98zZo1N910U+PGjVM5fr16
9WbNmpW5KwUAqIoMBQAQgzFjxqTSiDp37lzrRrRw4cJevXqlcpYePXokEon0
XiAAQLVkKACATPvoo49S+XG8nj171vEtxMvLy4cMGZJKiXryySfTdXUAACmS
oQAAMqq8vPzII4+stgsdf/zxJSUlaTnjTTfdVO3pDjrooLScCwAgdTIUAJDr
Pv3004ceeujmm2/+5S9/2adPn+O+4bzzzvvd7343Y8aM0tLSUPOuv/76aqNQ
ly5d1q9fn8aTDhw4sNqTTpkyJY1nBAColgwFAOSoGTNmjBw58uCDD662tyQ1
bNjwRz/60V//+tfi4uI4Rz755JP5+fnR2xo1avThhx+m97wlJSWHHXZY9HnP
Pffc9J4UACCaDAUA5JznnnuuR48eqdSnbe20006DBg1Ke/ap1MSJE1P57XU3
33xzJs7+/vvvFxQURJy3efPm6foxQACAVMhQAEAOeeGFF1J8+VO0wsLCgQMH
fvHFF5mb+thjj9WvX7/aJcnLKSsry9CG8847L/rszz//fIZODQCwLRkKAMgJ
K1euPOecc+oeoL6pRYsWv//978vLy9M7NZFIjB49utqfxUuqV6/ezJkz03v2
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
QADgX2QoACDTBg0aFBEKvv/974ceSK567733Ih6tpLFjx4beCAD8iwwFAGTa
4YcfHhEK+vfvH3ogueryyy+PzlAfffRR6I0AwL/IUABARhUXFzdq1CgiFNxx
xx2hN5KT1q5d27x584hHa5999gm9EQD4NzIUAJBRTzzxRPTrVaZNmxZ6Iznp
5ptvjn60hgwZEnojAPBvZCgAIKP69+8fEQoKCwu//vrr0BvJPevWrWvdunV0
hnrppZdCzwQA/o0MBQBkzsaNG3fccceIUHDEEUeE3khOqvZdoQ444IBEIhF6
JgDwb2QoACBz7rrrruhW8F//9V+hN5J7Xn/99YKCguhHa/z48aFnAgBbk6EA
gAwpKyvbe++9I0JBXl7ep59+GnomOWbp0qW77bZbdINq3bp1SUlJ6KUAwNZk
KAAgQ+6///7oVnDIIYeE3kiO2bRp01FHHRX9XCVdd911oZcCAJWQoQCATFi7
dm217yA9duzY0DPJJcXFxX369Km2QbVq1WrNGv99CwDZSIYCADLhkksuiW4F
O+644/r160PPJGckn5ZevXpV26CS7r333tBjAYDKyVAAQNpNnjy52neQvuaa
a0LPJGfMmjVr//33T6VBHXvssX5BHgBkLRkKAEivVN5BukGDBsuWLQu9lBxQ
VlZ2yy23JB+YVBpU8+bNFy9eHHoyAFAlGQoASKPS0tIjjjii2lwwdOjQ0EvJ
Ac8//3znzp1TCVA7/OMXLz722GOhJwMAUWQoACBdSkpKTjrppGpzwR577LFu
3brQY8lexcXFDz744Pe+970UA1SFESNGhB4OAFRDhgIA0mLTpk3HH398Krng
4YcfDj2WLPXxxx8PHTp0l112qVGASjrnnHO8JRQAZD8ZCgCouw0bNvTs2TOV
XJD8tNBjyTplZWWPP/54r1698vLyahqgkk4++eTkEUJfBABQPRkKAKij1atX
H3744ankgp133nnhwoWh95JFysrK7rzzzj322KMW9anCmWeeWVpaGvo6AICU
yFAAQF2sXr364IMPTiUXFBQUTJw4MfRessizzz57wAEH1DpAJQ0ePLi8vDz0
dQAAqZKhAIBa27hxY/fu3VMsBmPGjAm9l2wxZ86cH/3oR3UJUA0aNLj33ntD
XwcAUDMyFABQO+Xl5SeeeGKK0eD000/3DtIkJR+DO+64o0GDBnVpUF26dJk5
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
khEjRuiO0T9cvHhx9uzZbj0B5VC8ePGjR4/qDh8AAPgE0lAAACCAffTRR8ZJ
km+//VZ3jL7r6tWrP/300+TJk5944omIiAh3E1Ahqc9BxcbG6j4OAADgK0hD
AQCAAFajRg2DJEn27NmvXr2qO0Z7JSQk7Nq1a+HChe++++6wYcO6d+/e9v+0
a9cuMjIyKirqzTffnJhO//79mzVrVrZs2cyZM3uQekpTvXr1U6dO6a4AAADg
Q0hDAQCAQLV3717jPMnTTz+tO0brXb16dd26dePHj2/ZsmXx4sW9ySN5o1Wr
VpcvX9ZdGQAAwLeQhgIAAIGqV69exqmSzz77THeMljl+/Pg777zTqFGjrFmz
qkk0OZMlS5Y33niD/QcBAMDtSEMBAICAdO7cOeOETPbs2ePj43WH6a2LFy9O
nTr14YcfDg0NVZZoMlC2bNkdO3borhUAAOCjSEMBAICANH78eOOESefOnXXH
6JV9+/b17NkzW7ZsavJLLkVERLz22mvXrl3TXTEAAMB3kYYCAACB5/r164UL
FzZOm2zZskV3mB7asWPH008/7SOPPzk89dRTBw8e1F0xAADA15GGAgAAgWfu
3LnGaZMaNWrojtEThw4datOmjU8loB5//PHo6GjdFQMAAPwDaSgAABB4GjRo
YJw8WbRoke4Y3RMfHz9gwIAsWbKoSS65JJF07Nhx586duisGAAD4E9JQAAAg
wJw8eTJz5swGKZTixYvfvHlTd5huWLZs2d13360sxWQgPDz8ySefnDVr1vnz
53XXCgAA8D+koQAAQICZMmWKcS7lrbfe0h2jWZcvX+7Ro4eaFJMz4eHhDzzw
QP/+/VevXi3x6K4SAADgx0hDAQCAAFO3bl2DpEpERMSFCxd0x2jKgQMH7rvv
PktSSVmzZq1evXqzZs26du06ePDgqKgo+W9kqk6dOj3zzDMN/0+rVq2effbZ
/v37T548ecGCBT///PONGzd01wQAAAgQpKEAAEAgSUhICA8PN0jItGrVSneM
pqxduzZ37twe550iIiIef/zxYcOGLV269OjRo8nJyboPCAAAgDQUAAAIKKtW
rTLOzyxZskR3jK599NFHYWFhHmSfcubM2blz52+++ebq1au6DwIAAOBWpKEA
AEAgefXVVw2yNOHh4QkJCbpjNJKUlNS/f38PElA1atSYPXs2azcBAABfRhoK
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
KV26tCOSRx991MuP+vHHH2NiYlxunQAAQHpDhw51dlN2aNmypcp4atWqZRDM
Y489pjIYAADswBzcs48Ktml4AKehZs+e7axBfvnll3aUOGHCBGclLl++3I4S
08TFxaWVVaVKFc/W4f/tt9/y5s3r7BD0Kleu3OXLly2vNwBAoDp58mSWLFmM
by5r1qxRE8yNGzfuuOMOg0jGjBmjJhIAAOzDHNwDQTgND+A0lLQ6Z5X5ySef
2FHizJkznZX4xRdf2FFimrQVJ4oUKfLHH3949iEffPCB9Q3XOtHR0dZWGgAg
sLVs2dL4zlKpUiWXW/NYYvfu3caR/PDDDwrCAADAVszBPRCE0/AATkP9+OOP
zmpy4sSJdpS4bNkyZyXK1WFHiWnatGnjKGjVqlUef8ivv/7qs2nYsmXLKttf
wF/I1Gnv3r3z5s2T9hwVFfX888+3b9++bdu23bt3HzBgwOjRo6dOnSp9499/
/607Ul+RkpJy9OjRpUuXTpo0afjw4S+++GKnTp2kxjp37vzyyy+/9tprkydP
livIm5tI4Pnzzz9Xr149ZcoUqZ9+/fp16dJFaqxjx45Se8OGDZOaXLJkyeHD
h+17797vXLhwYcOGDdOmTZNrcODAgXI9So3JtRkZGSnX6Ztvvjlnzpzdu3er
SX34hStXrmzfvn3GjBnjx48fMmRI796926bq1auX/O+4ceM+/vjjbdu2efZN
nHyyy/uLFGH5Qd1u7ty5BjFkzpzZ/D1OGs+ePXvkA6U53dL5S5NzdP7r16+n
808jHdSRI0fSd/7SiUmNSYeW1vlLRyfdne5IfYjUhtwQpWakfqSWbu/8pT6l
Vu1Y5sVPyRUn151cfbd0/nKFOjp/uWblyqXzTyO9uvTt0sM7On/p8x2dv9wF
5H/lL+W+IH243CN0Rwr3MAf3QBBOwwM4DSVn01llvvLKK3aUuGnTJmclyt3H
jhIdpA93lCIXgpcfdfXq1YMHD/raS6nHjh3jru2QmJgoQ2UZ0lSvXj0iIsJk
71GsWLHmzZvL0OjEiRO6j0A1mX1ER0fLeEaaYs6cOU3WWL58+Ro0aDB27Nh9
+/bpPgINpPOUiXnDhg3z589vssZy5MhRq1atwYMHywUbhCmpM2fOTJ8+/amn
nipevLjJGgsPD69WrZoMttesWROE/ZuMZxYuXNihQ4dy5cplzpzZTI1lypRJ
flh+ZcGCBW4Nh5544gnjT5a+VMGV/vrrrxvEULFiReNfl85fhrjSYKTZGG9C
lJ40yBYtWrz//vtBmF2Xjki6I+mUpGuSDspkjUmnJ12fdID79+/XfQQayIUg
Nz65/Znv/OXGKrdXuclu2bIlCDv/06dPf/jhh3KVudX5yxBOBnLfffddEC58
Gh8fP3/+/GeffVYmttKrm6kxuUeUL1++Y8eOixYtYoEOv8Ac3DPBNg0P4DTU
X3/95axB9ujRw44SDS46GQjZUeI/qQ941KxZMyR1Gug740x/WaLfXyQlJS1b
tkzmX3feeafhvdqF0NDQBx98cMKECb7TVOwj3fgLL7xQuHBhb2pMlClT5tVX
X927d6/uA7Kd9GBDhw6Vmb6XNVaoUKHIyMgNGzboPiDbXbx48aOPPqpfv77J
RIozefPmlbvS2rVrA/65guvXr8s8onXr1lmzZvWmxuTX5UMWLlyYmJjoslAZ
JUrXZ/yBFSpUsPuBW5lDGQTwzDPPZPhbMkv94osv2rdvbz6LniGpgYcfflhG
4ydPnrT1MH2BjJxljm+8T6IZMk2OiooKhnzUvn375EjlZudljUmdS80Hw+ul
Fy5cmD59er169bzs/PPly9erV6/vv/8+4Dt/6aulx27VqpWXnX+2bNlkvr94
8WK5m+g+JjjFHFwvf5mGB3Aa6saNG84apE0n5cyZM85K7Natmx0livnz5zuK
eOutt2wqwgP+0v5935UrV9577z3z37KZlClTprZt20qnrfv4rJeUlDRnzpwq
VapYW2Mhqd8pfP3117qPzxbr1q2To7O8xipVqiTnIiC/7T106FDnzp3NP5Fo
UsmSJeV6v3r1qu7js9758+dHjRpl/hELk+QD5WPlw41L79Chg8uPat++va0z
wTp16hiUPnTo0Ft+Xjr/iRMnFipUyLra+g9H53/gwAH7jlQX6Wqkw6lcubK1
NRaS2vlLJ6n7+GwhNzU7On85C3Iu5Has+/isd/DgQTs6/1KlSgVq53/u3Dk7
Ov8CBQrIx/LqsW9iDq6Xv0zDAzgNJZw9OmLTtsiJiYnOLoEWLVrYUaIMU4sW
LSqfX7p0aTNfCivjL+3fl8mI+oMPPihWrJirW7HnwsLCOnXq9Pvvv+s+Vst8
9dVXaW3PJg0bNty+fbvuA7XMv//978aNG9taYzIfWbZsme4DtUxMTEz37t3N
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
AerVq/fGG29s2LDB5bpw7r7pKc3g3XfftaPzl0G7yeRb7dq1fWGFwH379pnc
Sfb555/34PUol6SRPP7442YCKFKkiIVbMnns4sWLJr83qV+/vh2vRctZ6N27
t5kAwsPD9+zZY3kA7pILzeQplmvHjvSsBDBlyhSTnf/8+fMtD8ADJpclz507
t01vMH399dcm32ocPHiwHQG4S4amMqSXO07+/PnLly//0ksvef/Qps9iDq6R
v0zDAzsNFRcX56xBtmvXzssPd2yilDdv3vSrW8TExDgr0cuntWUo6Hi0QPou
7x/Ot5u/tH9dzp07Z2YF7Bw5cqxYscK+MGS0bHLHKLlv2heGGUlJSWamipky
ZXrrrbfsC+PGjRuRkZFmaqxTp072hWGSyVlAt27dbH0nzmReRToN7a/mzZgx
w0yNPfroo7auZyUjdjND6zx58mh/NW/79u1mTu4999xj63M1v/76q5nX66R/
2Lx58+2/fuXKlZYtW5o59QZCQ0PlMJs0aSJdhMzOotKRv2ndurVbyzjnzJnT
qrUsMnT+/Pk6deqYiUSuX/vCMOPmzZtmXiSXdmjJ993OSO/Us2dPMzXWtWtX
+8IwqXv37mZClSOy9Z24yZMnm3lepVq1atpfzUtbZMaYXDW2fse0atUqMxvK
5MuXT/ureVu2bDFzcqVnPnDggH1h7Nu3z8wTWdI/REdH2xeGGTLkvr0rk/v4
7S+MBwbm4Br5yzQ8sNNQKSkpzkbIDRo08OaTv/nmG8fn3LJyTnx8vLNLoG3b
tt6U+Omnnzo+56OPPvLmc9Twl/avS6dOnZy1kzS5cuXauXOn3ZHI2E9apstg
smbNqvcZ1EmTJrkMUi72RYsWKQjGYDOO9JYvX64gGGfWrl1rZn3dYcOGKQjm
q6++MrPHzeuvv64gGGeOHz9uJvnTvHnzxMREu4PZu3evY9EDl8HYHYmBa9eu
mVl2u0KFCnY8a3eLs2fPVqpUyWUw9957b4YvhshoQToZD7bhs4NMTBSsQn/9
+nUzL4Fmy5bNwq2uPfDGG2+4DFI6/6VLlyoI5rXXXjNzBq19x81daQNUY3Is
CoKR82ImUz127FgFwThz7NgxM2+qyoBWQecv1770AC6Dadmypd2RGLh69WrZ
smVdBil9soItSOT+YmbnmnLlytnxnLx5zhaa85fMhruYg2vkL9PwwE5DiQIF
CmTYIOUEefyZMnN3bNdSsWLFWxYGkYvO2Ti2fv36HpcoV5Zjk+IqVar42lYs
GfKX9q9FTEyMy/xARETExo0b1cQjwyozz6JrfDXv119/NfM63ocffqgspL59
+7qMR+OreXFxcWZex1O5mvqsWbNcNnvpPHft2qUspPSk6zazgrRcBRaubmEs
OjrazLrfn3/+uZp4bvfKK6+4DK9o0aLKXjr4448/zGyi1K9fP2efsHXrVpPr
XNlHTvqPP/6opsauXbtWu3ZtlyFpfDVv7969Zl7HU7ma+vPPP+8yHo2v5sl8
1sxKVipXU//4449dxhMeHm7til7mSds2MwR67LHHlCUxNm/ebGbM869//UtN
PLcbOHCgy/BkECJ9spp45C5jptlr3P153rx5BoFNmTJFV2C2Yg6ui79MwwM+
DeVse18ZG3v8mVOnTnV8yNq1a2//V2cvW3lz0Q0bNszxIRs2bPD4Q1Tyl/av
hfHNKCT15Q7Fa1zHxcVVrlzZOCph6/tuzkif/9BDD7mMzfv3vt2SlJTUunVr
l1F16NBBZVRpevTo4TK25s2bK76fmnmKTNqhgq+bbzd9+nSXscndRHFecfny
5S7fesidO/eff/6pMiqH6Oholw855MqVa9++fSqj2r9/v1SIcVRSpT/88IOz
T7hy5cqQIUPMPLxnB4ntyy+/VFljFy5cMPMggSUbG7lLphtmtvYbNWqUyqik
8zezvUjnzp1VRpWmS5cuLmNr2bKl4i+VzDxFVrVqVS2v5k2bNs1lbHKNKM4r
Llu2zGXnnzdv3lOnTqmMymHz5s0uY8uTJ8+vv/6qMqq9e/e6XCRQwlaW5E/v
5MmTxk+4BepciTm4Lv4yDQ/4NNSjjz6aYYPMmjWrZx8o0xBHZ+LszDob0Xl8
0R07dszxbWCrVq08+wT1/KX9a/HJJ58Y3IxE37591UdlZgFw+QEFr4rcwszw
VcuX9SYXAF+4cKHiwGQa6zIqLV/Wp6SkmFnjXf1SotL4Xb6RkSVLFvWNX0ht
uKyxRo0aKc4oXrx4sUyZMi4Dmzt3rsqoHObPn+8ysFKlSqVfUOJ2P//8c926
dV1+juUGDBigrKLSmHniKFu2bIoziv+kG/wbqFevnvrO3+QC4Oq3TJUSXUYl
kcfFqR72yzkyc0FFRUUpDmz//v3Zs2c3jio8PFzLfsGOjcCMNWnSRHFGUXpO
M8vcLViwQGVUDnPmzHEZ2L333qt48CMn6IknnjCOSn5AZUjKMAfXxV+m4QGf
hjL40sqzx2sdL+PIlMTZagnOHnH3+KJr06ZNSOp98OjRo559gnr+0v612Lp1
q8HNSOZHly9f1hLY22+/bRCYQ5EiRWJiYpSFNHv2bJdvcmlcumTdunUuw7vj
jjsMHr2wnLQuM1tO61q6JDY21sz6Syrfrzx58mSJEiVchqT4iYs0JtdfUvl+
pYRkZnVrufkqC+kWjpumsVq1arkcAyxfvtzZl7l2kLGuslc+bzFhwgSX4ckw
/sSJE8pCmjlzpsuQcuTI8fvvvysLKb01a9a47PxVvl/5T+pGTi5f45WYbdqz
zCWT6y+pfL/S5Gu848aNUxZSetIbmFl/6fnnn1cWkvSZzhIL6bVu3VpZSLeQ
SYfL8GSaZsd+ms6Y2SxG49uCtmIOrou/TMMDPg1lsF2IB+8s79+/3/Eawquv
vursZww23PFghCkTWMfvDh061N3fdVdKSsrChQvl0Dp37tzJO2mvRdx9991e
flTXrl1HjBixfv16uw9fmeTk5IoVK2bYQmSIqGxJqAwDMzPAKFeu3Llz5xTE
s2rVKjOvxkydOlVBMM706dPHZYRyOaj5LvW3334zs6613o2cXD4NGJK64PCy
ZcsUBBMXF1elShWX8eh6W8Th3//+t+8s8C69hJkkj663RRzOnDnjbEmK9GR4
5vJBAvmBJUuWOLbIsduYMWPU1E+Gh2lmK9IKFSoYP0VmlRUrVphZ11plvvp2
ZmaXefLksXWPyDRSipl1rXv27KkgGGc++ugjlxHKeVezu8eFCxecjcTSk2tf
42owW7du9Z0F3qWXMJPkyZ8/v4I9KZw5ffq0mVGQ3MXUPEUm92WXwcgpVv+s
qRrMwd0ShNPwgE9DDRkyxFmDdHc5RGkejRo1kl8sWLDgpUuXnP2Ywaos7n6T
KJ2kTH9CUtc6jo+Pd+t3PSC3fuOuUi+VD+HY7aeffspwT17FCxzd7tChQ2ZW
Rb7vvvvs/g56/vz5ZlamrVOnjq61cx0SEhLMrGksA7MMd4q30LZt25y9FJ+e
3JL07skiHanLB9RDUr97+vTTT22NRDrktC+MjCPRtXZuGhkCuYxTyP3O1svh
8uXLBmO89DSunetg5u2kkNQV0uQSNvOBGzdulJGhmUcNPVOsWDG768SYmfey
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
SL+qZi97j8m9yfxaZArIvdsXdvlUgzk4jAV8Gko421i5Ro0aLn/3yy+/dPyw
+W10EhMTvbnoPv74Y8cPz58/32SJgK0WLVrk2ZfX1qpQoYJvvot3u61bt7q1
TpRNChYsaPmOaTb5448/zC8ea5/w8PBZs2bprgxTEhIS3Fo53D5RUVG+s9Gn
ARnQurVUiH2eeuopOX2668OUTz/91K1FAm1SsWJFf5m4RUdHu7VOlE3kBuQj
2y+6JGfWrXUObSLt3HgjeN8hvYdbK4fbR3pUH8/aOcgdyuPHO60ld21/6fyt
whwcBoIhDVWsWLEMG2Tp0qWNf1Eas+Mh1Vq1arnV0zpbodTlRXfx4kXHBtOP
PPKIX/TtCBLa8yrNmzf38W/cbqE9r+JHWTsHGZvJ9FxjjRUoUMBfsnYO2ofW
fpS1SyMzTb15FX/J2qXRnleRGbd/Tdyk45XuV2ON+VHWzkFu7nrzKtLC/SVr
5+ALnb+/ZO3SfPLJJ3qfVPeXrJ21mIPDQDCkoZwtTps7d27jX5w0aZLjJ93d
N6d48eKeXXRpW7JasgkyYKGjR4/WqVPHnVuuNcLCwoYNG+azKw8YuHDhgrvL
Y1rl2WefNbketU+5efPma6+9pmWgKKOOgwcP6q4AT3z22WeeLRrmpZIlS27Y
sEH30Xti48aNHq+C4g05TZ9++qnuo/fE4cOH3dpozCrSFYwcOdIfO/+///67
Y8eO6mtMdOrUybPtRPWSszx8+HAtnb+0bWnhuivAE7NmzfJs0TAvyVxm06ZN
uo/eE+vXr5c7l/oay5Mnz5w5c3QfvR7MwWEgGNJQBi8Fy6zH2W/99ddfjrUT
u3fv7m6Jzp6CML7o5D7ouAV37drV3RIBNZYsWeLuxnbeqFGjxv79+3UftFc2
b96sciWHEiVKfPvtt7oP2itHjx6tV6+eshq78847Z8yY4dfffMmsMzIyUlmN
yX1q1KhR165d033cnpM578SJE1U+FtW5c2dfXpDcJblAZBqlcg23unXrHjly
RPdxe0Wm6p7tJuAZKUtuN7oP2ityxuW8K6sxac/Sqv2685deRfoWZTUmfab0
nP6YGU4jdy65f6ns/OXu7I+ZYaswB4eBYEhDtWvXztklcPbsWWe/1bNnz5DU
bblOnTrlbomeXXSOZ5KzZ89+8uRJd0sElDl+/PjTTz/t2XZa5skNaNy4cX49
2klz6dKlvn372j3sCQsL692798WLF3UfrgWkn3zrrbc820HPLU2aNPGvVxcN
LFmyxNnT7xaqUqWKf726aGD79u0K3py9++67za9r4eNiYmKaN29ud+cvF/6E
CRMMBkt+JC4u7oUXXrD7IR/5fClFytJ9uBaQ8z5x4kQFnX/Tpk3969VFAwsX
LixatKjdNVa1atVt27bpPlZrREdH33///XbXmJyUxYsX6z5WzZiDw0AwpKHk
7uysQf72228Z/srPP//sGGjJ3dCDEj246NauXev4gTfeeMODEgHFZPLer18/
O5YuL168+Hvvvedfi4GYIdf+qFGj7HicIE+ePPLJfv2sRYYuX74sLUFm8ZbX
WFhYWOfOnffu3av7EC2WnJz89ddfV69e3fIaC0ldn+3HH3/UfYjWk4OSQ7Oj
xipUqLBkyRIf33XRA0ePHpXO/4477rC8xsqUKTNjxozA259IOmebOn/5zIDs
/GUAIJ1/kSJFLK8xR+e/b98+3YdoMelnpLexaVEyOn93BWrn7wHm4DAQDGmo
ESNGOGuQGX6rm5KSUrt2bfnXUqVKJSYmelBinz593Lrobt686dgo5J577vHr
Nx0QbGJjYwcNGmTJWFFuOjVq1Pj4448D+xK4cOHChAkT7rvvPu9rTJQrV27c
uHH+uAyUeTInnTJlSqVKlSypsVy5cnXp0iXwElDpJSUlzZ8//9FHH82UKZP3
NRYREdGsWbN169bpPix7rV+/XuYjcrDe15hUe61atebNmxcYz/M4c+zYsQED
BhQuXNj7GpPO/5FHHpk5c6ZnIy5/8ffff48fP758+fLe11hI6rbvMmOSz9R9
WDZKSEh4++23rUqt5M6du1u3boGXgEpP+hzpeaT/sarzb9GihfSNug/LXnJ3
k3ucVZ3/Y489Jvdf/9qHwlbMwWEgGNJQ77zzjrMGuWLFitt/fsmSJY5//eqr
rzwrceTIkW5ddB9++KHjX7/44gvPSgQ0Sk5O3rx588svv+xZPurhhx+WoWZs
bKzu41BKBsOvvfaaZ1OSMmXKyJ199+7dug9CqUOHDk2cOFFaiwfvBBUsWLB3
797ffPPN9evXdR+HOqdPn/74448bN27swTtBOXLkaNu27cKFCy9duqT7ONSJ
j49ftGhRu3btHKtSuEUquVGjRh999JEHLxH4L+n8N23a1Ldv37vuusvdGpML
uWbNmlOmTDl+/Lju41Bqz549MkosV66cuzUWkvrVg/xuYCfSb3fw4ME333zz
oYce8qDzL1SoUGRk5LfffhtUnb/0QtIXSY/kQecvvZ/0gdIT+tf2xF6SO53c
7+SuJ/c+d2tMKlnus3K3lXuu7uPwOczBYSAY0lBz5sxx1iBv32/06tWrJUqU
kH+qX7++x+sWunXRXbhwwbHmc926df16pUTgn9Tno6SRjxkzpnXr1g888EDp
0qXz588fFhYmLTxbtmxFihS57777HnnkkV69er3//vubN28OjOUsvHH27Nm1
a9e+9dZbnTp1evjhh8uWLSvDZscXc/LfggULyt/I8Ltjx46TJk367rvv/vrr
L90haybDxR9//PGDDz7o3bu3tKUKFSpIu3Js0Zs5c2bpTkuVKiVtr1WrVqNH
j5aRTMAsAOKxxMTEnTt3yv3u5ZdfrlevXuXKlYsVK5a2+kqePHlKlixZtWrV
J554IioqasGCBb/++muQf5krh3/gwAGZlUiFSLVI5UgVSUU5akyqTipQqlEq
U6p01qxZUr2B/SSPGTExMcuXL5eLTi49R+cvF2P6zl8uVblg5bKVi1cu4aDK
cGbozJkz0vlLxy7du3Tyt3T+8mf5G7kpyK1BbhDyk4H38p27pM3IsEEGDzKE
kLYkwwlpV9K6QlLftpP2Jq1O2p4MP2QQIq1R2qTukDVzdP7SR0lPJbMMZ51/
kyZNpK+THk/6PTp/uQPKffDVV19t3Ljx7Z1/8eLFHZ1/v3795K66a9cuOn8D
zMFhIBjSUKtWrXLWIOXOfssPv/HGGyGpz1V682WTwUV3+37N/fv3D0n9WvCX
X37xuEQAAAAAAHwBc3AYCIY01LZt25w1yKioqPQ/efLkScdX6i+++KI3JRpc
dG+//Xb6n/ztt98c3xVGRkZ6UyIAAAAAAL6AOTgMBEMa6tChQ84aZK9evdL/
ZNeuXUNSlzE8d+6cNyUaXHRDhw5N/5NNmzYNSX3Ik2etAQAAAAABgDk4DARD
Gur8+fPOGmSrVq3SfmzHjh2Ov5w6daqXJR4+fNjMRbdmzRrHX06ePNnLEgEA
AAAA8AXMwWEgGNJQSUlJzjbXqFOnjuNnUlJSatWqFZK6B+6NGze8LNHMRSel
ODZtL1OmTFDt3wEAAAAACGDMwWEgGNJQIm/evBk2yIoVKzp+YMGCBY6/WbNm
jffFmbnopk2b5viblStXel8iAAAAAAA+gjk4nAmSNFSZMmUybJCFChWSf71y
5UqxYsXkf5s1a2ZVicYX3fnz5x27fzZu3JgNIgEAAAAAgYQ5OJwJkjRUzZo1
M2yQYWFh0gLHjBnj+PPBgwetKtHZRXfXXXfJv7700kvy58yZM+/fv9+qEgEA
AAAA8AXMweFMkKShHIvhZ+jAgQPZsmWTPwwePNjCEmvUqJFhcVmyZPn111+l
8cuf5UKwsEQAAAAAAHwBc3A4EyRpqM6dOzu7BB577DH5b4ECBeLirKwHg4vO
UWKePHnOnz9vYYkAAAAAAPgC5uBwJkjSUAMGDHDWIB1mzpxpbYkGF53D+++/
b22JAAAAAAD4AubgcCZI0lDjxo0zaI33339/UlKStSUaX3QVKlS4efOmtSUC
AAAAAOALmIPDmSBJQ02fPt2gQf7www+Wlzh27FiDEr/77jvLSwQAAAAAwBcw
B4czQZKGWrx4sbPW+Mwzz9hR4ocffuisxBYtWthRIgAAAAAAvoA5OJwJkjTU
unXrMmyNERERMTExdpS4aNGiDEvMkiXL4cOH7SgRAAAAAABfwBwczgRJGurn
n3/OsEGOHDnSphKdXXTWbkkJAAAAAICvYQ4OZ4IkDXX8+PHbW2ORIkUSEhJs
KnHXrl23l2j5lpQAAAAAAPga5uBwJkjSUJcvX769Qc6bN8++EmNjY28v0fIt
KQEAAAAA8DXMweFMkKShUlJSIiIi0rfGGjVqJCcn21diQkLCLe3fji0pAQAA
AADwNczB4UyQpKFE4cKF0zfI7du321qcXHTh4eHpS7RjS0oAAAAAAHwQc3Bk
KHjSUFWqVElrjZ07d1ZQ4t13351WYps2bRSUCAAAAACAL2AOjgwFTxpKGqGj
NebNm/f06dMKSmzatKmjxJw5c8bGxiooEQAAAAAAX8AcHBkKnjTU22+/La0x
U6ZMS5cuVVPihAkTpMQsWbIsWrRITYkAAAAAAPgC5uDIUPCkoZKTk3/++WeV
GdGkpKSffvpJTdYXAAAAAADfwRwcGQqeNBQAAAAAAAA0Ig0FAAAAAAAABUhD
AQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAA
QAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAA
AAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCA
NBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAA
AAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0F
AAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAA
BUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAA
AAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHS
UAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAA
AFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQA
AAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAU
IA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAA
AAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhD
AQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAA
QAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAA
AAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCA
NBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAA
AAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0F
AAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAA
BUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAA
AAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHS
UAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAA
AFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQA
AAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAU
IA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAA
AAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhD
AQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAA
QAHSUAAAAAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAA
AAAAAFCANBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCA
NBQAAAAAAAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAA
AAAUIA0FAAAAAAAABUhDAQAAAAAAQAHSUAAAAAAAAFCANBQAAAAAAAAUIA0F
AAAAAAAABUhDAQAAAAAAQAHSUPh/7dixAAAAAMAgf+tZ7CqMAAAAAAYaCgAA
AICBhgIAAABgoKEAAAAAGGgoAAAAAAYaCgAAAICBhgIAAABgoKEAAAAAGGgo
AAAAAAYaCgAAAICBhgIAAABgoKEAAAAAGGgoAAAAAAYaCgAAAICBhgIAAABg
oKEAAAAAGGgoAAAAAAYaCgAAAICBhgIAAABgoKEAAAAAGGgoAAAAAAYaCgAA
AICBhgIAAABgoKEAAAAAGGgoAAAAAAYaCgAAAICBhgIAAABgoKEAAAAAGGgo
AAAAAAYaCgAAAICBhgIAAABgoKEAAAAAGGgoAAAAAAYaCgAAAICBhgIAAABg
ELmIPAU=
       "], {{0, 781}, {1581, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> Association["Software" -> "gnome-screenshot"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{212.6666666666636, Automatic},
     ImageSizeRaw->{1581, 781},
     PlotRange->{{0, 1581}, {0, 781}}]}], ";"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.74162404850033*^9, 3.741624048506925*^9}, 
   3.741690648360053*^9},ExpressionUUID->"20bff082-972c-4e67-8487-\
9d6ea5d22545"],

Cell[CellGroupData[{

Cell["Amplitudes", "Section",
 CellChangeTimes->{{3.74169196689572*^9, 
  3.7416919683311567`*^9}},ExpressionUUID->"4d73b131-f75a-4736-bf04-\
86a348dac92b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MWW1", "=", 
     RowBox[{"Contract", "[", 
      RowBox[{
       RowBox[{"WVCV1", "[", 
        RowBox[{
         RowBox[{"-", "q"}], ",", 
         RowBox[{"q", "-", "l"}], ",", "l", ",", "\[Mu]", ",", "a", ",", 
         "d"}], "]"}], ".", 
       RowBox[{"propVC", "[", 
        RowBox[{
         RowBox[{"q", "-", "l"}], ",", "b", ",", "a"}], "]"}], ".", 
       RowBox[{"WVCV1", "[", 
        RowBox[{"q", ",", 
         RowBox[{
          RowBox[{"-", "q"}], "+", "l"}], ",", 
         RowBox[{"-", "l"}], ",", "\[Nu]", ",", "b", ",", "s"}], "]"}], ".", 
       RowBox[{"propV1", "[", 
        RowBox[{"l", ",", "s", ",", "d"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW1L", "=", 
     RowBox[{"OneLoop", "[", 
      RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW1LPV", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"PaVeReduce", "[", "MWW1L", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"MWW2", "=", 
     RowBox[{"Contract", "[", 
      RowBox[{
       RowBox[{"WVCV2b", "[", 
        RowBox[{
         RowBox[{"-", "q"}], ",", 
         RowBox[{"q", "-", "l"}], ",", "l", ",", "\[Mu]", ",", "a", ",", 
         "d"}], "]"}], ".", 
       RowBox[{"propVC", "[", 
        RowBox[{
         RowBox[{"q", "-", "l"}], ",", "b", ",", "a"}], "]"}], ".", 
       RowBox[{"WVCV2a", "[", 
        RowBox[{"q", ",", 
         RowBox[{
          RowBox[{"-", "q"}], "+", "l"}], ",", 
         RowBox[{"-", "l"}], ",", "\[Nu]", ",", "b", ",", "s"}], "]"}], ".", 
       RowBox[{"propV2", "[", 
        RowBox[{"l", ",", "d", ",", "s"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW2L", "=", 
     RowBox[{"OneLoop", "[", 
      RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW2LPV", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"PaVeReduce", "[", "MWW2L", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"MWW3", "=", 
     RowBox[{"Contract", "[", 
      RowBox[{
       RowBox[{"WWVCVC", "[", 
        RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "]"}], ".", 
       RowBox[{"propVC", "[", 
        RowBox[{
         RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW3L", "=", 
     RowBox[{"OneLoop", "[", 
      RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW3LPV", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"PaVeReduce", "[", "MWW3L", "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW41", "=", 
     RowBox[{"Contract", "[", 
      RowBox[{
       RowBox[{"WWV1V1", "[", 
        RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "]"}], ".", 
       RowBox[{"propV1", "[", 
        RowBox[{
         RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW41L", "=", 
     RowBox[{"OneLoop", "[", 
      RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW41LPV", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"PaVeReduce", "[", "MWW41L", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"MWW42", "=", 
     RowBox[{"Contract", "[", 
      RowBox[{
       RowBox[{"WWV2V2", "[", 
        RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "]"}], ".", 
       RowBox[{"propV2", "[", 
        RowBox[{
         RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW42L", "=", 
     RowBox[{"OneLoop", "[", 
      RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MWW42LPV", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"PaVeReduce", "[", "MWW42L", "]"}], "]"}]}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.7416240923846483`*^9, 3.7416241096155577`*^9}, {
  3.741624198456308*^9, 3.741624225401763*^9}, {3.741624417851057*^9, 
  3.741624433360313*^9}, {3.741624590764674*^9, 3.7416246041494837`*^9}, {
  3.741624635327046*^9, 3.741624643250196*^9}, {3.741624698317836*^9, 
  3.741624761727851*^9}, {3.741965617926855*^9, 3.741965628602372*^9}, {
  3.741965708230193*^9, 3.741965722963344*^9}, {3.7421496607975082`*^9, 
  3.742149670129768*^9}, {3.742294376457203*^9, 3.742294386553954*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"af6544f5-ecc8-405e-a27f-1e51067910ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of amplitudes", "Section",
 CellChangeTimes->{{3.741691979268497*^9, 
  3.741691982243298*^9}},ExpressionUUID->"beeb1aad-9d92-4467-b755-\
5b7044b680f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MWW", "=", 
   RowBox[{
    FractionBox["I", 
     RowBox[{"64", "*", 
      SuperscriptBox["\[Pi]", "4"]}]], 
    RowBox[{"Simplify", "[", 
     RowBox[{
     "MWW1LPV", "+", "MWW2LPV", "+", "MWW3LPV", "+", "MWW41LPV", "+", 
      "MWW42LPV"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{
     RowBox[{"FV", "[", 
      RowBox[{"y", ",", "\[Mu]"}], "]"}], ",", 
     RowBox[{"FV", "[", 
      RowBox[{"y", ",", "\[Mu]"}], "]"}]}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{
     RowBox[{"FV", "[", 
      RowBox[{"q", ",", "\[Mu]"}], "]"}], ",", 
     RowBox[{"FV", "[", 
      RowBox[{"y", ",", "\[Mu]"}], "]"}]}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{"y", ",", "y"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{"q", ",", "y"}], "]"}], "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.741624572976516*^9, 3.7416245775488787`*^9}, {
   3.74162482733567*^9, 3.741624845573947*^9}, {3.741624882335182*^9, 
   3.741624882688037*^9}, {3.741625070399714*^9, 3.7416250735510683`*^9}, 
   3.7416253609193296`*^9, 3.7416254071059093`*^9, 3.7416255116355457`*^9, 
   3.741625622732995*^9, {3.741635487304205*^9, 3.7416354908191137`*^9}, 
   3.7416920704861317`*^9, 3.742149686874918*^9, {3.7422339486526203`*^9, 
   3.742233978700109*^9}, 3.74229440183438*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"7afc50f2-55a1-4dda-bea7-44709cb509c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the term proportional to gmunu", "Section",
 CellChangeTimes->{{3.741692001042224*^9, 3.7416920075781813`*^9}, {
  3.741692040053833*^9, 
  3.741692055902158*^9}},ExpressionUUID->"5747785e-90cb-4c2f-94df-\
d2169d3e3499"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPi]WW", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"Contract", "[", 
     RowBox[{"MWW", ",", 
      RowBox[{
       RowBox[{"FV", "[", 
        RowBox[{"y", ",", "\[Mu]"}], "]"}], ".", 
       RowBox[{"FV", "[", 
        RowBox[{"y", ",", "\[Nu]"}], "]"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPi]WWx", "=", 
   RowBox[{"\[CapitalPi]WW", "/.", 
    RowBox[{
     RowBox[{"ScalarProduct", "[", 
      RowBox[{"q", ",", "q"}], "]"}], "\[Rule]", "x"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7416244856313677`*^9, {3.741624917904914*^9, 3.741624922664772*^9}, 
   3.741625024553791*^9, {3.741625424059381*^9, 3.741625425523664*^9}, {
   3.7416258105900106`*^9, 3.7416258322742367`*^9}, {3.741630955515877*^9, 
   3.741631032261505*^9}, {3.741631084458704*^9, 3.741631091511636*^9}, {
   3.741631133394731*^9, 3.7416311469389353`*^9}, {3.741631184055224*^9, 
   3.7416312301434183`*^9}, {3.74163128167173*^9, 3.741631291294896*^9}, {
   3.741632530266707*^9, 3.741632539357306*^9}, {3.741633929976631*^9, 
   3.741633936278582*^9}, 3.741634427524345*^9, {3.7416914189320793`*^9, 
   3.741691419202018*^9}, {3.741691592773176*^9, 3.741691593044765*^9}, {
   3.74169201502728*^9, 3.741692033982752*^9}, 3.7421496921495743`*^9, 
   3.7422944132528963`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"dd6e0816-09bb-4de5-9b69-a3b385b17f99"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Replacing A0 to B0 and expanding B0(x,m1,m2)", "Section",
 CellChangeTimes->{{3.7416920827643023`*^9, 
  3.7416921210672703`*^9}},ExpressionUUID->"63e7deb1-addb-41a0-9260-\
5715f7b32003"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"A0", ",", 
     RowBox[{"A0ToB0", "\[Rule]", "True"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.741692018712203*^9, 3.741692026445215*^9}, 
   3.741692123602549*^9, {3.74214638494381*^9, 
   3.742146385533573*^9}},ExpressionUUID->"e524ef36-96ba-40eb-8cdb-\
e2507d726ef1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BB12", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"x", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MV2", "^", "2"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BB1C", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"x", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BB2C", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"x", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.741635227500202*^9, 3.741635259060862*^9}, {
   3.741635564728705*^9, 3.74163557292104*^9}, 3.7416356049069138`*^9, {
   3.741691327212957*^9, 3.741691345380972*^9}, {3.7416915340707817`*^9, 
   3.7416915999838037`*^9}, {3.741691665186829*^9, 3.741691695394587*^9}, {
   3.7416920172168093`*^9, 3.7416920177836943`*^9}, {3.741692134507056*^9, 
   3.741692137523796*^9}, {3.7416925104721613`*^9, 3.741692521219598*^9}, {
   3.741693300764558*^9, 3.741693344262534*^9}, {3.741693472526968*^9, 
   3.741693477041115*^9}, 3.741693672994006*^9, {3.741950786463231*^9, 
   3.7419507934291773`*^9}, 3.7420606298566303`*^9, 3.742062983185796*^9, 
   3.742149699937503*^9, 3.742294418085031*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"4c0035cd-f353-4fab-a8db-8b468b36b3d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The amplitude after replacements", "Section",
 CellChangeTimes->{{3.7416921623947268`*^9, 
  3.741692177224592*^9}},ExpressionUUID->"8b8c07ec-417c-4e8a-9dfb-\
50d872c9bd83"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WWF", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"\[CapitalPi]WWx", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"B0", "[", 
          RowBox[{"x", ",", 
           RowBox[{"MV1", "^", "2"}], ",", 
           RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB12"}], 
        "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"B0", "[", 
         RowBox[{"x", ",", 
          RowBox[{"MV1", "^", "2"}], ",", 
          RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB1C"}], 
       "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"x", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB2C"}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WW0", "=", 
   RowBox[{
    RowBox[{"Expand", "[", "WWF", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", "0"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.741691781493144*^9, 3.741691806022744*^9}, {
   3.741692635578149*^9, 3.741692656273608*^9}, {3.74169321467247*^9, 
   3.741693220878487*^9}, {3.741693288216032*^9, 3.741693319647132*^9}, {
   3.741693368424301*^9, 3.741693396323289*^9}, {3.741693488386139*^9, 
   3.7416935041210613`*^9}, {3.741695639683567*^9, 3.741695681509883*^9}, {
   3.7416958925222816`*^9, 3.7416958955085173`*^9}, 3.741697035888385*^9, {
   3.741697099733674*^9, 3.741697107681335*^9}, 3.741776661541267*^9, 
   3.741950775892129*^9, 3.7420393606011877`*^9, 3.742042549766801*^9, {
   3.7421497052131567`*^9, 3.742149706608624*^9}, {3.742294420880241*^9, 
   3.74229442431208*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6d8b25ac-0a99-41dc-8e2f-07980bf76edb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZZ-polarization", "Subchapter",
 CellChangeTimes->{{3.74162408653778*^9, 
  3.7416240896468687`*^9}},ExpressionUUID->"2c508c35-e918-4948-a1b6-\
f5222c6b0bd5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzs3Xuc1XPiP/A9M9Nd97LGpSQhinX7tt9Uok2ELsq6J4kKua5arFCIpUTY
aFdWu66JSrFuiy5IiXZtUu6ki3SdLtPM2d/sr/3OYjnnMzPnnPc083z+4ZGc
836/3u8+7zPTa47PadbvkpPOz/rJT35yRfWif5x0ztCjLr/8nKt61Sv6l5Mv
vmLQgIvP63/cxb86b8B5l/+8X3bRb95d9I9jq/3kJ//69T8BAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA0OLx+KeffvrGG2/M3HHMnz9/48aN
oXcOAAAAACCAvLy8o4466ic7oCpVqkyYMCH0/gEAAAAAZNqMGTNCF7Slt/fe
e4fePwAAAACATJszZ07odrb0Dj300ND7BwAAAACQaYWFhSNGjGjRokXNmjWr
pdS3C9js7OzUDl6vXr0OHTrMnTs39P4BAAAAAFQcbdq0Ke5177jjjtBxAAAA
AABIQq8LAAAAAJTUK6+8csIJJ3To0OHYY4896aSTzjjjjPPOO+/iiy8eOnTo
sGHDRowYccstt4waNerOO++8995777///nvuueeOO+649dZbhw8f/pvf/GbI
kCGXXnrpoEGDzj333LPOOuuXv/xljx49unbt2qlTp6IxBwwYsHLlynTEXr16
ddGMRVMUTXT88cf36tWrKHnR71x44YVXXHHFNddcUxTvt7/97V133TVu3Lix
Y8cW/fr6668vWtTgwYP79+9/+umnF+Xs0qVLx44di1aRn5+fjpBR6HUBAAAA
gBKJx+MNGzZM64d23XnnnelIPmDAgBSGfPHFF9MRMgq9LgAAAABQIqtWrUph
O/qDnnjiiXQkb9euXQpDfvDBB+kIGYVeFwAAAAAokXg83qNHj0aNGmVlZaWw
Jt0uJyene/fumzZtSkfysWPHpuSdxrFYbNCgQelIGJFeFwAAAAAonYKCgm++
+eaTTz5ZuHDhzJkzx48ff9xxx0VvR2vXrn3SSScVPeull1565513vvjii02b
NsXj8bRmLhp/+fLlRTOOHDmyWbNmEaMeeOCBl1xyyUMPPVT0xEWLFq1fvz6t
IZPS6wIAAAAAKTR8+PAo73e9+uqrt27dGjZqQUHBddddlzhn375933777bA5
/5teFwAAAABIoby8vOzs7MS97vjx40PH/Ld4PH7KKaf8YMif/exnb775ZuiA
P0yvCwAAAACk1v7775+4192yZUvojP/x8MMP/3fCU045ZfPmzaGj/Si9LgAA
AACQWr17907c665evTp0xv+YPn369+INGTKksLAwdK5E9LoAAAAAQGpdeeWV
iXvd+fPnh874H8OGDft2tvPPPz/dn91WdnpdAAAAACC17rnnnsS97qRJk0Jn
/Ldt27Y1adKkONgJJ5xQ9DuhQyWn1wUAAAAAUmvGjBmJe93bbrstdMZ/++Mf
/1icaq+99lq/fn3oRJHodQEAAACA1Fq0aFHiXveCCy4InfFfNm3atMcee2yP
lJWVNXv27NCJotLrAgAAAACptWnTpsS97nHHHRc6479cddVVxZGuueaa0HFK
QK8LAAAAAKTcLrvskqDX3W+//UIH/Off/va3nJyc7XlatWq1devW0IlKQK8L
AAAAAKTc//7v/ybodatXrx6PxwPGKywsLE4Yi8XmzJkTMEwp6HUBAAAAgJQ7
/fTTE9+KYdmyZQHj3XvvvcVJysnNfktErwsAAAAApNw111yTuNcN+BbZL7/8
sk6dOttj5Obmrl27NlSSUtPrAgAAAAAp9/vf/z5xr/vnP/85VLbevXsXx5g0
aVKoGGWh1wUAAAAAUu7FF19M3OveeOONQYJNmzatOMMJJ5wQ9ja/pabXBQAA
AABS7sMPP0zc65577rmZT7Vhw4YmTZpsD1CrVq1PP/008xlSQq8LAAAAAKRc
fn5+VlZWgl736KOPznyqyy67rDjA6NGjMx8gVfS6AAAAAEA6NG3aNEGv26xZ
swznmTdvXnHVfMghh2zbti3DAVJIrwsAAAAApMORRx6ZoNfNzs7OZLNaNNch
hxyyfeqsrKx58+ZlZt7Zs2cPGjSoR48ex6dU3bp1i3eyZcuWqR385JNPHjFi
xPr16zOzRQAAAABA+dG3b98EvW6RTz75JGNhRo0aVTzvZZddlplJlyxZkp2d
nXgTyq1u3bplZpcAAAAAgPLjhhtuSNwc/vWvf81Mkk8++aRmzZrbJ91jjz02
bNiQmXknTZqU/v41XXJzczOzSwAAAABA+fHQQw8lbg4feOCBDMSIx+PHH398
8aRTp07NwKTbLV++vEGDBmnuX9Nl4MCBGdsoAAAAAKCcmDlzZuLm8Nprr81A
jMcff7x4xl69emVgxm/76quv/vCHPwwfPvy6lNptt92KF9WlS5fUDn7LLbfM
mDGjsLAww3sFAAAAAAT3+eefJ+51zzzzzHRnWLNmzS677LJ9ujp16nz55Zfp
njEz2rRpU7yNd9xxR+g4AAAAAEAFUVhYWLVq1QS97hFHHJHuDAMHDiye7p57
7kn3dBmj1wUAAAAA0qRFixYJet1dd901rbPPnj27eK42bdoUFBSkdbpM0usC
AAAAAGlyzDHHJL4Vw5YtW9I09datWw844IDts2RnZ7/77rtpmigIvS4AAAAA
kCbnn39+4l538eLFaZr6pptuKp5l6NChaZolFL0uAAAAAJAmI0eOTNzrPvfc
c+mYd8mSJdWrV98+RbNmzfLy8tIxS0B6XQAAAAAgTR599NHEve7vfve7lE8a
j8c7deqU7uo4LL0uAAAAAJAmb775ZuJed8iQISmf9I9//GPx+KeffnrKxy8P
9LoAAAAAQJqsWLEica978sknp3bGVatWNWzYcPvg9erVW758eWrHLyf0ugAA
AABAmsTj8Zo1aybodQ877LDUznj22WcXDz5+/PjUDl5+6HUBAAAAgPQ54IAD
EvS6DRs2TOFcL730UvHI7du3LywsTOHg5YpeFwAAAABInxNOOCHxrRjWr1+f
kok2b97cokWL7WNWqVLlH//4R0qGLZ/0ugAAAABA+gwePDhxr7tw4cKUTPSb
3/ymeMxhw4alZMxyS68LAAAAAKTPqFGjEve6U6ZMKfss7733XpUqVbYP2KJF
i82bN5d9zPJMrwsAAAAApM/kyZMT97pjxowp4xSFhYVHHHFE8YAvv/xySpKX
Z3pdAAAAACB9FixYkLjXveSSS8o4xX333Vc8Wt++fVMSu5zT6wIAAAAA6bNm
zZrEvW63bt3KMv5XX31Vt27d7UM1atRo1apVqUpenul1AQAAAIC0qlevXoJe
t3Xr1mUZ/Je//GXxUA899FCqMpdzel0AAAAAIK0OPvjgBL1u7dq14/F46Uae
Pn168TidOnUq9Tg7HL0uAAAAAJBWJ510UuJbMXz99delGHbjxo1NmzbdPkK1
atU++OCDlCcvt/S6AAAAAEBaXXHFFYl73bfeequMw954440pj12e6XUBAAAA
gLS6++67E/e6jz/+eEnHfPvtt7Ozs7c/ff/999+6dWs6kpdbel0AAAAAIK2e
eeaZxL3urbfeWqIBCwoKDjvssOKnz5o1K03Jyy29LgAAAACQVu+9917iXnfg
wIElGnDMmDHFzx0wYECaYpdnel0AAAAAIK3y8vIS97pdunSJPtpnn3220047
bX/iT3/602+++SZ9ycstvS4AAAAAkG4//elPE/S6++67b8Rx4vF4t27dip/4
6KOPpjV2ufXtXnfMmDGh4wAAAAAAFdC3e8j/Vq1atcLCwijjPPnkk8XPOu64
4+LxeLqTl0/t2rUr3ofx48eHjgMAAAAAVECnnnpq4lsxfPnll0kHWbdu3a67
7rr98TVr1vz444/TH7yc6t+/f/HWzZ07N3QcAAAAAKACuuqqqxL3urNmzUo6
yIUXXlj8+Ntuuy0DscutDz/88MADD6xdu/bll18eOgsAAAAAUDHdf//9iXvd
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
vvu+++67aU311FNPlfS+u7vuuuuaNWvSmgoAAAAAoDy47bbbSlSfdu/efd26
dRkItnLlyiOPPLJE2fr165eBYAAAAAAAAX388ce1atWKXpxecMEFhYWFGYuX
n5/fv3//6PFisdjzzz+fsXgAAAAAAJl33HHHRW9Nhw4dGiTktddeGz1kq1at
Mtk8AwAAAABk0oQJE6L3pYMHDw4Y9YYbboge9YEHHggYFQAAAAAgTVatWtWo
UaOITWnHjh3z8/PDBu7bt2/EtM2bNw+eFgAAAAAg5c4444yINenOO++8bNmy
0Hn/uWnTpgMPPDBi5kceeSR0XgAAAACAVJo4cWLEgrTIjBkzQuf9t0WLFlWv
Xj1K5p///OehwwIAAAAApMz8+fNr1KgRsdTt06dP6Lzfccstt0RM/sYbb4QO
CwAAAACQAitXrmzSpEnEanTnnXf++uuvQ0f+jm3btu23335Rwl9wwQWhwwIA
AAAAlNX69evbtm0bsdT9SXm9S+2kSZOihN9ll10KCwtDhwUAAAAAKL0NGza0
b98+eql74oknho78w+Lx+AEHHBBlCa+++mrosAAAAABAWnz66adTp069+eab
zzzzzM6dO7du3XqXXXap/3923333gw8++Nhjjx08ePC4ceNmzpy5cePG0JFL
rChzhw4dope6derU+fzzz0On/lFFfxBRVjFkyJDQSQEAAACAlMnLy3vqqacG
Dhy41157RW87t8vJyTnssMMuueSSZ599tqCgIPRSklu2bFmbNm1KtMZ77703
dOpENm7cWLNmzaSraNu2beikAAAAAEBZFRQUPPnkkyeffHKtWrVKWuf+oJ/+
9KcXX3zxggULQq/sR82bN2/33Xcv0aK6du1a/u9M26tXr6QLqVat2ubNm0Mn
BQAAAABKad26dbfffnvTpk1L2+AmcfTRRz/zzDPxeDz0Qr/jT3/6U5T3tX7b
vvvuu3bt2tDBk5s4cWKU5cyaNSt0UgAAAACgxDZt2nT77bc3atSoVH1tybRq
1WratGmhV/wvK1as6N27d0nz161b9/333w+dPZLPPvssyorGjx8fOikAAAAA
UDKTJ08u6V0Iyq5Dhw6vv/56wFU/+uijjRs3LmnsrKysZ555JmDsktpzzz2T
LspHpwEAAADADmTZsmUnnXRSaWrZVIjFYr169cr8e1/nzJnTrl270mUeM2ZM
htOWUbdu3ZIuqmfPnqFjAgAAAACRTJ06NTM3XkgsJydn4MCBn332WQaWvGDB
gh49epQ66m233ZaBkKl1xRVXJF3XIYccEjomAAAAAJBEfn7+RRddFIvFSt1w
plx2dvaJJ574zDPPFBQUpHy9mzZtevDBB3/+85+XJeGtt96a8mAZcPfddydd
WvPmzUPHBAAAAAASWbdu3THHHFOWhjOtmjRp8qtf/erll1/Oz88v40rXr1//
xBNP9OnTp379+mVMNXLkyJRsfuY9/PDDSVfXsGHD0DEBAAAAgB/11VdftW7d
uowlZ2bUrVu3d+/eY8aMmTVrVl5eXsQFLl++fNq0acOGDevcuXO1atXKHiMn
J+fee+9N6x9KWk2fPj3KGuPxeOikAAAAAMAPWL58ecuWLctedWZednZ269at
jz/++L59+1555ZW3fMvw4cMvvPDC7t27t2nTJjc3N7XzNmjQ4MUXXwz951Ym
c+bMibLS9evXh04KAAAAAHzfypUr999//zL2nDk5OYceeuj5558/atSoiRMn
/uUvf3nhhReeeOKJu+66a+jQoT169Nh7773LOEX5sd9++33wwQeh/9zKatGi
RVEW++mnn4ZOCgAAAAB8R15eXps2bUrdcDZo0KB///5Tp06N8q7OZcuWPfzw
w7169apRo0apZwyuKP+aNWsy8EeTbitWrIiy3gULFoROCgAAAAD8R0FBwYkn
nli6erN9+/aPPfbY1q1bSzHv+vXrR48e3aRJk9JNHUqjRo0eeeSRlP8phJKf
nx+LxZKu+uWXXw6dFAAAAAD4j2HDhpWi3mzXrt1rr71W9tnz8/PHjRuX8jvf
pknPnj2XL19e9lWXK7Vr10668PHjx4eOCQAAAAD82wsvvJCVlVWibrN+/foP
PPBAPB5PYYyNGzfeeOONdevWLW3hmnbNmzd/4oknUrjk8iPKTY8vueSS0DEB
AAAAgH/55ptvdtlllxLVmx07dvz888/TlGf16tVDhgypWbNmacvXtGjUqNGd
d95ZuntN7BC6d++edBOOPvro0DEBAAAAgH8ZMGBAiRrOyy67rKCgIN2pvvzy
y0GDBlWrVq20RWzK1KlT5+qrr167dm26lxzWb37zm6Rb0ahRo9S+QxsAAAAA
KIXZs2dHvwNDLBYbPXp0JuOtWLHi5ptvDvWpaj/72c/GjRu3YcOGTC45lEcf
fTTKnixcuDB0UgAAAACo1OLxeJs2bSKWnFlZWb///e+D5CwoKHjqqac6d+5c
0psAl07dunX79OkzZ86cIIsN5b333ouyOb/97W9DJwUAAACASu3xxx+P3nbe
cccdofP+c+XKlRMnTjzttNMaNGhQ2tb2R+26664DBw78y1/+UoFvopvAtm3b
atWqlXSX3GIXAAAAAAIqLCzcZ599InaeAwYMCJ33OwoKCmbNmjVy5MiTTz65
efPmsVisFEVuTk5O69at+/btO3bs2Llz5xZtSOhlBXbiiScm3bSqVauuXr06
dFIAAAAAqKSmTZsWsf88/PDDt2zZEjpvImvXrv3rX/86bty466+//sILL+zZ
s+cRRxxx6Hd16NDhjDPO+NWvfjVmzJjHH3/8jTfeyMvLCx28fLnnnnuiXA8Z
vscyAAAAAFCsc+fOUUq8GjVqLFmyJHRYMuHDDz+Mcknst99+8Xg8dFgAAAAA
qHSWLl0a8d4FN910U+iwZE7EW3P89a9/DZ0UAAAAACqd4cOHR6nvmjVrVs7v
wEBqDRkyJMqF0blz59BJAQAAAKDS2W+//aLUd3/6059CJyWjFi9eHPGN3K++
+mrosAAAAABQibz//vtRirtmzZoVFBSEDkumdezYMcrl0b59+9BJAQAAAKAS
uffee6MUd6NGjQqdlAD+/Oc/R7k8ijz55JOhwwIAAABAZdG7d++klV12dvZX
X30VOikBbN68uWHDhlF63dzc3G+++SZ0XgAAAACoFJo0aZK0sjv66KNDxySY
G264IUqvW6Rfv36hwwIAAABAxbdmzZooH4x18803h05KMOvWrWvUqFGUXrfo
WpoyZUrovAAAAABQwc2cOTNKXzdnzpzQSQnpt7/9bZTrpEidOnUWLVoUOi8A
AAAAVGQPPvhg0qYuOzs7Ly8vdFJCKroAcnNzI1a7++6779q1a0NHBgAAAIAK
69Zbb01a0+29996hYxLe+PHjI/a6RY466ig/CwAAAACANLn88suTdnQdO3YM
HZNyoUuXLtGr3bZt265fvz50ZAAAAACogM4999ykBd3JJ58cOiblwtKlS2vW
rBm92u3UqdPGjRtDpwYAAACAiuacc85J2s716dMndEzKi7Fjx0bvdYu0atXq
448/Dp0aAAAAACqUs88+O2k1V/SY0DEpLwoKCtq1a1eianf33Xd/++23QwcH
AAAAgIqjX79+SXu5k046KXRMypGvvvpq9913L1G1W6tWrd/97nfxeDx0dgAA
AACoCIYOHZq0lGvfvn3omJQv77zzTq1atUpU7f7k/3+S2gcffBA6OwAAAADs
8G677bakddyee+4ZOiblzsSJE0va6xapW7fuqFGjtm7dGjo+AAAAAOzAHnro
oaRdXCwW27hxY+iklDvDhg0rRbVbZK+99nrsscfclgEAAAAASufNN9+MUsTN
mjUrdFLKoyuvvLJ01W6R1q1b33fffX5kAAAAAAAltX79+lgslrSCGzFiROik
lFMXX3xxqavdIvXq1bv00ktfe+21goKC0EsBAAAAgB1GkyZNkpZvPjqNHxOP
xwcOHFiWane7hg0bnnHGGRMmTFi4cOG2bdtCLwsAAAAAyrVTTz01aeeWlZX1
5Zdfhk5KORWPx2+88cYob/yOqEaNGm3atDnzzDOHDBly5513Pvroo4//n4cf
fvi+b5k4ceLUqVNfeeWVTz/9tLCwMPROAAAAAECG3HfffVGqtjvuuCN0Usq1
SZMm1apVK1XVbilUq1Zt//33P/3008eOHfv222+7sQMAAAAAFdiSJUuilGb7
7ruv90OS2Pz583ffffd097cRNWrUqH///s8++2x+fn7ojQEAAACA1GvZsmWU
ouzpp58OnZTybtWqVaecckq6O9sSyc3NHT58+IoVK0LvDQAAAACk0vDhw6P0
Yx07dgydlB3D448/3qhRo3QXtiVSvXr1QYMGuU00AAAAABXG0qVLI37o1Tvv
vBM6LDuG5cuX9+7dO91tbUnVrFlz6NCh69atC709AAAAAJAC7du3j1KLnXvu
uaGTsiN57bXX/ud//ifdbW1J7b777lOnTg29NwAAAABQVk8++WSUQqxGjRqr
Vq0KHZYdSTwef/jhh/fcc880l7Uldtppp3njLgAAAAA7tIKCgmbNmkVpw26+
+ebQYdnxbNmy5aGHHmrbtm2629oS2WeffRYuXBh6bwAAAACg9EaPHh2lCmvV
qlXopOzA3nnnnYEDB9auXTvdnW1ENWvWnDx5cuhdAQAAAIBSWr9+fd26daNU
YYsXLw4dlh1bQUHBzJkzL7744tzc3HQ3t0nFYrHrrrsu9JYAAAAAQClddNFF
UXqwUaNGhU5KBZGfn//cc89ddtllRx11VP369dNd4SYwYsSI0JsBAAAAAKWx
ePHirKyspA1Yhw4dQielYvrkk0+mTJly6623XnbZZWeccUanTp1atWq1149r
3LhxtWrVUlXtFs0begMAAAAAoDQ6dOiQtP7Kzs5etWpV6KTwL4WFhZ988skL
L7xwyy239OjRI+K9RH7MuHHjQi8IAAAAAEos4qenTZs2LXRS+AFbt26dPn36
SSedlJ2dXYpet0qVKq+88kroRQAAAABAyXz00UdR6q/rr78+dFJIpOhK7tev
Xyna3caNG3/66aeh4wMAAABAyRx44IFJu68TTjghdExI7u9///tRRx1V0mq3
Y8eOhYWFobMDAAAAQAlccMEFSYuv3Nzc0DEhkng8PmHChFq1apWo2r399ttD
BwcAAACAEvjDH/4QpfhatmxZ6KQQ1cKFC/faa6/ovW61atWWLFkSOjUAAAAA
RLVw4cIoxdecOXNCJ4USWL169RFHHBG92v3FL34ROjIAAAAARLVt27aqVasm
bb0mT54cOimUzNq1aw877LDo1e60adNCRwYAAACAqPbYY4+kldc999wTOiaU
2OrVq/fff/+Ive5BBx0Uj8dDRwYAAACASNq0aZO08rrmmmtCx4TS+OSTT3be
eeeI1e5jjz0WOi8AAAAARNK9e/ekfVf//v1Dx4RSmjp1asRe99BDDw0dFgAA
AAAi6du3b9K+6+yzzw4dE0rv/PPPj1jtzp07N3RYAAAAAEju7LPPTlp2nXPO
OaFjQumtX79+1113jdLrutQBAAAA2CH06dMnadnVr1+/0DGhTO6///4ovW7t
2rU3b94cOiwAAAAAJHHWWWclLbvOPffc0DGhTPLz85s1axal2p0yZUrosAAA
AACQRLdu3ZI2XQMGDAgdE8rqnnvuidLr9unTJ3RSAAAAAEjikEMOSdp0XXvt
taFjQlnl5eXVr18/6dXeqFGjeDweOiwAAAAAJLLLLrskbbruvffe0DEhBc47
77wob9l97733QicFAAAAgB+1ZcuWrKyspDWXO45SMTz//PNRel0/yAAAAACg
PHvrrbei1FxFDwudFFJg27ZtderUSXrB9+/fP3RSAAAAAPhRv/vd76L0usuX
Lw+dFFKja9euSS/4tm3bho4JAAAAAD+qX79+STuuXXfdNXRMSJkRI0Ykvebr
1q0bOiYAAAAA/Kh99903acfVrVu30DEhZSZPnpz0mi+ybt260EkBAAAA4Acs
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
P4qKinJ0dDRZv6pVq5bspICuTp48afK8EO7evavF1hMTEx88eCA6JEePHhUX
E9EvFdcT0V0RD7n0DLXw9OnTe/funT9/PjAwUDT4/v37xX8WP25MTIzsaPZJ
HMnieBZn2e7du0WDi+P86tWr4eHhCQkJsqPZIdGqYWFhV65cOXLkiGjtPXv2
nDp1Kjg4WHQAZEdDekK1BICNu3///ovrQ9WqVbW+Pohn/FatWhm/TDVt2pTS
onWJp6SzZ88uW7Zs2LBhH330Ud68eY3/BNmyZatbt+7AgQMXLlx4/PhxSmFq
ie7i33//PXv2bHHPFadV1qxZjbS2g4ODr6/vJ5988u23365du/b69evcptUS
XfT169ePGzdOXF6KFy9uMBiMNHiWLFkqV67cvXv3mTNnih5+ZGSk7PjpTHx8
vHgg/e233wYNGlS/fv0cOXIYv57kzp37ww8/HDp06OLFi0+fPm1Tj67vvfee
8fBpzp07JzspoJ/Q0FAl58XRo0ct31ZsbOyxY8cWLFjQv3//OnXq+Pj4GN/o
W2+91ahRo+HDh69YseLChQt0F9USP+6OHTsmT5782WeflStXLnPmzEZa28nJ
qUyZMh06dJg0adK2bduYlEYtcXxeunRp5cqVI0aMaNKkSYECBYwf3l5eXrVq
1erTp8/8+fOPHDlCaV2tJ0+eHDx4cN68eb17965Ro4aHh4fxBi9cuHCzZs2+
+eab1atXX7lyxZbfREMiqiUAbN/PP//84hKxfv16TbclLoP9+vUzfpkST9mi
k69pjIxDdG8WL17s5+fn6upqvNmNc3R0rFmz5syZM8PDw2Xvk027du2av79/
qVKlLGntTM/r6p06ddq4cSNfuRoh+jOiiURDmawrmiR+MvHDXb58WfY+2bQH
Dx6IJ01xPTG+LK9J4nIk/oi4NEVHR8vep3+PGjVKSeb+/fvLTgroRzxUKhnK
/ueff5q9idDQUNGpEF0LJRsyIkuWLGnXEypgxgUGBg4YMODldX/MU6hQIfF3
xF/jBbQRT58+Tet+G3+tb5LBYEjrfoeEhMjeJ5t27969tOuJ8df6Jnl7e6d1
v23qBTSko1oCwPY1btw47RJRokSJlJQUTbf1/fffG79MlSxZMiIiQtMMGYG4
I+zYseOzzz7z8vKypHvzOldX1xYtWqxevZo32i978uTJnDlzatWqZWF/8nX5
8+cfOHDg2bNnZe+ibbl06dKQIUPE06V1W9vBwaF69erTp0/n67yXifvCX3/9
1apVKwufT1/n7u7erl27TZs2SawPXL58WUlUcem7c+eOrJCA/vLkyWPyvBgx
YoTaP5uYmLhixYqmTZta+HrodT4+Pl27dt29e7cWrZF+hYSEjB8/vly5ctZt
7UzP34eOGTOGC+MrAgMDP//88+zZs1u3tTNnztywYcPff/89Pj5e9i7akLi4
uF9//fXDDz90cnKyboPnypWrV69eR44ckb2LsAlUSwDYuJiYmBdd64kTJ2q6
rcWLFxu/TImHiJs3b2qawe6JHs7MmTN9fX0t79IYlzt3bn9/f+aGvXv37oAB
A9zd3bVu8Jo1a27cuJHhMaIRRFNo3driqtipU6egoCDZuytZbGysuJ5YvX7+
uiJFiogNyZrvxeSyFGn69OkjJR4gRY0aNUyeFA0bNlT+Bx89eiS6Dbly5bL4
gmFCmTJlRIeTD1QvXLjQunVrq79ufoX4+35+fseOHZO9u5KJ400cdeXLl9e0
tYUcOXKI84j5o0JCQkT329PTU+sGr1ChgvhlGc2SkVEtAWD71q5d++JCoelV
Yvv27cbfpXp4eJw+fVq7AHYvPj5+3rx5OlR0XyZuLpMmTbKFj6n1d+vWrX79
+ll9BKNxNWvWlDu4USJxDfnggw/0bG3Ri+vVq9f169dl77oEohM7derUt956
S88GL1So0I8//qh/dVdcxJTEE7cwblLIOEx+ByrkzJlTyZ+KjIwcO3as5RPm
qPL2228vWrQoY85ldOrUqTZt2lg4wYUqBoOhZcuWGbO6m5SUtGTJEoXvB63F
x8dn9OjRDx8+lL33EoSGhg4bNkyHiu7LKlSosGrVKq0HasI2US0BYPu6du2a
dqHQdL3v48ePu7m5GblMZc6cWYeVJe3Y4sWLda7AvEx0L2fOnJlx3mU/efJk
wIABVv/mS7lKlSplqE/Dzp8/Ly5Qslpb/NDi5844Q9NTU1Pnz5+fLVs2WQ2e
N29ecUHT8+VFZGSkwhc0VatWzTgXOmRwv/32m5KT4urVq0b+iDhfRPfA6lNC
Kefr67t582bdGk26O3fu+Pn5yWptQWw9Q40l2759e7FixWS1trhz+fv7Z5yZ
YOPj48X+ZsmSRVaDlyxZMiAgQHYzQG9USwDYvhfDO8WDvEabuH79usnP7las
WKHR1u3ew4cP27Zta43eiqVq165948YN2e2hub///ltiH/4FcXMfOXKk3Xfm
k5KSJk6caOGqf1ZRoEAB8fgmuz00d/fu3Y8//lh2Y/+Hn5+fnsvE9O3bV2Gw
oUOH6pYKkOj8+fNKzogffvjhn/7C1atXlUzmoIOOHTs+evRIz9aTYtmyZVaf
1tUMnp6e2j1T2I4nT5706NHDwcFBdntnqlixojhbZbeH5k6ePKnFNNFqGQwG
0WFgyaoMhWoJABuXmJiYNu+Wm5ubRjM1hYeHmyyCTZs2TYtNZwSbNm1SsrKJ
bjw8PH755RfZraKV+Pj4IUOGaD1VnSrvvvvuhQsXZDeMVq5evVqtWjXZbfx/
xONbnz59ZM0Bq4OlS5d6e3vLbub/kz179jVr1uiz7+JgUzgCX1wBMtTwP2RY
SUlJSsbF1a5d+/X/bWpq6uzZs3Wep8i4/Pnz2/FAu4cPH3766aey2/h/NGnS
JCwsTHbDaGXfvn2FCxeW3cb/x9XVderUqfY6SVdycvK4ceMyZ84su5n/T4kS
JY4ePSq7YaAHqiUA0oVvv/32vffeW716tRZ//OnTp1WqVDF+mRo8eLAWm7Z7
CQkJPXv2tFoHxaqaNWtmfx+tBwUF6bAchhlcXFzscmDMwoULbWGY7utEZ97+
auniWt2+fXvZTftmnTp10qeW3r17d4WRPDw8zp49q0MkQC4lU5o7Ojq+sjC3
ePJ9sXS4TXFwcBgwYID9zbi7e/funDlzym7dN8iRI8fOnTtlN4+VJScnDx8+
3BaG6b5OnLD2V0u/f/++DqvlmkFc+vz9/e21lo6XUS0BkJGJnnOjRo2MX6ba
tWvHFPRmiIqKqlu3rvX6JtZXrly527dvy24nq9m3b5/OC76oJZ5V7WbaT9FJ
ttmHpjTe3t72NCdDSEhIpUqVZDeqMeKZ7sGDB1q3g7hkvVjv2KT8+fNfu3ZN
60iAXNOmTVNyOsyZM+fF/yQoKKhkyZIWnO6aa9y4cUxMjMRWta5FixYpv3Dp
L3PmzHPnzpXdSFYTGxvbsmVL2Y1qjK+v78WLF2W3k9WcPHlS3G1lN6oxn332
md1PiQbtUC0BYONSU1P/9a9/Gb9M1atXLz4+XnbS9Ofu3btvv/229bokWsmd
O7foj8luLStYtWqVs7Oz7OY0zc/Pzw7m+xI9HNGBkd2Wpjk6OtrHMOkrV64U
LFhQdnOaVrhwYePLM1nFN998ozxSnjx5MsKUhsjIgoKClJwLpUuXThu0dvjw
YR8fH3PPcv2IwKIrJbt1rWD48OGy21KRAQMG2EFd4uHDh5UrV5bdlqa5u7vb
xzDpHTt2GF9Gyka89957r3yzAChBtQSA7TP5dFy+fHn7+1RfB/fv3y9evLj1
OiPaEs93J06ckN1mFlm1apVNzehlXIMGDeLi4mS3mfmSkpJat24tuxWVcnBw
mDdvnuw2s8iVK1fy5csnuyGVeuutt7QeIpuQkKDqrZmrq+vvv/+uaSRArrJl
yyo5FwICAo4dO5YuirppSpQooefKjFrw9/eX3Yoq9O3bN11/sf7o0aOKFSvK
bkWl3Nzcdu/eLbvNLLJz504l83vbiCpVqvBUC7WolgCwcXPnzjV+mSpUqND9
+/dlx0x/wsPD33nnHQv7Hh4eHvXq1fvqq69Wrlx56dKle/fuRUdHp/39mJgY
8Zhz9erVv/76a9SoUY0aNbJ88gHxF9LvF2EbNmywvKgrjvZWrVpNmjRJPPbe
uHHjwYMHaaVX8YAjHhNu3bp1+vTphQsX9unTp2rVqpYPDPbz80unkwempKR0
7NjRwt13cnKqXLlyr169FixYcPLkyZs3b4pGThsmFB8f//DhQ/ETiIedyZMn
t23btmjRohZuzmAwLF68WHbLmSk4ONjyzxt9fHw+/vjjkSNHrl279sqVK+LC
/uTJk7S/L/6D+D/F/3PNmjXDhw9v0KCBl5eXhZsrWLCg1hO8bN++XdUcIOIf
f/nll3YwVB54oxEjRig5ET788MNs2bKZe2b/V65cuZo0aTJmzJiNGzdeu3Yt
NDT06dOnaTHEs+3du3dFd2LFihVDhgypU6eOu7u7hZsrU6ZM+h1l9/3331u4
++LaVapUqc6dO8+aNevAgQPi5hgZGZnWf0hKShK3TvH/OXz48OzZs7t27Vq2
bFnLJ0cSPU/ZzWYmcTuzfBXXrFmz1qpVa9CgQcuWLTt//vydO3eioqLS/r64
g4SFhQUFBW3evPnbb79t2rSp5WsiixNE/Hxy281sf//9t+WrLubLl69Fixbj
x4/funXr9evXxTPUi7n6RcuL9j937pzowg0YMKBmzZqW15DFH3lxvQJMoloC
wMatW7cubdXIfyJ6/pcvX5YdM/0Rvcp3333X7P5Gzpw5P//8c9G3UfU1R3Jy
8r59+wYOHGjJl9qiZ5Ue59rds2ePJXPWVahQYdy4cWo/0xZdzaVLl7Zs2dKS
HmaHDh3S46iYL774wuxddnV1bdas2W+//ab2IV1ciyZOnGjJ7LJOTk4bN27U
qE20Ix4hLSlr58+fv1+/frt37xaP/8o3mpiYuGPHjl69elnyxFqiRAmtSzHi
uduMVPY05TLwwpkzZ8w+WxUS16IhQ4YcOHBA1af6cXFxGzZs6Nq1qyX15CpV
qqTHlzImCwJGODo61qlTZ9asWWo7Zvfu3ZszZ069evXEXzB765MmTdKoTbST
kJAgWszsXfbx8enUqZN4OFJ1pIle3JEjR4YNG1asWDFLNp0eR1acOnXK09PT
7L1+5513Ro4cqfZrwZiYmNWrV7dr187Dw8PsTX/88ceqOkXIsKiWALBxgYGB
xpewF//toUOHZMdMf8TDTrNmzczrZpQtW3b58uUWLqolephbtmypVauWeRkq
VKiQvt5iBwUFZc+e3Yw9Fc87olt49uxZCwNER0f/8MMPZpe/xo0bZ5V20I14
xjRvT3PmzDlhwoQXg17MduHChc6dO5s3PFs8BZw7d84q7aCP+Pj4GjVqmNfg
77333oYNGyx8cSAuaOIByuxvWuvWravpoHTxx8VumhHso48+Ek/i2gUDpDD7
cmFSvXr1du3aZWE8ccL+9ttvZq870KZNm/T1JjQgIMDJycmMPc2aNevAgQPv
3LljYYD79+8PGTLEvPKXwWD466+/rNIOujE5AeY/KVas2C+//GL5olr79u1r
2LCheRl8fX3T16D00NDQAgUKmLGnDg4O4kHJ8iHKz549mzNnTuHChc1r8P79
+1ulHWDHqJYAsHEXL140PrWa6M6tX79edsx06euvvzajd1GxYsWNGzda94FF
3Iw+/PBDM8K0bt06vTw6PXnyxIz5LhwdHbt16xYUFGTFJHFxcT///LMZH8uL
/m06enTauXOnGU+puXPnnjlzpnWHWt26datPnz5mhClSpEg6enTq2rWr2h0U
ateubfX5+rZv3169enUzwvTt29e6SV5x584ds2ceFg21atWq9DgIEHijZcuW
mXcuGNG4cWPrvgRJSUlZu3ZtuXLlzAgzfvx4KybRlOhjmDGJsZub28iRIx88
eGDFJJGRkWPHjjWjuuvu7p6OVpycPn262h3M9HzI6B9//GHhgIpXnDp1qmXL
lmaEqVevnnWTaCchIcGMl6qix9u2bVvrvl5PTExcsmSJeYOlf/nlFysmgZ2h
WgLAxt27d8/kC9aff/5Zdsx0adu2bWqnNRO3jEWLFmm3+rC447z11luqIglz
5szRKI91ffbZZ2p3rXr16paP0f0nT58+HT58uNovH8UxcOvWLY0iWVFYWFju
3LlV7Zro8wwZMuTFvNBWJzpd77//vqpIQvPmzdPFm4vFixer3bW8efP++eef
GuURjSaenswYHr9mzRqNIqU5c+aMJZ+Curu7t2vXTlyHLR8dB8gVHx+fM2dO
s8+FVxQtWnTHjh0aRU1OThY9DbVT74rb6759+zSKZEUJCQlmzBrUunXru3fv
ahQpJCREXOjURipVqlS6ePN19OhRtV/xuLm5zZo1S7svSnbv3m1GsXHMmDEa
5bGuwYMHq921smXLajeyUVz6Jk6cqHZOtixZsqSvb7igG6olAGxcVFSUyRWT
00unwtaYUfWqUaOGDvPZRkRENG/eXFUwV1dX7Yqf1rJkyRJVO2UwGL755hsd
JtTav3+/2m/TatasaeMzfaWmpn788ceqdipPnjw6rPKcnJw8btw4tbX02bNn
ax3MQteuXVNb8WjUqJF1R3m9kejrfvDBB6qCeXt737x5U9NUAQEBxr+VU0g8
5Xl6eubKlat27dpqJ/0DbIF5Hw29rn379tq9kntBXOjU1j/z589v+99cDBky
RNVOZc2adeHChToEW7p0qdo7S48ePXQIZglxoPr6+qraqXLlyukwJWZMTEyX
Ll1UBUsXby62bt2qdhBLnz590lYi1tSpU6dKliypKlh6eXMhLpXTp08fPnz4
yJEj16xZo0NjZmRUSwDYOHEXMLmgQPfu3dPFSDYb1Lp1a1V9CdHJsXwuL4XE
bzphwgTjE7+/omLFirb8OVhoaKi3t7fy3fHy8tJzzazw8HC1i3dMmTJFt3hm
WLBggardqV69up6Lw+7YsUPVijziITo4OFi3eGqJE7Z27drKd0c8YY0ePVq7
Yf+vSEpKUjtW56OPPtI61c6dOy1flfsVomOvdWzAusSF18ITwcnJacaMGboF
Fl1TtbWvzp076xbPDIcOHVLV3SpSpMjp06d1i3fhwoXixYuranBxddUtnhn6
9u2ranfat2+vZylv7ty5zs7OyuMVLVr02bNnusVT68mTJ6o+A8ySJcuSJUt0
i/f48eOmTZuqOh6++uor3eKZQTR4t27dXrmk5MuXjxkANEK1BICNE4/8bdq0
MX6Z8vPzs/FBgzZr27ZtyrsQDg4O06ZN0z/kn3/+qWpI26xZs/QPqVDHjh2V
74jo/+g//DghIUE8eyoP6e7ubrOfgT98+FDV1/ctW7bUfyzBlStXxNOQ8pDi
cqdzQuV+//135TuSOXNmPR+aXliwYIGq+Y1XrVqldaR9+/ZZskD2GxUoUEDr
2IB1ffPNN2Yf8KKToOc70BcmTpyofASg+Jc2O6ZR9KLfffdd5Q1esWLFsLAw
nUNGRESomsKoePHi8fHxOodU6Pjx46o+2BkxYoT+BZldu3Z5eXkpDylOYZ0T
Kjdo0CDlO+Lj43PgwAGdE4oH3i+//FJ5SNGJstl5pMWjxD+95TcYDDp0qzIa
qiUAbJzowwwcOND4ZapatWpPnz6VnTRdSkxMVD6JlngeWbBggayoe/fuzZIl
i8Konp6eeg65VE70kJU/AL711ls3btyQklOcd/369VOYM9PzcqiUnCapWr2r
ffv2skZ6h4aGqvoEb926dVJyGieeuJXPkOnk5CRx3b21a9cqL+3my5fv8ePH
Wkc6c+ZMoUKFlB8DSvTq1Uvr2IAVRUdHWzLLrjiDZs6cGRMTo3Psn3/+Wfmd
vVSpUrp98aSKqtW7qlatqsNkF28UFxenamndb7/9VkpO40RnQ9U8HhMnTpQV
9dSpU8q/MnN2dr506ZKsqEacPn1a+U0/W7Zs4o4sK+rYsWOVHxi1atWyzeGX
I0aMMBLbw8Pj3r17sjPaD6olAGzf5MmTjV+mihcv/vDhQ9kx06uVK1cq7zxI
Gan7sq1btyrvlbVo0UJu2tfFxsYqn0gte/bscvvGopOgatTu2rVrJaZ9o507
dyp/1vbz89NuFRIl7t69q3xyY30qjWopP2DE77J06VK5aZcsWaL88Ojdu7cO
kcLCwmrUqKEwkhIGg4H7I9KX2bNnW3jYZ8uWbfTo0TpfIadMmaI8ob+/v57Z
lAgODnZzc1OYv3Tp0pGRkRLTit5U9erVFaZ1cXG5ePGixLRvpOqAGT58uNy0
hw8fVj6y4v3339dtbiWFkpKSlFfRxYlw5MgRuYFVTXM9b948uWlfd/LkSZPP
a9KPantCtQSAjVu2bJnxy1Tu3LlteapJ29ezZ0+F3QYbGfc1Y8YMhYGF5cuX
y877P/r3768weebMmffu3Ss7739W6VX+6JQ3b14dlr5SLioqSvnox3Llyuk/
xOt1J06cUP7o1LVrV9l5/8fGjRsVJs9kM2UN5es0OTg4BAQE6BApISFh5MiR
qqaJMO6TTz7RITZgLYmJiWrnUH2j7NmzT58+Xc9v8JV/HuLs7KzntLQmpaSk
KF9TMmfOnLbQ8Q4NDc2fP7/CzNWqVZP73vYVly5dUj6V9KeffmoLAzJFj1ph
YEHPaa6VGD9+vMLk4l5vC6MUxCnZpEkThZk9PT1t4ZR8IS4uTnSqTcauUqWK
7KR2gmoJABu3c+dO48+27u7up06dkh0zfWvWrJmSPoNNdYnbt2+vJHOm5yuO
2c6NbPPmzcoHB9pOl/j+/fu5cuVSGNvPz88Wnj7StG3bVvlxImu+i9f99ttv
CmMLK1eulJ33v8RxkiNHDoWxxdOKjRwn4tGpQYMGCmPny5dPtzcXR48eLVWq
lPIjwTjpQ6MBVQIDA1XNO2pE0aJFxV/TJ3ZcXFzFihUVBnv77bdt55PYiRMn
KoxtMBh27dolO+9/HT58OHPmzAqTjxw5Unbe/4qPjy9fvnx6PE5Mfuj9gouL
i+28uTh06JDyV6UjRoyQnfe/oqKilK+8UL16dduZN3XAgAFKMrMEgFVQLQFg
48QlSFyIjFymRF9On9FT9k3J8BJPT0/bqXr9+/n6qsoH84jOsy2Mw7x69aqP
j4/CzI0aNbKRqleaHTt2KK9Ijx07Vnbe/5g2bZrCwJlsb1x3p06dFCb38PA4
d+6c7Lz/qWa89957CjPb2rjusLCwPHnyKAxft25d3d5wiQ399NNPuXPnVpjN
CG9vb76/Q/oyfPhwy4/8NI6Ojl9//bU+U9oGBQUpXwCxdevWtnCv37Ztm/Iq
uq19Oq18NgODwSBxRveXKZ+wyNnZ2aYKMuIkqly5ssLwRYsWtYX7zv379996
6y2FmW1qEItw7Ngx5W8u+vXrJzvvfyxdulThI4N4QJMdNt2jWgLAxgUHB5t8
mF22bJnsmPZAyeL1P/74o+yYr9q1a5eSPkOaZs2ayX2LLXq2ypfEEo+Ed+/e
lZj2jZR/Xiq6c3/88YfctBs2bFD+lNq0aVO5aV8XGRmpfOWgwoULy10iMCUl
RfkQemH16tUS076Rqs9Lu3fvrmcpJiYmZty4ccrHQv+TQYMG6ZYZsFxCQoLy
SWmUqFq1qj7L9Kh6qyh9EOm5c+e8vLwUpi1RooSe81oooWr1MXd39+PHj8sN
rHxotDB69Gi5aV+navWxWrVqPXv2TGJacQNVXojOnDnzhQsXJKZ9o2HDhik/
YKQ/rwUGBrq6uipM++WXX8pNm95RLQFg4x48eGByNOaUKVNkx7QToseVN29e
I00tHoVEt1l2zDdQVUrq3LmzrEUcoqOjVS15PH36dCk5jQsPD1c+3lj0jbds
2SIr6p49e5T3Kt3c3G7duiUrqhGLFi1SfsyULl06IiJCSs7U1NQ+ffooj9qo
USMpOU2qV6+e8r0YOnSozvGePn06a9Ys5fNFv87FxeXmzZs6xwYs8csvv5h9
wL9Rnjx5Dh48qHXspKSksmXLKk81depUrSP9k6CgIOM9wJc5ODjYzgwMLzt6
9KjBYFC4Fzly5JC4htq8efOUf/1UrFixuLg4WVGNUD4bQyapK9KK1lN1Z//6
66+l5DQuJiZG+Yq64kRYsmSJrKinTp1S/pLIycnp6tWrsqLaAaolAGyceHqt
WrWq8cvUl19+aQtfrtmNgIAA8cj/xqYWHWCbve2GhoYqrzQKnTp10n/UbkhI
SIUKFZSHrFSpkm1W0YUFCxYo3xFxREn54HH9+vXK1yLJJPWB2jhxiatTp47y
HSlbtqw42HQOKU6obt26KQ/p5uZms6VFcaFT/jog0/Phr/rfhkRI5d+Tvk5c
A3UODFhI1Q1UCWdn5z///FPr2IcOHVJeaXRwcJg0aZLWkV53+vRp5UVdoUuX
LvqHVKhfv37KdyRXrlxSpn6dPHmy8qKubit1muHJkyfKV6zL9Ly0q/+o3aio
KFWdKF9fX7lDi40QPVvlO+Lo6Lhw4UL9Q+7bt8/b21t5zmHDhukf0m5QLQFg
45KSkkyu/tmmTRtZAy/tmLgdFylS5JWmrlKlyuXLl2VHM2b+/PnKuxDCxx9/
rOdkXydPnlQ1vs7JyUn8T3SLp5boHtSqVUvV7kyfPl3PTsXUqVNVLbVTqVIl
21lm4nXi7PunFy5vJE5hPY+fiIiIDz/8UHm8TDZcRU8zduxYVbvTrl07Pefu
3rt3r/LZOd7IYDCcOXNGt8CAVdStW9eSw/514t6kw6epqj5kEMS/13OKg7/+
+kv5PMCCuPjYwlyp/yQ6OlrVOy8vL68NGzboFi8hIaFnz56qjofOnTvrFs8M
4vhRtTs1atTQc4axq1evvvPOO6oS7ty5U7d4Zvjkk0+U74uDg8Po0aP1HCWy
aNEiVf3VokWLxsbG6hbPzlAtAWDjUlNTu3fvbvwy9cEHH9ja1F52Q3Q7V61a
1a9fP3EvGDJkyI4dO2z/NZ9I+NFHHynvSGR6vvqqPktjL1y4UO3cgKNGjdIh
mCWuXbtmfH7+17Vs2TIyMlLrYOKZrm3btqqCubq62sKKY8ZNnjxZ7U799NNP
OgQ7duzY62+CjKtZs6YtV9H//fwaqGrKlEzPVyo/e/as1sHEhW7KlCnKpzQ0
QpwmWqcFrO7y5cvVq1f38vJycXGxyomgw9fK4q7k6+urKlXlypWvX7+uaap/
P68JjBgxQvnA0TQ6DHK20NatW1XtlPjHoq+rw2p6t27dEkevqtbOnz+/Dh0n
C3Xs2FHVTuXMmVP8RjoEW7t2rfLZANL06tVLh2CWCAkJyZUrl6qdqlevng6f
cT179qx3796qgjk6Ou7bt0/rYPaKagkA2zd69Gjjl6ly5co9fvxYdkzYltDQ
ULXrxYunwlGjRmn3pvj+/ftt2rRRFSlTeqh6pVGy0N4rChQooGlnfteuXUWL
FlWbas6cOdpFspaUlBS1Y2IzPV8o8M6dOxpFiouLGz9+vPIFmtP4+PjY5jzG
rzDjzYWrq+vUqVO1mz/wxo0bH3/8sapIRogfTu4qe4DlgoODFyxY0Lp1azc3
N0vOBa1H6B09elTtpdLT01PsmnbjrM6fP6+2xij07NlTozzWNXjwYLW7Vrly
Ze3mZEhNTRVdJlUfp2dKP1UvM95cODg4DBgwQLtHuYiIiB49eqiKJJQqVSpd
jB3dsmWL2tcxOXPmXLVqlXaRjhw5UqZMGbUNboOrAaYjVEsA2Liff/7Z+GWq
YMGCPI3ijXbs2KHq6/sXR9TChQutO1QjMjLS399fbV0o0/N5jNNF1StNly5d
1O5gpucLZomHXOsmOXnyZNOmTc0I8+mnn9r+cPQ0oaGh+fLlU7uDWbNmHTly
pHU/m01MTFy8eLHaYbqZnj/KrVu3zopJNLVs2TK1OyiULFly5cqV1v3sMSQk
ZPDgwaq+bVRizJgxVgwJSBQbG7tq1ar69eubdy54enpqPd5+2rRpZgSrWLHi
pk2brHuTCg4O7tmzpxmdpfLly6eLqte/n39zUa1aNbU7KNqkW7duVh8pvXXr
1ipVqqgNI4wbN866SbRz7NgxVfPSp8mVK9ePP/5o3YPqyZMnkydPzpYtm9ow
osdu+59uvfDVV1+p3UGhdu3ae/futW6SS5cudejQQW2dOdPzoaTpYhCLbaJa
AsDGbdiwwfgCEz4+PuIOYvXtRkVFibtS165dbf9zJxj366+/qu1apMmZM6e/
v/+jR48sDBAUFNSpUyfzKjBZs2Y9fvy4VdpBH4mJiWZPeCgeV1evXm3h46r4
n2/cuLFmzZrmZXjvvfdsc43pf3LmzBkzXhZker5CkDgsr1y5YmGAx48fi9NE
7TeAL/zwww9WaQfdjBkzxrw9FT3qmTNnWv64Ku534odTO9JPoTx58ujw6TGg
p5MnTzZv3tyM06Fo0aKiK6hpNrUfKb+cTVxPLL9bHTt2zM/PT/k6bi/Lnz+/
/ityWiIiIkLtINI0Dg4OopUOHz5sYYCkpKT58+eblyFTOlzdcu3ateYdWp6e
ngMGDLD86Lp37574O+b1kZycnLZv326VdtCH6P2a8T1gmnLlyi1evNjymuqu
XbvM7n6XLl06OjraKk2RAVEtAWDjDh48aPxtr/hvDxw4oMWmJ02alLYJ0XPW
4u9DT2rXpHiZl5eXuGf9+eefagsy4eHhCxYsaNiwobOzs3mbFo8SixYt0qhN
tBMaGlq4cGGzG7xEiRJff/21eNhUW+AVD++jRo0SPUOzN50vXz7t5ijQzqpV
q8x7dMr0/MmlQYMGc+fOVfsA9ezZs/Xr13fu3NmMMTAvdOzYMb0MjX4hJSWl
RYsWZu9yjhw5unXrtnnzZrXzm4kj88cff6xbt64ZY+pUWbFihUZNB0i0b9++
cuXKqT0dPvnkE02vUeI6oGrJ0VeIe9YXX3wREBCgtiBz/fr1yZMnV69e3ex7
R5YsWUQXXaNm0c6JEyfMq/Jlet4lq1Klyvfff3/16lVVG01OTt6zZ0///v0L
FChg3qaFqlWrppeh0S8TvTKzd9nNza1Vq1bLly9X++V4ZGTk4sWLxZ1a7UoW
L0t3L53//Xz6CzOmPnhBdN0HDRoUGBiodrKXCxcujB8/vmLFimZv2sfH5+LF
ixo1i92jWgLAxl2+fNl4xUB0R//66y8tNi268SVLlkzbij4z+UNTolPdvn17
s/sbaUT/sF69el999dXKlSuDgoJeGcYjekGPHj06e/bswoUL+/TpI3rglpdf
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
G+jn6dOn/v7+Vl+/WLkGDRpkhBL6C2fOnKlZs6as1hY/tPi5RX/bSMK4uDgl
C4gPGzZMt0YD5GrVqpXCU0zniZICAwNNLoujHXGhmDlzZmJiop67LFFSUpLY
X09PT1kNXqpUqX379sluBv3cv3//xZA//YmnPLH1DPWgt3v37rfffltWg3t5
ec2fPz8lJUV2M6RvVEsA2Lhdu3YZHzYpupcnT57UOkZqauq7776btsX3339f
683BRojffd26dTov7yVuhc2aNTt8+LDsvZcgKipq3LhxOXLk0LPBvb29R44c
aX/TAypx+vTpNm3a6Pydafny5ZcvX54B+/DJyclLly7VeYpjJyenDh06nDt3
TknCDz74wOQfrF+/vtYNBdiIkJAQLy8vJSda9+7ddc6WkJAwb968okWLWnqN
UMPFxaVHjx4ZczKW27dv9+vXT+ehpAULFpw5c+azZ89k770EO3bsUHJLsq4G
DRrs3r1b9q5L8PTp06lTp+bLl0/P1nZzcxs4cODdu3dl7326R7UEgI07ffq0
8Yk3xROrPtOa7dmz58VGp0+frsMWYVPE3bB169YODg5W6cn8E/G8MGDAgODg
YNm7K5l4XF28eLEOXz4WL15cbMhe5wZUTjyuigNP6xW+xOnj5+cXGBgoe3fl
E42gw5eP3t7e/v7+YWFhyoMNHjzY5J/18fGx+09TgRemTZum5HTz9PSUMqWM
OBk3btxYvXp1iy8YJmTPnl1cT+x+HgCToqOjZ86cqWSVSQtVq1ZN/LIZ8AXo
K86ePdupUyfxuKdpa2fOnLlnz54Z84XFy8TxJo66SpUqadraQv78+cV59OTJ
E9l7bA+olgCwcTdv3jS5NOqSJUv0CfPyM7gIps9GYWuOHz8uOn5ajCYtVqzY
yJEj79y5I3sXbUhiYqI4wT/66COrT3Ts6OhYv379RYsWUdF92f3790ePHq3F
t3jZsmXr1q1bxhyCbsS+ffs6d+7s7e1t9QYvU6bM+PHjw8PD1UYy+R1fmoiI
CC0aBLBBCQkJRYoUUXJe/Pnnn7JCpqambt26tU2bNm5ubpZdPN6gcuXKU6dO
ffz4say9s0HR0dEzZsyoVq2a1V/3Z8mS5dNPP920aROvz1524cKF/v37azGa
tGDBgoMHD6ai+7KUlJQ1a9Y0a9bMxcXFuq1tMBjef//9n376SeuluzIOqiUA
bJx4bDQ5Wu+HH37QJ8yVK1debLRixYr6bBS2TPQw/f39fX19LeneCDVr1pw5
cyYDdI2LjY3duHFjp06dlEz+aYTooIoux+LFi3k+NU50xsRhKQ5OC59YxSPY
gAEDAgMDGXFkhGgc0USioSwcACZ+rLTrye3bt80Oc/HiRSXbEhdAK7YAYOPE
aaXkvGjfvr3spP+Z7CXtepIrVy5LridOTk5pt0sG6BonnlZEK4m2svAFtJeX
l+jkiK4Or5uNS+t+W/4919tvvy3+Dvcy4+Li4tK63xZOLi3OjrTrSWRkpOx9
sitUSwDYuNjYWJPflIleq27vsrt06fJiuxMnTtRno7B94gHq9OnToqMyZMiQ
Bg0aKHmMKlKkSPPmzUePHr1mzZpr167J3oN05vHjx3v27BGP2N26datUqZKr
q6vx1nZxcRFdi65du06bNm3Xrl30J9UKDg5eu3atePZp2bJl0aJFTZZ5c+TI
Ub9+/UGDBi1atOjEiRMZZ1Udq0hISDh+/Pivv/4q7m4ffPBBtmzZjLe2wWAo
VqxYq1atxo4d+9dff1llaMSzZ89MXsSEnTt3Wr4tIL2IiYlRMsuut7e36BXI
Dvtf4lw+fPjwzz//3KdPn/fff99kWcbJyemdd95p27btd999t3nz5nv37sne
g3QmNDR069atkyZNat++fenSpU3OG+Dh4VGjRo3evXvPmzfvwIEDDF9UJSUl
5fz588uXLx8+fHjDhg2VjOMtUKBAkyZNvv7665UrV168eJHh0KqIa+D+/fvn
zJnTs2fPatWqmfwuIHPmzOXKlfvss89++OGH7du3m/H1EEyiWgLAxiUlJTVr
1sz4Zap169a6DQALDAx8edOXLl3SZ7tIj6Kjo2/fvn3mzJl9+/atX79+9erV
4vlI9NgvXLggnpKML0YPtcS14uHDh0FBQcePHw8ICFj93M6dO48dO3bt2jXx
X4l/IDujXREH8P3798UD0cGDB8WBLVr7r7/+2rt3rzjgb926xShoq4uKirp5
8+bp06dFI69bt040+JYtW0Tji9tQSEiIRivpKBmWo9s3fYCN6NGjh8nzQhA3
I9lJ/9GjR49u3Lhx8uTJ3bt3r127VlxPtm3bdvjw4cuXL4eFhTFM1LpEe4pW
vXLlypEjR7Zv3y5a+88//9y1a5dof/EriN+CuqJ1PXny5M6dO+fOndu/f/+G
DRtEg2/cuFH85/Pnz9+9ezcmJkZ2QLsinsEjIyPFkXzixAnR/V6zZo1ocHGc
Hz169OrVq+Hh4QkJCbIz2jmqJQBsnOjnmOw816lTR7fFKRITE19eu/ydd97R
Z7sAAOhPyfetun3WB9iIgIAAk+cFpwYAQGtUSwDYvm+//db4ZUpcN6KionTL
M2XKlJe3/s033+i2aQAAdCaeBUwWr0aNGiU7JqCrpKQkHx8fk6dGq1atZCcF
ANgzqiUAbNwvv/xi/DJVoECBu3fv6pbn1q1br8wgdPLkSd22DgCAzho0aGCy
eEVdFxnQp59+avLU8PX1lR0TAGC3qJYAsHEbN240GAxGLlPe3t4XL17ULc+z
Z88qV678coDChQszHRYAwI5R1wXeaObMmSZPDdGPZSZPAIAWqJYAsHGHDx/O
kiWLkcuUi4tLYGCgbnlSUlI6duz4SobBgwfrFgAAAP1R1wXe6JV1Yf7JuXPn
ZCcFANgbqiUAbNyVK1eyZ89u5DLl4OCwbt063fKIy1TPnj1fj3HgwAHdMgAA
oL+6deuarFxR10UG9PjxY5OnhrB9+3bZSQEAdoVqCQAbFxISUrhwYeOd5Llz
5+qWJz4+vkuXLq9nyJ07d3Jysm4xAADQ38uLGv+T7777TnZMQAJvb2+TZ8fC
hQtlxwQA2A+qJQBsXHR09Lvvvmv8MqXnoor37t1777333hijd+/eusUAAECK
HDlymKxcLVq0SHZMQIJSpUqZPDumTJkiOyYAwE5QLQFg4xISEurXr2/8MtW1
a1d9Jt9OSUmZP3++l5fXPyXZuXOnDjEAAJAlPj7ewcHBZOVq27ZtspMCElSv
Xt3k2TFu3DjZMQEA9oBqCQAb98aptl/RqFGjxMRErZOIK+GmTZuqVKliJImP
j48OSQAAkCg4ONj4fTnN6dOnZScFJKhXr57Js2PkyJGyYwIA0j2qJQBs39Ch
Q41fpsSlIyYmRtMMYWFhs2bNKlu2rMleepcuXTRNAgCAdOvWrTN5QxRCQ0Nl
JwUkULKq4IgRI2THBACke1RLANi4GTNmGL8yFCtWLDw8XItNx8XFHThwYPz4
8aJz7ujoaPIalWbDhg1ahAEAwHaMGjXK5A0xa9asrIuBjKlatWomT5AJEybI
jgkASN+olgCwcStXrjR+WXBxcVm/fv15c507d+7IkSM7duxYvXr1r7/+Om3a
tDFjxgwcOLBFixbFixc3GAwKr04vuLm5PXv2THazAQCgrcaNG5u8J1avXl12
TECOkiVLmjxBpk+fLjsmACAdo1oCwMYdOnTI2dlZ7bVCrtatW8tuNgAAtJWc
nJwjRw6T98R+/frJTgrIkTVrVpMnyKJFi2THBACkV1RLANi+vn37yr7wqLZy
5UrZzQYAgLYOHjyo5J5I2QoZU1hYmJITJCAgQHZSAEB6RbUEgO2rWLGi7AuP
Ou7u7rGxsbKbDQAAbX311VdKbovnzp2TnRSQYNu2bUpOkGvXrslOCgBIr6iW
ALB9ffv2zZ07t6urq+wrkGnOzs5FihT5448/ZLcZAACaK126tMk7o7e3d1JS
kuykgATfffedyRPEyckpLi5OdlIAQHpFtQQAAACAWmfPnlXSh2/btq3spIAc
DRo0MHmClC1bVnZMAAAAAAAAZCB9+vRRUtddtmyZ7KSABE+fPnVxcTF5gnTt
2lV2UgAAAAAAAGQUMTExnp6eJmtWjo6OERERssMCEixbtkzJi4+5c+fKTgoA
AAAAAICM4ueff1ZSs6pVq5bspIAcH374oZJzJCgoSHZSAAAAAAAAZAgJCQmF
CxdWUrOaM2eO7LCABBcvXnRwcDB5ghQtWlR2UgAAAAAAAGQUc+bMUVLUdXNz
e/z4seywgARdunRRco707dtXdlIAAAAAAABkCE+ePMmZM6eSmlXPnj1lhwUk
OHnypMFgUHKOHDlyRHZYAAAAAAAAZAj+/v5KClbC0aNHZYcFJGjYsKGSE6RY
sWKpqamywwIAAAAAAMD+nT171tnZWUnNqkKFCrLDAhL8/vvvCl98TJgwQXZY
AAAAAAAA2L+kpKSKFSsqrFmtWbNGdl5Ab8HBwV5eXkpOkKxZsz58+FB2XgAA
AAAAANi/sWPHKizqVqlShQ/MkdHExMSUK1dO4TnSr18/2XkBAAAAAABg/zZv
3qxwKSghICBAdl5AV0lJSX5+fgpPEBcXl+DgYNmRAQAAAAAAYOfOnTvn7u6u
sGbVsGFD2XkBXSUlJbVo0ULhCSKMHDlSdmQAAAAAAADYucjIyBIlSigsWDk6
Op44cUJ2ZEA/cXFxbdu2VV7UzZUr1+PHj2WnBgAAAAAAgD179OiR8rXShKFD
h8qODOgnJCSkevXqyk8Q4bfffpOdGgAAAAAAAPbs4cOHyteBEkqXLh0fHy87
NaCTP/74w8vLS1VRt02bNrJTAwAAAAAAwJ5FRERUqVJFecHKYDD8/fffslMD
erh3717nzp0dHBxUFXVz5swZFhYmOzsAAAAAAADs1vnz54sWLaqqZtW3b1/Z
qQHNRUZGjh492s3NTdXZITg5Oe3cuVN2fAAAAAAAANitDRs2eHh4qKpZVa1a
NS4uTnZwQEMRERHffPONp6en2opumpkzZ8reAwAAAAAAANinlJSUcePGGQwG
VQWrfPny3b9/X3Z2QCsREREjR45U+7LjZb169ZK9EwAAAAAAALBPkZGRjRs3
VluwcnV1PXLkiOzsgCYiIiJGjBhhSUVX6Ny5c0pKiuxdAQAAAAAAgB26fPly
kSJFzKhZLVmyRHZ2QBNLly7NkSOHJRVdoUOHDsnJybJ3BQAAAAAAAHbo2LFj
Pj4+agtWBoPhl19+kZ0dsL7Lly+///77FlZ0BX9//9TUVNl7AwAAAAAAADt0
+vRp8wYlTps2TXZ2wMpSU1Nnz57t7u5uYUXX0dFxzpw5svcGAAAAAAAA9una
tWu5cuUyo2w1ZcoU2dkBK4uJiWndurWFFV0hT548AQEBsvcGAAAAAAAA9ikk
JMSMOXUdHBymTp0qOztgZVevXi1VqpTlRd1GjRqFh4fL3hsAAAAAAADYp7i4
uEqVKqmtWbm5ua1Zs0Z2dsDKNmzY4OXlZWFF18fHZ+7cuUyoCwAAAAAAAO10
795dbdmqZMmSV69elR0csLKffvrJwcHBkoquo6PjgAEDoqKiZO8KAAAAAAAA
7NmqVavUVq5q1qwZFhYmOzhgZb///rujo6MlRd0mTZocP35c9n4AAAAAAADA
zj18+DB79uyqKle9e/dOSEiQHRywsoULFxoMBrMrun5+fseOHZO9EwAAAAAA
AMgQunXrprxy5ezs/Ntvv8mODFjf0qVLzS7qNm7cmIouAAAAAAAAdHPgwAHl
U4lmyZJl69atsiMD1idOBBcXFzMquh988MHhw4dlxwcAAAAAAEDGUrt2bYX1
K1dX1927d8vOC1jfzZs3c+bMqbaimy1btkWLFqWmpsqODwAAAAAAgIwlICBA
YQnL0dFx3bp1svMC1hcdHV2mTBm1Rd02bdqEh4fLzg4AAAAAAICMSPlg3fHj
x8sOC2iiTZs2qiq6zs7Os2fPlp0aAAAAAAAAGdS5c+cUFrJq166dnJwsOy9g
fStWrFBV1M2XL9/BgwdlpwYAAAAAAEDG1bdvXyWFLFdX16CgINlhAeu7f/9+
tmzZlBd1ixUrdufOHdmpAQAAAAAAkHHFx8d7eXkpqWUxAwPsVZMmTZQXdYsX
L3737l3ZkQEAAAAAAJChbdmyRUktK2/evLGxsbLDAtanagaGYsWK3bt3T3Zk
AAAAAAAAZHQ9evRQUs6aNWuW7KSA9cXHxxcpUkRhUTdbtmxXr16VHRkAAAAA
AAD491tvvWWynOXu7h4dHS07KWB9M2bMUFjUzZw58+7du2XnBQAAAAAAAP59
8+ZNJRWtf/3rX7KTAtb3+PHjHDlyKKzrzp07V3ZeAAAAAAAA4D8Uziy6efNm
2UkB6xs1apTCom6TJk1khwUAAAAAAAD+a/DgwSYrWlmyZImLi5OdFLCyZ8+e
Zc+eXUlRV/yzkJAQ2XkBAAAAAACA/2ratKnJolbt2rVlxwSsb+HChUqKusLy
5ctlhwUAAAAAAAD+zzvvvGOyqDV06FDZMQHrq1ChgpKibo0aNVJTU2WHBQAA
AAAAAP5P1qxZTda1FixYIDsmYGWBgYFKiroODg6HDh2SHRYAAAAAAAD4PwkJ
CUpKWwEBAbKTAlb2+eefKzn4W7VqJTspAAAAAAAA8D8ePHigpLR1+vRp2UkB
a0pKSlK4YhoHPwAAAAAAAGzNzZs3lZS2rl+/LjspYE0KJ2GoVq2a7KQAAAAA
AADAq+7cuaOkuhUUFCQ7KWBNX375pZIjf8WKFbKTAgAAAAAAAK8KCQlRUt26
ePGi7KSANRUrVszkYe/p6RkfHy87KQAAAAAAAPCqqKgoJXXd/fv3y04KWE1Y
WJiSw75du3aykwIAAAAAAABvkJqa6uLiYrLAtWbNGtlJAavZvHmzkrruH3/8
ITspAAAAAAAA8GYFCxY0WeCaMGGC7JiA1Xz77bcmj3lnZ+fo6GjZSQEAAAAA
AIA3q1GjhskaFx+kw540bdrU5DFfuXJl2TEBAAAAAACAf/T555+brHEVKlRI
dkzAat566y2Tx3yvXr1kxwQAAAAAAAD+0fTp003WuITg4GDZSQErSEhIMBgM
Jg/4X375RXZSAAAAAAAA4B/t3btXSV131qxZspMCVnDr1i0lB/zx48dlJwUA
AAAAAAD+0bNnz1xcXEyWuerUqSM7KWAFBw8eVFLXDQ8Pl50UAAAAAAAAMKZ2
7dpKKl0XLlyQnRSw1KpVq0we6i4uLqmpqbKTAgAAAAAAAMaMGzdOSV33yy+/
lJ0UsNTs2bNNHuqFCxeWHRMAAAAAAAAw4fLly0rqum5ubg8ePJAdFrDIzJkz
TR7qFSpUkB0TAAAAAAAAMK1s2bJKSrtDhw6VnRSwyIwZM6jrAgAAAAAAwD4o
KXYJTk5O586dkx0WMN/06dNNHucVK1aUHRMAAAAAAAAw7eHDhy4uLkpKu3Xr
1k1JSZGdFzDTtGnTTB7klSpVkh0TAAAAAAAAUKR9+/ZK6rrCtGnTZIcFzDRr
1iyTR7ivr6/smAAAAAAAAIAiFy9eNBgMSuq6Tk5Oe/fulZ0XMMfKlStNHuFZ
smSRHRMAAAAAAABQqkWLFkrqukLevHlv374tOy+g2r59+5Qc4dHR0bKTAgAA
AAAAAIqcPXvW0dFRYWm3WLFi9+/flx0ZUOfKlStKDu9Lly7JTgoAAAAAAAAo
1b9/f4V13bTS7vXr12VHBlR4/PixkmP7jz/+kJ0UAAAAAAAAUCoqKip37tzK
S7viHx86dEh2akAFLy8vkwf20KFDZccEAAAAAAAAVFi7dq3yuq7g7Ow8e/bs
1NRU2cEBRerWrWvyqP7ggw9kxwQAAAAAAADU6dSpk6rSblod7OrVq7KDA6YN
HTrU5PHs4eERHx8vOykAAAAAAACgQlRUlK+vr9rSrpOTU7du3ZhxFzZu5cqV
So7nrVu3yk4KAAAAAAAAqHPhwgUPDw+1pV3BYDA0b95869atiYmJsncCeIOg
oCAlR3LPnj1lJwUAAAAAAABU27Bhg6Ojoxml3TQ+Pj7t2rWbMWPG/v37Hzx4
IHtvgP9KTU3NlSuXyQM4T548KSkpssMCAAAAAAAAqi1evNhgMJhd2n2Zt7d3
qVKlateu3eA58R8q/a8aNWo0b968d+/e/v7+c+bM2blz56NHj2Q3AOxT9+7d
lRy0W7ZskZ0UAAAAAAAAMMevv/5qrdKuGYoWLdqmTZsffvjh+PHjqampshsD
dmLTpk1KDr+GDRvKTgoAAAAAAACYacOGDVmzZtW6hGtStmzZWrduvXjx4ujo
aNlNgvQtPj7e09NTyVF37tw52WEBAAAAAAAAM+3du9fb21vryq1CHh4eX3zx
xcWLF2W3CtKxVq1aKTnY+vbtKzspAAAAAAAAYL5r166VLVtW65qtcg4ODvXq
1Vu3bl1ycrLstkH6s3btWiWHmZubG/M8AwAAAAAAIF17+vRpp06dtC7YqlW8
ePHVq1cz+y5USU5OLlSokJID7Pvvv5cdFgAAAAAAALDUli1bihQponW1Vq2q
Vavu2bNHdtsgPZkyZYqSQytfvnyJiYmywwIAAAAAAACWio2NHTNmjLu7u9bV
WrWaNGly+/Zt2c2D9OHRo0dubm5KjqtNmzbJDgsAAAAAAABYx4MHDwYOHOjq
6qp1tVYVT0/PX3/9VXbbIH344osvlBxUn332meykAAAAAAAAgDU9ePBg/Pjx
efPm1bpgq0rjxo3v3bsnu21g6y5fvuzg4GDycPLw8Hj27JnssAAAAAAAAICV
JSQkbN68uVu3bjly5NChbKtE9uzZ9+3bJ7thYOuaNGmi5HASh7fspAAAAAAA
AIBWkpOTDx8+PG3atJYtWxYqVMhgMGhdvzXC2dn5999/l90ksGlbtmxRciwN
HjxYdlIAAAAAAABAJ/Hx8ZcuXdq0adOyZct++umnSS+ZNWvW/P9vxowZI0aM
+Ne//uXn51e+fHknJycrVne/+eab1NRU2S0BG5WYmKhkkPm7774rOykAAAAA
AABg0+Li4o4ePTpv3rzWrVu7u7tbXtrt1KlTcnKy7N2CjerRo4fJQ8hgMERH
R8tOCgAAAAAAAKQPcXFxmzZt6tq1q5ubm4Wl3ZSUFNl7A1u0Zs0aJYfQkSNH
ZCcFAAAAAAAA0pnHjx/Pnj27dOnSZpd2u3btSmkXr4uIiHBwcDB5/CxatEh2
UgAAAAAAACC9+uuvv0qWLGleabd79+7MtYvXFSlSxOTBM2zYMNkxAQAAAAAA
gHQsMTFxzpw5Spa7et2ECRNkx4fNadKkickjp3PnzrJjAgAAAAAAAOleeHj4
J598orauazAYNm7cKDs7bEvfvn1NHjmNGzeWHRMAAAAAAACwE8uWLfPx8VFV
2vX09Lx06ZLs4LAh/v7+Jg+bqlWryo4JAAAAAAAA2I+goCC1M+6WKFHiyZMn
soPDVkydOtXkMVOhQgXZMQEAAAAAAAC7EhMT06xZM1Wl3Z49e8pODVsxZcoU
kwdMpUqVZMcEAAAAAAAA7E1iYmKHDh2U13UNBkNgYKDs1LAJEydONHnAVK5c
WXZMAAAAAAAAwA6lpqb26tVLeWm3cOHCMTExslNDvoEDB5o8WurXry87JgAA
AAAAAGCfkpOT27Vrp7y0O2LECNmRIV+rVq1MHiodOnSQHRMAAAAAAACwW0lJ
SfXq1VNY13V2dg4ODpYdGZK9/fbbJg+VwYMHy44JAAAAAAAA2LOwsLD8+fMr
LO2ygFoGFxsb6+TkZPI4+fHHH2UnBQAAAAAAAOzcsWPHXFxclNR1M2fOHBQU
JDsvpNm+fbuS42Tv3r2ykwIAAAAAAAD2b8KECUrqdULHjh1lh4U0gwYNUnKQ
REREyE4KAAAAAAAA2L/ExMTy5csrKdkZDIZbt27JzgsJUlJSChQoYPIIKVas
mOykAAAAAAAAQEZx4sQJJVOnCmPGjJEdFhLs2bNHyeHRq1cv2UkBAAAAAACA
DKRXr15KCnd58uRJTEyUHRZ6a9q0qZLD488//5SdFAAAAAAAAMhAbt265ezs
rKR2t3nzZtlhoatLly45OjqaPDBcXFyioqJkhwUAAAAAAAAylr59+yqp67Zo
0UJ2UuhK/OIcGAAAAAAAAIBtunPnjpJhma6urrGxsbLDQicBAQFKirrCypUr
ZYcFAAAAAAAAMiI/Pz8lFbwtW7bITgo9xMbG+vr6KjkkcuXKFRcXJzsvAAAA
AAAAkBFt2LBBSRGvX79+spPanNu3b//999/Lli2bMmXKwIEDW7du3eB/NWrU
qEuXLsOGDZs+fbr4Z4cPH7b9Yc/dunVTcjwIY8aMkR0WAAAAAAAAyKCSkpLy
5ctnsojn6+srO6l8T548CQgImDBhQrNmzfLkyaOw/vkyR0fH0qVLd+rUacaM
GUePHk1JSZG9T/9j0aJFCnfE1dU1NDRUdl4AAAAAAAAg4+rVq5eSUl5QUJDs
pHIEBwfPmjWrQYMGzs7OZtRyjciTJ8/nn3++YcMGWxjHGxgY6OLiojD50KFD
ZecFAAAAAAAAMjSFUzGsWrVKdlJdhYSEjB8/vkyZMhYUbpXKkiVLq1atdu7c
KWsE76lTp7Jly6YwrY+PT2RkpJScAAAAAAAAANI8ffpUyUDN0aNHy06qh9TU
1F27drVq1Spz5syWFWvN4evr+8MPP4SHh+u5y0ePHs2ePbvykDNnztQzHgAA
AAAAAIA3qlOnjslqXosWLWTH1FZKSsqyZctKlChhQV3WOpydnbt163bnzh0d
9nrp0qWurq7Ks1WpUiU5OVmHYAAAAAAAAACM69+/v8mCnn0vnbZr166KFSta
UIu1PldX16+++urRo0ca7XJcXNwXX3yhKlLmzJnPnDmjUR4AAAAAAAAAqsyf
P99kTc9gMNjC8l5Wd+HChYYNG5pbfNWcj4/P5MmT4+LirLvX+/fvL126tNow
kyZNsm4MAAAAAAAAAGY7ePCgkrJecHCw7KTWlJiYOG7cOGdnZ/XVVr0VLFjw
999/t8qqauJH7NChg4ODg9oMH330kaxl3QAAAAAAAAC87sGDB0oqeydPnpSd
1GrOnj1boUIF9RVWmUqUKPHjjz8+efLEvF0+ceJE165dzatjFy1aVOfV3AAA
AAAAAAAYl5SUpGQAZ0BAgOykVpCSkjJ+/Ph0MUz3jbJmzdqqVatVq1Y9fPhQ
yf4GBQX9+OOPlswenCNHjmvXrmn9uwAAAAAAAABQy9vb22R9b9WqVbJjWiom
JqZFixZmVzhtioODQ5kyZbp27Tpjxow1a9YE/H/btm1bvHixv79/06ZN8+bN
a+FWPDw8jhw5Ivt3AwAAAAAAAPAGRYsWNVnimzdvnuyYFrl9+3b58uUtrHO+
wsXFpXDhwjVr1mzVqtWAAQOGv+Tzzz9v0qTJu+++myNHDutuVDfu7u6BgYGy
fzcAAAAAAAAAb1apUiWTVb7vvvtOdkzzHTx4MHfu3FapdpYoUaJbt27z5s07
efJkYmKikq3fu3dv8+bNEydObN68ubu7u1ViaM3Ly+vvv//W+ncBAAAAAAAA
YLZ69eqZLPR9/fXXsmOaadeuXVmyZLGkyOno6Fi3bt1p06ZZPtNsfHz8zp07
v/zyy0KFClkSSVNFixa9ePGiVRofAAAAAAD8v/buPkrnOv8f+G/mmiG2JNMd
JauWEtGNs3aVSu2SOG4K7Wq7WdGwilKbLaV1d2ixqK0w3Uib7ZTtZluO02Jz
UCnVlkM3qpWICEtuZsxc135nf9O5UunjmnF9rs9VHo+/xjWfz+v1/Lz99zxz
PhdASFJ562xhYWHUMati/vz5NWvWrHLDWVBQMGTIkNWrV6c9WDwenz17dpcu
XWKxWJXjhaFt27YbN25M+/MCAAAAAOl11VVX7bfua9++fdQxK23BggVVLnUb
NmxYVFS0a9eusEOuXbt20KBB1apVq1rONMrLyxs5cmQ8Hg/7kQEAAACAA3fb
bbftt/Q78cQTo45ZOQsXLqxaqXvcccfdf//9JSUlmUz74YcfXn755bm5uVUI
nBbNmjV76aWXMvnIAAAAAMCBmD59+n57v1gstn379qiTpurDDz8sKCiobLeZ
l5c3bNiw3bt3RxX7jTfeaN++fVVq2QNQo0aNUaNGpfgdcAAAAABAlliyZEkq
BeDzzz8fddKUfP75582bN69svdm0adNly5ZFnf1/5s2bd9ZZZ1W+oK20vLy8
Pn36rF27NuonBgAAAAAqbfPmzTk5OfutAe+4446ok+5fIpHo3r17ZRvOgQMH
FhcXR539S+VPMXfu3Hbt2qXy/1IFNWvWvPbaa995552oHxQAAAAAqLpTTjll
v2Vgs2bNoo65f6NGjapUw5mfnz916tSoU3+r5cuXDxw48Oijj65qg/t1LVq0
GDdu3ObNm6N+MgAAAADgQPXp0yeVVnDlypVRJw2ybNmyvLy81EvOI444Yt68
eVGn3r/S0tLZs2f37du3cePGVehya9SoccEFF4wYMWLFihVRPwoAAAAAkDYP
P/xwKg3hjTfeGHXSb1VaWnr66aen3nYeffTRb731VtSpK23dunVPPvnk6NGj
r7rqqtatWzdu3LhWrVrJh8rPz69Xr17z5s3btWs3YMCAqVOnvvzyyyUlJVGn
BgAAAADSb/369bm5ufvtQmvXrr1jx46ow+7bmDFjKlXqLl++POrIAAAAAAAH
pE2bNqk0omPHjo066T68++67NWrUSL3U9UYCAAAAAOB7YPLkyamUonXq1Nm6
dWvUYb8ikUicd955KZa61apVW7JkSdSRAQAAAADSYP369dWqVUulGu3Xr1/U
Yb9i2rRpKZa65aZOnRp1XgAAAACAtLniiitSqUZzcnIWLFgQddgvrFu3rnbt
2imWuoWFhVHnBQAAAABIp1dffTXFgvT444/fuHFj1Hn/W1pamvobGJo0aVJc
XBx1ZAAAAACANGvbtm2KNWm7du1KS0ujTTtkyJAU0+bm5i5atCjatAAAAAAA
YVi2bFlOTk6KZWm3bt3Kysqiijp+/PgUc5YbNGhQVDkBAAAAAMLWpUuX1PvS
wsLCeDye+ZAzZ87Mzc1NMeTxxx+/bdu2zIcEAAAAAMiMt99+u3r16qlXu716
9SopKclkwqKiolgslnrCZ599NpPxAAAAAAAyb9SoUam3puVatWq1Zs2aDARL
JBLDhw9P/U0R5Xr06JGBYAAAAAAA0dqzZ8/pp59eqWq3oKDg0UcfDTXVli1b
unbtWqlUderUWb9+faipAAAAAACyxMqVKw899NBKlajlLrroohUrVoSR57HH
HjvmmGMqFSYnJ+e5554LIwwAAAAAQHaaOXNmZXvdcnl5eX379l29enW6Yixc
uPAnP/lJFZL87ne/S1cGAAAAAIDvikGDBlWhUC2Xn59/5ZVXzp8/Px6PV211
WVnZM88806ZNm6oFaNu2bWlpaXpPAwAAAAAg+8Xj8V/+8pdVa1Yr1KtXr3//
/nPnzt22bVsqGz/77LOnn366b9++Rx11VJWXnnbaaVu3bg37cAAAAAAAstOe
PXs6dux4INVuhdzc3KZNm3br1u2GG24YP378jBkznvj/pk+fPnny5OHDh/fs
2fOUU04pv+wAF51wwglr166N+tgAAAAAAKJUXFzcvXv3A692M6B+/frvvPNO
1AcGAAAAABC9RCJx8803R93a7keLFi3Wr18f9VEBAAAAAGSRcePGxWKxqOvb
ffvxj3/86aefRn1CAAAAAABZZ/Hixccee2zUJe7XDRkypLS0NOqzAQAAAADI
UmvWrOnQoUPUVe4XatSoMWXKlKiPBAAAAADgO2D69OkFBQXRlrpt27ZdtWpV
1CcBAAAAAPCdsWXLlsGDB1erVi3zjW69evUefPDBRCIR9RkAAAAAAHz3vP/+
+717985Yu3vEEUeMHTt2586dUT83AAAAAMB328cffzx48OA6deqE1+g2btx4
8uTJ27Zti/pZAQAAAAC+P4qLi//yl7+0b98+jX++W6tWrSuvvHLu3LnxeDzq
5wMAAAAA+N7avn37U089VVhY2LRp09zc3Mp2ubFY7Iwzzhg4cOAzzzyze/fu
qJ8GAAAAAODgsm3btnnz5t19990DBgz4+c9/3qJFiwYNGhyxl0aNGrVu3bpL
ly7XXXfdlClTFi9e7GULAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABZJZFIfPTRRy+//PKi747XXnttx44dUZ8cAAAAAEAE
du7c2bZt2//3HZSfn//www9HfX4AAAAAAJk2Z86cqAvaqvvRj34U9fkBAAAA
AGTaiy++GHU7W3VnnXVW1OcHAAAAAJBp8Xh85MiRjRo1qlmzZvW02ruAjcVi
6R1eu3btc88995VXXon6/AAAAAAAvj9atWqV7HUnTpwYdRwAAAAAAPZDrwsA
AAAAVNYLL7zQqVOnc88996KLLrrkkksuv/zyvn37Dhw4cMiQIcOGDRs5cuTY
sWMnTJgwefLk++67b9q0affee+/EiRPvuuuuESNG3H777bfccssNN9zQv3//
a6655oorrujZs2fXrl0vvvjiCy+8sHxmYWHhxo0bw4i9efPm8o3lK8oXdezY
8dJLLy1PXv7JgAEDbrrppqFDh5bH+8Mf/nD33XdPmTLlnnvuKf/597//fflD
XX/99X369OnVq1d5zvbt259//vnlT7Fnz54wQqZCrwsAAAAAVEoikSgoKAj1
S7smT54cRvLCwsI0hpw3b14YIVOh1wUAAAAAKmXTpk1pbEf36cknnwwj+Tnn
nJPGkO+9914YIVOh1wUAAAAAKiWRSHTt2vXII4/Mzc1NY01aIS8vr0uXLrt2
7Qoj+T333JOWvzTOycnp379/GAlTpNcFAAAAAKqmrKxsy5Ytq1evfuuttxYt
WlRUVNShQ4fU29HDDjvskksuKb9r/vz5//rXv9auXbtr165EIhFq5vL5GzZs
KN84ZsyYhg0bphi1efPmgwYNmjFjRvmNb7/99vbt20MNuV96XQAAAAAgjUaM
GJHK37vedtttJSUl0UYtKyu78847g3NeffXVr7/+erQ5v0mvCwAAAACk0c6d
O2OxWHCvW1RUFHXMLyQSicsuu2yfIU8//fSlS5dGHXDf9LoAAAAAQHqdeuqp
wb1ucXFx1Bm/NHPmzG8mvOyyy3bv3h11tG+l1wUAAAAA0qt79+7Bve7mzZuj
zvil2bNnfy3eLbfcEo/Ho84VRK8LAAAAAKTXb3/72+Be97XXXos645eGDRu2
d7Zrr7027O9uO3B6XQAAAAAgve69997gXnfWrFlRZ/xCaWnpCSeckAzWqVOn
8k+iDrV/el0AAAAAIL3mzJkT3OuOGzcu6oxfeOSRR5KpTjzxxO3bt0edKCV6
XQAAAAAgvd5+++3gXvc3v/lN1Bn/Z9euXfXr16+IlJubu2TJkqgTpUqvCwAA
AACk165du4J73Q4dOkSd8X9uvfXWZKShQ4dGHacS9LoAAAAAQNode+yxAb3u
KaecEnXA/y5fvjwvL68iT7NmzUpKSqJOVAl6XQAAAAAg7X76058G9LqHHHJI
IpGIMF48Hk8mzMnJefHFFyMMUwV6XQAAAAAg7Xr16hX8KoZPPvkkwnj33Xdf
MkmWvOy3UvS6AAAAAEDaDR06NLjXjfBPZNetW1erVq2KGHXr1v3Pf/4TVZIq
0+sCAAAAAGn3wAMPBPe6jz32WFTZunfvnowxa9asqGIcCL0uAAAAAJB28+bN
C+51R40aFUmw5557LpmhU6dO0b7mt8r0ugAAAABA2n3wwQfBve4111yT+VSf
f/75CSecUBHgBz/4wUcffZT5DGmh1wUAAAAA0m7Pnj25ubkBve4FF1yQ+VQ3
3nhjMsAf//jHzAdIF70uAAAAABCGBg0aBPS6DRs2zHCeZcuWJavmM888s7S0
NMMB0kivCwAAAACE4bzzzgvodWOxWCab1fJdZ555ZsXq3NzcZcuWZWbvkiVL
+vfv37Vr145pdfjhhydPskmTJukd3qNHj5EjR27fvj0zRwQAAAAAZI+rr746
oNctt3r16oyFmTBhQnLvjTfemJmlq1atisViwYeQtTp37pyZUwIAAAAAssfw
4cODm8N//vOfmUmyevXqmjVrViytX7/+559/npm9s2bNCr9/DUvdunUzc0oA
AAAAQPaYMWNGcHP40EMPZSBGIpHo2LFjcunf/va3DCytsGHDhjp16oTcv4al
X79+GTsoAAAAACBLLFq0KLg5vOOOOzIQ44knnkhuvPTSSzOwcW/r169/8MEH
R4wYcWdaHXfcccmHat++fXqHjx07ds6cOfF4PMNnBQAAAABE7uOPPw7udX/1
q1+FnWHr1q3HHntsxbpatWqtW7cu7I2Z0apVq+QxTpw4Meo4AAAAAMD3RDwe
r1atWkCve/bZZ4edoV+/fsl19957b9jrMkavCwAAAACEpFGjRgG9br169ULd
vmTJkuSuVq1alZWVhbouk/S6AAAAAEBI2rVrF/wqhuLi4pBWl5SUNG3atGJL
LBZ78803Q1oUCb0uAAAAABCSa6+9NrjXfffdd0NaPXr06OSWIUOGhLQlKnpd
AAAAACAkY8aMCe51586dG8beVatWHXLIIRUrGjZsuHPnzjC2REivCwAAAACE
5PHHHw/ude+///60L00kEhdeeGHY1XG09LoAAAAAQEiWLl0a3OvecsstaV/6
yCOPJOf36tUr7fOzgV4XAAAAAAjJp59+Gtzr9ujRI70bN23aVFBQUDG8du3a
GzZsSO/8LKHXBQAAAABCkkgkatasGdDrtmzZMr0br7rqquTwoqKi9A7PHnpd
AAAAACA8TZs2Deh1CwoK0rhr/vz5yclt2rSJx+NpHJ5V9LoAAAAAQHg6deoU
/CqG7du3p2XR7t27GzVqVDEzPz9/5cqVaRmbnfS6AAAAAEB4rr/++uBe9623
3krLottvvz05c9iwYWmZmbX0ugAAAABAeCZMmBDc6z777LMHvmXFihX5+fkV
Axs1arR79+4Dn5nN9LoAAAAAQHieeuqp4F530qRJB7giHo+fffbZyYELFixI
S/JsptcFAAAAAMLzxhtvBPe6gwYNOsAVU6dOTU67+uqr0xI7y+l1AQAAAIDw
bN26NbjX7dy584HMX79+/eGHH14x6sgjj9y0aVO6kmczvS4AAAAAEKratWsH
9LqnnXbagQzv2bNnctSMGTPSlTnL6XUBAAAAgFCdccYZAb3uYYcdlkgkqjZ5
9uzZyTkXXnhhled85+h1AQAAAIBQXXLJJcGvYvjss8+qMHbHjh0NGjSomFC9
evX33nsv7cmzll4XAAAAAAjVTTfdFNzrvvrqqwc4dtSoUWmPnc30ugAAAABA
qP70pz8F97pPPPFEZWe+/vrrsVis4vZTTz21pKQkjORZS68LAAAAAITq73//
e3Cve9ddd1VqYFlZWcuWLZO3L168OKTkWUuvCwAAAACEasWKFcG9br9+/So1
cNKkScl7CwsLQ4qdzfS6AAAAAECodu7cGdzrtm/fPvVpa9asOfTQQytuPOaY
Y7Zs2RJe8qyl1wUAAAAAwnbMMccE9Lonn3xyinMSiUTnzp2TNz7++OOhxs5a
e/e6kyZNijoOAAAAAPA9tHcP+U3Vq1ePx+OpzPnrX/+avKtDhw6JRCLs5Nnp
nHPOSZ5DUVFR1HEAAAAAgO+hX/ziF8GvYli3bt1+h2zbtq1evXoV19esWfPf
//53+MGzVJ8+fZJH98orr0QdBwAAAAD4Hrr11luDe93Fixfvd8iAAQOS148b
Ny4DsbPWBx980Lx588MOO2zw4MFRZwEAAAAAvp+mTZsW3Os++uijwRNeeuml
nJyciotbtGhRWlqameTZ7KB9DQUAAAAAkAHPP/98cK87YsSIgNv37Nlz2mmn
VVyZk5OzdOnSjCUHAAAAADg4rVq1KrjX/fWvfx1w+5gxY5JXXn/99RmLDQAA
AABw0CopKUm+RWGf2rZt+233vv/++4ccckjFZccdd9y2bdsymRwAAAAA4KBV
v379gF73hz/84T7vSiQS7dq1S1729NNPZzg2AAAAAMBB69xzzw3odWOx2D6/
Cu3Pf/5z8pquXbtmPjYAAAAAwEHryiuvDH7F7ocffvi1WzZv3nzUUUdV/PbQ
Qw9ds2ZNJMkBAAAAAA5Od955Z3CvO3/+/K/d0rt37+RvJ0+eHElsAAAAAICD
1vTp04N73QceeGDv61944YXkr1q2bFlWVhZVcgAAAACAg9PChQuDe92hQ4cm
Ly4uLj755JMrPo/FYm+88UaEyQEAAAAADk4fffRRcK/bq1ev5MV7v7Th5ptv
jjA2AAAAAMBBq6ysLD8/P6DXbd26dcWVK1euTF7ZoEGDHTt2RJscAAAAAOCg
ddJJJwX0unXr1i2/Jh6Pt2nTJvnh7Nmzo04NAAAAAHDw+tnPfhb8Kobdu3cX
FRUl/9mzZ8+oIwMAAAAAHNT69u0b3OsuXLiwdu3aFT8ffvjhn3zySdSRAQAA
AAAOaqNHjw7udRs2bJj8ecqUKVHnBQAAAAA42M2cOTO4101q3bp1PB6POi8A
AAAAwMHupZdeSqXUzcvLW758edRhAQAAAAD474YNG1LpdW+77baokwIAAAAA
8D+JRKJGjRrBpe5JJ520a9euqJMCAAAAAPCFJk2aBPe6//jHP6LOCAAAAADA
ly6++OKAUveKK66IOiAAAAAAAF8xYMCAbyt169Sps3HjxqgDAgAAAADwFePH
j/+2Xvehhx6KOh0AAAAAAF83a9asfZa6559/fiKRiDodAAAAAABf99prr32z
1K1Wrdo777wTdTQAAAAAAPZhy5Yt3+x1hw8fHnUuAAAAAAC+1fHHH793qduk
SZPi4uKoQwEAAAAA8K169+6dLHVr1KjxyiuvRJ0IAAAAAIAgn3766XXXXdet
W7cBAwa8+eabUccBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI2P8B8CNO+Q==

      "], {{0, 916}, {1864, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Comments" -> Association["Software" -> "gnome-screenshot"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{235.59999999999866`, Automatic},
    ImageSizeRaw->{1864, 916},
    PlotRange->{{0, 1864}, {0, 916}}], TraditionalForm]], "Input",
  CellChangeTimes->{{3.698416303067203*^9, 3.698416354093232*^9}, {
   3.698416389919321*^9, 3.698416427808646*^9}},ExpressionUUID->
  "7a2fd646-3194-4c37-b920-0085784b730f"],
 "+",
 Cell[BoxData[
  FormBox[
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzs3Ql0lfWB/+FmgRBQBAybAm6jUopLpdalokjVula0iKOiRVHEBaUoKlWp
jLgUi1UsQgUtuKIoyPIXVKz7ggKCtRYtgqiAKArIkpCQ239mMpNxFJM3yb35
3Zv3eU5Pj6Xhfb+/673neD7e87LbeZef2i/7Bz/4wRWNyv7r1HOvPnLQoHOH
/KpZ2f847bIrLrrwsgvOP+6yKy+48IJBB5+XU/aLd5b9V5+8H/zgP//6XwAA
AAAA1Hdfr19X9p91Vx9T/p9nZ8144tGHQo8CAAAAACDl9GEAAAAAgHjShwEA
AAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACI
J30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEA
AAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA
4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30Y
AAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAA
gHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkf
BgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAA
ACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjS
hwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAA
AACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe
9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEA
AAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACI
J30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEA
AAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA
4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30Y
AAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAA
gHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkf
BgAAAACIJ30YAAAAACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAA
ACCe9GEAAAAAgHjShwEAAAAA4kkfBgAAAACIJ30YAAAAACCe9GEAAAAAgHjS
hwEAAAAA4kkfBgAAAACIJ30YAIC6NH/+/PPPP79Xr159+vS5+OKLr7jiiuuv
v/6WW26544477r777nHjxk2YMOGhhx569NFHp0yZMn369CeeeOKRRx6ZOHHi
Pffc86c//en2228v++Fhw4Zde+21V1555WWXXda/f/9zzz33rLPOOv3002+8
8cbNmzenYvaXX345ePDg0047rXfv3mX7L7300rK7X3fddWV3vO222+66666y
5Q888MDkyZOnTZv22GOPlQ0eM2ZM2drhw4eXTf3Nb35z4YUXnnPOOWU7y34s
FQsBAKAG9GEAAOpMIpFo06bND1LpL3/5SyqW9+7dO4kjlyxZkoqRAABQXfow
AAB1ZtWqVUmsrNs0ffr0VCzv2LFjEkeuXbs2FSMBAKC69GEAAOrM1q1bf/rT
nyYxtH7L4YcfvnHjxlQsHzhwYFZWVlJGXnbZZalYCAAANaAPAwBQx4qLi1et
WvXee++98cYbzzzzzOTJk//jP/5j//33j55Ys7OzDzvssJtuuunhhx9++umn
58+fv3Tp0jVr1qR09qZNm+bNmzdx4sQLL7ywSZMmEae2b9/+nHPOuf322ydN
mvTSSy99/PHHKR0JAADVog8DAJAOEonExRdfHKW49u/f/8svvwy7dt26db16
9ap8Z8+ePV944YWyc4WdCgAAldCHAQBIE2vWrKkyDt9xxx2hZ/634uLigw46
aJsjO3Xq9OKLL4YeCAAAVdOHAQBIHx06dKgkDufm5hYXF4fe+L9uvfXW7448
7bTTNm/eHHoaAABEog8DAJA+jjvuuMq/P1xYWBh64/+aMGHCt+YNHjy4tLQ0
9C4AAIhKHwYAIH1U+QjixYsXh974vwYMGPDNbRdddJGnDQMAkFn0YQAA0seI
ESMq78OzZs0KvfG/FRYWtmzZsmLYSSedVFJSEnoUAABUjz4MAED6mDx5cuV9
+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
5ufnV8TbDRs2JHftc88917Bhw/LrH3zwwV988UV1r/DUU081atRomycdO3Zs
ctcCAMC/9GEAANJYIpHYfvvtK+nD+++/f/RLHXvssRW/Mel/+tsXX3zRokWL
8osfeuihmzZtqtl15syZU/EN5G99i/j1119P7mYAANCHAQBIZ/vuu28lfXiH
HXaIeJ1HHnmk4nf96le/SvrOCy64oPzibdu2XblyZW0udfXVV2/zsJ06dSoq
KkrWYAAA+Jc+DABAejv55JMr6cNlvvrqqyovUvYzrVu3Lv/5pk2brlixIrkj
58+fX/Gl3ylTptTyalu2bNlzzz23edjrr78+KYMBAKCcPgwAQDobOHBg5X14
/vz5VV6k4su9ZUaPHp30kf379y+/+CGHHJJIJGp/wbFjx27zsM2bN/cVYgAA
kkgfBgAgnd15552V9+HHH3+88iu89NJLFT988MEHl5aWJndhcXFxQUFB+fV3
3HHHgw466LLLLnvvvfdqc83NmzdXPM34W6ZOnZqs5QAAoA8DAJDOpk2bVnkf
vu222yr57UVFRR07diz/ydzc3HfeeSfpC1944YXvriq7V5XhunKnn376Ns+b
iocnAwAQW/owAADp7J133qm8D1988cWV/PZhw4ZV/OTVV1+dioXjx4/f5rBW
rVpt3ry5xpcdM2bMNi/bvHnzJI4HACDm9GEAANLZhg0bKu/Dxx133Pf93sWL
Fzds2LD8x3bbbbdNmzalYuENN9zwfdsmT55c48vOnTv3+y67cePGJO4HACDO
9GEAANJcxdN9t+mHP/zhNn9XIpHo1q1bxY/Nnj07RfMGDBjwfdtGjhxZ48su
W7bs+y67ePHiJO4HACDO9GEAANLcgQceWEkfzs/PTyQS3/1d9913X8XPnHnm
mambd9NNN33ftieffLLGl63ki9Nz5sxJ4n4AAOJMHwYAIM316tWrkj5cZtWq
Vd/6LZ9//nmLFi3K/9/mzZuvXr06dfPeeuutba7Kzc397rDoyo7wfed95ZVX
krgfAIA404cBAEhzV111VeV9+LXXXvvWb+ndu3fF/zt+/PiUzkskEmeeeeZ3
V91+++21uey77777feddsmRJssYDABBz+jAAAGluzJgxlffhhx76P/8E++yz
z1b8X4cffnhpaWmqFxYXFw8bNqxVq1blN23Tps299967zadeRDd79uzvO++G
DRuStRwAgJjThwEASHOVlNJyw4cPr/jhzZs377HHHuW/3rBhw3/84x91tnPL
li1///vfly1blpQiPXTo0G0e9sc//nHtLw4AAOX0YQAA0tz7779feR/u27dv
xQ8PGTKk4td/97vfhVtdW0ccccQ2D1t2wNDTAACoP/RhAADSXFFRUeV9uHv3
7uU/+be//S03N7f8F/faa6/CwsKwy2ts9erVFQf5lrlz54ZeBwBA/aEPAwCQ
/nbaaadK+vBuu+1W9jOlpaWHHHJIxS8+//zzoVfX3O9///ttnvSII44IPQ0A
gHpFHwYAIP397Gc/q6QP5+TklJSU3H333RW/cu6554aeXHPFxcW77777Nk86
e/bs0OsAAKhX9GEAANJf7969K+nDZV577bWmTZuW/3VBQcGaNWtCT665sWPH
bvOMPXr0SCQSodcBAFCv6MMAAKS/66+/vvI+vMcee1T89QMPPBB6b819/fXX
bdu2/e4BW7RosWrVqtDrAACob/RhAADS33333Vd5H65w1FFHZfSXbPv27fvd
Q2VlZU2bNi30NAAA6iF9GACA9PfXv/41Shxu1KjRkiVLQo+tuSlTpmzzXH/4
wx9CTwMAoH7ShwEASH/Lli2L0odvvvnm0EtrbuXKlTvuuON3DzVgwICM/kY0
AADpTB8GACD9lZSU5OTkVB6HO3fuXFxcHHppDZUd8KijjhKHAQCoY/owAAAZ
Ybfddqu8D7/66quhN9ZQIpG46KKLvnuiwYMHi8MAAKSUPgwAQEbo3r17JXG4
f//+oQfW3O233/6t4+Tm5o4bNy70LgAA6j99GACAjNC3b9/vi8Nt2rRZu3Zt
6IE19NBDD2VlZX3zOM2aNXvuuedC7wIAIBb0YQAAMsKNN974fX34scceC72u
hh544IHs7OxvnmWPPfZYvHhx6F0AAMSFPgwAQEZ48MEHtxmHTzjhhAx9SO+E
CRO+9c3h7t27r1mzJvQuAABiRB8GACAjvPrqq9+Nw40bN/7oo49CT6uJ++67
71tx+De/+U1JSUnoXQAAxIs+DABARli5cuV3+/DIkSND76qJcePGfTMO5+fn
P/SQfwgHACAAfRgAgIyQSCQKCgq+GYcPOOCATPzC7dixY795ig4dOixYsCD0
KAAAYkofBgAgU5x11lkVWXX77bd/5513Qi+qttGjR38zDh955JGff/556FEA
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
vhn6tQEAqFf0YQCAzHXBBRdEqWrHHXdc6KVkpLVr144cOXKPPfZIdfiNLi8v
b/To0aFfGACA+kMfBgDIXO+++25WVlaVSa1hw4br1q0LPZZMVVpaOnPmzJNP
Pjni99XrwOWXX+6pKQAASaEPAwBktKOOOipKT3v44YdDLyXjbdq0adq0aX37
9m3dunWqC3CVTjvttKKiotAvCQBAxtOHAQAy2vTp06PEtNNPPz30UuqP0tLS
d9555/777x80aFD37t1btGiR6hq8TaecckpJSUnoFwMAILPpwwAAGa20tDTK
42GbNm3qy5akzurVqxctWjRz5sxx48bdcMMNV/9fw4YNu/V/DBky5MILL+ze
vfvOO+9c+0R89tlne9AEAEBt6MMAAJnummuuiVLSnnvuudBL4f9YuXLllClT
+vbtW1BQUONEfNVVV4U+BwBABtOHAQAy3RtvvBElo916662hl8K2lZSUTJo0
6eCDD65ZIp4wYULoEwAAZCp9GAAg05WWlu60005VNrSePXuGXgpVmDlzZufO
navbh/Py8ubNmxd6OwBARtKHAQDqgfPOO6/KhrbbbruFnglVKykp+eMf/9i0
adNqJeJOnTpt3rw59HYAgMyjDwMA1ANjxoypMqBlZWWtWbMm9FKIZMmSJfvt
t1+1EvHAgQNDrwYAyDz6MABAPfDmm29GCWgvvPBC6KUQ1ebNm0855ZTofTgn
J2f+/PmhVwMAZBh9GACgHigqKmrYsGGVAe3hhx8OvRSqYevWrf369YueiA85
5JBEIhF6NQBAJtGHAQDqh7333rvKejZy5MjQM6F6EolElMdr+5cgAAA1ow8D
ANQP3bp1qzKdDR48OPRMqLbS0tITTjghYh/u2LHj1q1bQ08GAMgY+jAAQP1w
5plnVpnOevfuHXom1MT69es7duwYMRH7CjEAQHT6MABA/TBo0KAqu9nxxx8f
eibU0Pz586M8ZLvMgQceGHosAEDG0IcBAOqH3/72t/ow9duwYcOi9OEyCxYs
CD0WACAz6MMAAPXDNddcU2U0O+GEE0LPhJorLCzcY489ovThiy66KPRYAIDM
oA8DANQPV199dZXR7MQTTww9E2pl0qRJUfpwQUFBSUlJ6LEAABlAHwYAqB+u
uOKKKqPZSSedFHom1MrWrVv33nvvKIn4ueeeCz0WACAD6MMAAPVD7969qyxm
vXr1Cj0TamvMmDFR+vAll1wSeikAQAbQhwEA6ofu3btXWcwGDhwYeibU1tdf
f920adMq3+0//OEPQy8FAMgA+jAAQP2w1157VVnMbrvtttAzIQnOO++8KF8h
XrFiReilAADpTh8GAKgHSkpK8vPzq8xlDz3kn/SoD2bMmBGlDz/++OOhlwIA
pDt9GACgHliwYEGUXPbiiy+GXgpJsHnz5oYNG1b5hh86dGjopQAA6U4fBgCo
B8aPHx+lD3/66aehl0JyHHzwwVW+4U877bTQMwEA0p0+DABQD1x44YVVtrKd
dtop9ExImosvvrjK9/y+++4beiYAQLrThwEA6oHdd9+9ylZ28sknh54JSXP3
3XdX+Z5v2bJl6JkAAOlOHwYAyHQRHz588803h14KSfPUU09V+Z7PysoqLi4O
vRQAIK3pwwAAmW7YsGFR+vDTTz8deikkzbx586K87T///PPQSwEA0po+DACQ
6X70ox9VWcny8/M3bdoUeikkzQcffBClD69YsSL0UgCAtKYPAwBktDlz5kSp
ZD169Ai9FJJp6dKlUd75y5cvD70UACCt6cMAABntV7/6VZRKNn78+NBLIZne
f//9KO/8jz/+OPRSAIC0pg8DAGSu5cuX5+bmVpnIsrOzP/vss9BjIZnefPPN
KH143bp1oZcCAKQ1fRgAIHOdf/75URLZYYcdFnopJNmMGTOi/JuR0tLS0EsB
ANKaPgwAkKHee++9nJycKH34/vvvDz0WkuyOO+6o8p1fUFAQeiYAQLrThwEA
MlSPHj2ixOHWrVsXFRWFHgtJdsEFF1T55j/44INDzwQASHf6MABAJpo5c2aU
OFzm+uuvDz0Wkq9z585Vvvl79+4deiYAQLrThwEAMs6aNWvatm0bJQ43aNBg
xYoVofdCkn322WfZ2dlVvv9vuumm0EsBANKdPgwAkHF69eoVJQ6XOf/880OP
heS75557orz/58yZE3opAEC604cBADLL2LFjI8bhxo0bf/rpp6H3QvJ169at
yvd/dnb2+vXrQy8FAEh3+jAAQAb561//2qBBg4h9eMiQIaH3QvK99957WVlZ
Vb7/u3TpEnopAEAG0IcBADLFkiVLdtxxx4hxuOwn161bF3oyJF/fvn2jfARu
vPHG0EsBADKAPgwAkBE+/PDDXXfdNWIcLvOnP/0p9GRIvqVLl0b8Cv27774b
eiwAQAbQhwEA0t/ixYvbtWsXPQ5369attLQ09GpIvtNOOy3KR6Bz586hlwIA
ZAZ9GAAgzc2fP79169bR4/D222+/bNmy0Ksh+WbNmhXxU3DnnXeGHgsAkBn0
YQCAdDZu3Li8vLzocbjMhAkTQq+G5Pv0009btWoV5SPQuHFjD98GAIhIHwYA
SE9bt2698sorq1WGy/zyl79MJBKht0OSFRcXd+/ePeKnoF+/fqH3AgBkDH0Y
ACANvf766/vss0914/CBBx64efPm0NshyUpLS3v16hXxU5Cfn79y5crQkwEA
MoY+DACQVjZt2nT11Vfn5uZWNw63atXKY4epfxKJxKBBg6J/EC6++OLQkwEA
Mok+DACQJrZs2TJ27Nj27dtXtwyXycvLe+WVV0KfAJIskUhceuml0T8ILVq0
WL16dejVAACZRB8GAAiuuLj43nvv3XXXXWtQhsvk5uY++uijoQ8BSbZ+/foe
PXpU67Pw5z//OfRqAIAMow8DAARUWFg4evToGpfhMg0bNpwyZUroc0CSLV68
uGPHjtX6LPzsZz8rLS0NPRwAIMPowwAAQZSUlIwaNapNmzY1LsNlGjVqNHPm
zNBHgSSbNWtWs2bNqvVZaNGixUcffRR6OABA5tGHAQDq3ssvv7zffvvVpgyX
2W677Z555pnQR4EkGzlyZE5OTrU+C1lZWTNmzAg9HAAgI+nDAAB1acOGDeef
f35WVlYt4/Cee+75t7/9LfRpIJmKior69OlTg4/D0KFDQ28HAMhU+jAAQJ15
8cUXO3ToUMsyXOa0007bsGFD6NNAMpW9pbt27VqDj8OAAQNCbwcAyGD6MABA
3Rg1alSDBg1qWYazs7N/97vf+UO4qGcKCwuPPfbYGnwijj/++JKSktDzAQAy
mD4MAJBqxcXF5513Xi3LcJkuXbosXLgw9GkgyWr8zeGePXtu2bIl9HwAgMym
DwMApFRRUdGpp55ayzLcoEGD6667ruxSoU8DSbZly5bjjz9eHAYACEUfBgBI
nS1btpx44om1jMOHHnrookWLQh8FUqJfv341+FBcdtllW7duDb0dAKA+0IcB
AFKksLDwmGOOqU0ZPvHEE1955ZXQ54BUuf3226v7oWjSpMmjjz4aejgAQP2h
DwMApEifPn1qXIYPOeSQ2bNnhz4BpNDzzz9f3T+xsV27dm+++Wbo4QAA9Yo+
DACQCnfeeWfNyvBhhx329NNPh54PqbVs2bKCgoJqfTQOOeSQlStXhh4OAFDf
6MMAAEn3/PPP5+bmVrcMd+zY8Zlnngm9HVKutLT08MMPr9ano0+fPv58RgCA
VNCHAQCSa926dR06dKhW+8rLy7v55pu3bNkSejvUhVGjRlXrA3LNNdeEngwA
UG/pwwAAyXXOOedUq33ts88+ixYtCr0a6siHH37YpEmT6B+Qa6+9NvRkAID6
TB8GAEiimTNnVisOn3zyyZs2bQq9GupIIpE48sgjo39ArrvuutCTAQDqOX0Y
ACBZiouL99577+jtq3///lu3bg29GurO/fffH/0D8utf/zr0XgCA+k8fBgBI
lhEjRkRvX4MHDw69F+pUUVFR9Edzd+3atbi4OPRkAID6Tx8GAEiKjRs37rjj
jhHbV8+ePUtLS0NPhjo1evToiB+QVq1affzxx6H3AgDEgj4MAJAUd955Z8T2
tc8++2zYsCH0XqhTmzZt2mmnnaJ8QLKysmbPnh16LwBAXOjDAAC1V1JSsssu
u0RpX40bN168eHHovVDXbrvttoj/AuWCCy4IPRYAIEb0YQCA2ps6dWrE9nXX
XXeFHgt1bevWre3bt4/yAenQocP69etD7wUAiBF9GACg9k499dQo7euAAw7w
2GFi6Mknn4z4L1BmzpwZeiwAQLzowwAAtfTVV1/l5eVFaV8vvvhi6LEQwLHH
HhvlA9K1a9fQSwEAYkcfBgCopYkTJ0ZpX926dQu9FAJYsmRJdnZ2lM/Iyy+/
HHosAEDs6MMAALV0xhlnRGlfTz31VOilEMCQIUOifECOO+640EsBAOJIHwYA
qI2SkpLmzZtX2b522223RCIReiwEsPfee0fpwy+88ELopQAAcaQPAwDUxttv
vx2lfV111VWhl0IAS5YsifIB2XPPPf0LFACAIPRhAIDaGD9+fJT89f/Zu+/4
nM7/j+PNJENiROy9R42gVNSorTS2GjVrE6pWraDUKMW3tUptglIdatfee6sg
1N5EhOzf72rTR6rGfZ/7vs8517nvvJ5/fX/9kft9Lp9z3df55JzrHDhwQHZS
QILJkycrOUG+/vpr2UkBAABSKPrD0FpsbOyUKVPatWvXvHnzJkbVrFmzjh07
fvrpp3/88YfsAQMA2JlevXqZ7X2lT58+Pj5edlJAgho1apg9Qdzc3O7duyc7
KQAA+qFVAkOhPwytjRo1SslNIwYxbNgw2QMGALAzVatWNfv98sEHH8iOCUjw
7Nkzd3d3sydItWrVZCcFAEBXtEpgKPSHoamEhIQcOXLInskssHQp9Q8AsEye
PHnMfr+MGDFCdkxAgn379ilZgE2dOlV2UgAA9EOrBEZDfxiaOnjwoOxpzALZ
s2e/c+eO7DEDANgTsbxXcntkaGio7KSABLNmzVKyBgsLC5OdFAAA/dAqgdHQ
H4amhg0bZsXkkzFjxrp16w4ePHjSpEnffffdihUrNmzYsHfv3jNnzoSHh1+2
ysyZM01/aNq0aU+fPi17wAAAdkaslpV8te3Zs0d2UkCCLl26mD078uTJIzsm
AAC6olUCo6E/DE2VKFFC4URXrly5oUOH/vjjj1evXk1MTFQ3xqFDh7y8vEx8
eqpUqXbu3KnuhwIAUoJLly4p+Zq7cuWK7KSABGKBZ/bsaNq0qeyYAADoilYJ
jIb+MLRz+fJls3NdxowZQ0JCLl68qF0M8cPFp5jI4OTktHr1au0CAAAc2MmT
J5Ws7e/duyc7KaA3cRnr4eFh9uwYO3as7KQAAOiHVgkMiP4wtDNt2jQTU02G
DBm++eabZ8+eaZrhzp07+fLlMz3xTp8+XdMMAAAHpnD7uKdPn8pOCujt3r17
Ss6O9evXy04KAIB+aJXAgOgPQzvVq1d/0zzTpUuXBw8eaB0gMjKybNmypme8
IUOGaB0DAODAjh8/bvqLJsnDhw9lJwX0pvDuenZfAQCkKLRKYED0h6GRR48e
ubq6vjrJ+Pj4rFq1SocAsbGxderUMT3jtWvXTvUNfAAAKcr58+eVdMBu3Lgh
Oymgt40bN5o9NZycnGJiYmQnBQBAJ7RKYEz0h6GR0NDQVyeZLFmy6PPiSzGV
iQnN9IwnpkQxMeoQBgDgwK5du2a2AyYcO3ZMdlJAbwsWLDB7avj5+cmOCQCA
fmiVwJjoD0MjLVu2fGmSyZ49e3h4uD6f/vnnn5ue8cqWLRsZGalPGACAA4uJ
iXF2djbbBFu7dq3spIDevvrqK7OnRokSJWTHBABAP7RKYEz0h6GF2NhYX1/f
FycZHx+fU6dO6fPp3377rekZL1++fHfu3NEnDADA4WXOnNlsE2zKlCmyYwJ6
Gz9+vNlTIzAwUHZMAAB0QqsEhkV/GFrYsmXLS/PMTz/9pM9Hr1692snJycSM
5+/vf/HiRX3CAABSgnfeecdsE6xdu3ayYwJ6oz8MAMCLaJXAsOgPQwvBwcEv
zjOtW7fW53N37tyZKlUqEzOel5fXoUOH9AkDAEghzG7jJhQpUkR2TEBv9IcB
AHgRrRIYFv1hqC4xMTF37tzJ84y/v//9+/d1+NzTp0+nTZvWxIzn6uq6fv16
HZIAAFIUJZusCjdu3JCdFNAV/WEAAJLRKoGR0R+G6k6ePPniVLN69WodPvTa
tWvZs2c3fQGycOFCHZIAAFKajRs3mm2CCfPnz5edFNAV76cDACAZrRIYGf1h
qO6LL75InmeqVaumwyc+fPiwWLFipme8cePG6ZAEAJACPXnyxM3NzWwfrFat
WrKTArpasGCB2fMiY8aMsmMCAKAHWiUwMvrDUF25cuWSp5rNmzdr/XHPnz+v
XLmy6RmvV69eiYmJWidJge7du7dly5Zp06aFhIT06dOnXbt2QUFBNWrUqFu3
bsuWLXv06DFkyJCJEyeuXr364sWL/BPYKC4u7vTp08uWLRs/fvygQYO6du3a
vHnzWrVqiQFv1KhRx44d+/XrN3r06JkzZ+7evTsiIkJ2Xrt3//79pPIeOXLk
q+XdvXv3pPJetWqVKO+EhATZee1bUnmHhoYml3eLFi2Sy7tDhw5J5T1jxoxd
u3YZs7wrVqxotg/m5ubGK6GRomzYsMHseeHs7BwbG6vihz548GDr1q3/+9//
xOzdt2/f9u3bJ83ederUSZq9P//88wkTJvzwww9hYWHM3jYSs/fZs2eXL18u
Zu/Bgwcnzd61a9dOnr0//fTTUaNGTZ8+fefOnY8fP5ad1+6J8t62bds333yT
XN4NGzZMKu+PPvroxfI+f/485W2j+Pj4c+fOrVixIqm8u3XrllzeYthfLO8d
O3Y8evRIdl7YAVolMDL6w1DXjRs3kqcaMftpPdWIb+2mTZuanvGaNGki/pim
MVIOMZJi/SMWSGIVmjVrVrMXfS9KkybNu+++Ky4cQkNDjdneMaDbt2/Pnj1b
LP4DAgJMv1DgJU5OTnnz5hVr19GjRx89elT2cdgHcRklrl7FhVXdunWzZctm
UXl7e3tXqFBBlPeyZcu4/lXozp073333nbi8sqK88+TJI8pbXJQdOXJE9nH8
Y8SIEUrCi8yykwL6OX78uJLz4tq1a7Z8ipi9d+/ePWTIkHr16pl9hPYlXl5e
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
NGHj9ZeTk5O4yB0/fvyOHTvMvtFALCxPnDgxf/78Ro0a2XjLhFgD2+ODSLZf
f6VLl65t27ZJ5W22i3jnzh1R3kOHDi1SpIgtHyrOKTvdaMLG6y9R3uIi98sv
v9y+fbvC8l6wYEHjxo09PT1tGfBOnTppWt6iciy9g93d3X3ixIn2+3sZwITh
w4crOQts3OVA/PU2bdosW7bs3LlzZmfvu3fvbt68WQQrVqyYLR/q6+t75MgR
fYZRXevWrbPxl24BAQFjxozZtm3bw4cPTX9WXFzcqVOnFi1a1KxZMxtfiCz+
ie1xnoyOjq5Vq5YtBy4qrVWrVkuXLj179qzZ8r53796WLVtGjBhRvHhxWz7U
x8fn0KFD+gyRujZu3Ghj27Z06dJffPHF1q1bHzx4YPqzRHmLK5TFixc3b97c
xhcit2zZ0h7LG7LQKoG66A/DyFavXu3k5GRixsuYMeOFCxdkx7QzYtXRsGFD
6xYtbm5uH3/8sbiesvrmDbF8EotV8Q9nXYAcOXLcvHlT3QHR2r59+6x+cjN/
/vxTp069evWqdR8dFRW1atWqOnXqWPfpwujRo9UdDa0lJiY2adLEuoN1dXVt
3br1pk2brL5548yZMyNHjvT397cuQLZs2a5fv67ugGjt4MGDVv8aQixZv/76
6z///NO6jxblLb4j6tWrZ/prwgQxF6k7Gi8RC3Ir7jAvXLjwypUrNQ0G6E+c
6Wrdp/oqFxeXjz76aP369VZvHfPHH3+I7zurHwkRf/HKlSvqjpjWjh07ZnWf
Nnfu3JMmTbp8+bJ1H/3s2bM1a9Y0aNDA6tl70KBBqg6GHsT62bqDFeXdokWL
devWWV3e58+fHzNmTJYsWawLIFY1dvcu3ZMnT1r9vo9cuXJNnDjR6kN+/vz5
zz//HBQUZHV5f/bZZ+qOBhwVrRKojv4wDGvXrl2mf+3r6elp1xsOyCJWHVas
VXx9fUNCQu7cuaNKBrHEXbhwYeHCha1IUqxYscePH6sSQwcXL17MkCGDFYdZ
oUKFX375Ra37G0WM4OBg6+6jmD17tioZ9CGuGa04xqTyVuvX60nlbd3txEWL
FjV7D61x/Pnnn9ZtIFO+fHlR3mrdIZNU3tb9FmbmzJmqZHgTcZFo3RVi1apV
xbKft9XAkdSvX9+Kc8E0sRQU0/6tW7dUSRgbGytmbzEPW5FELGnM3kNrHNeu
XbOuW1iuXDkVZ+9Lly5ZPXt/++23qmTQx6hRo6w4RlHeYnys/i3qS8S/2sqV
K627Wz5v3rx3795VJYYOrl+/bt0OG+qWd3h4uPjns+536NOmTVMlAxwYrRJo
gf4wjOn06dOmnzF0cXFZt26d7Jj2x7pmRYsWLW7cuKF6GHEhNnHiRCtuX2nX
rp3qYbQQFxdXoUIFS48uc+bMS5Ys0eLJd3FaWfHKNnHhZi/bevz2229WlHez
Zs3ElbLqYcS//uTJk614zLB169aqh9FCfHy8FdvU+Pv7L1y4UIvyPnv2bJUq
VSzNI5bWJ06cUD3MiyZMmGBpqmTZs2cfPHjwmTNnNE0I6GP9+vVWnwuv1bBh
Q7VaZy8Ss/e0adN8fHwszdO0aVPVw2ghISGhWrVqlh6dn5/f999/r8WT7+fP
n69evbqledzd3Q8fPqx6GC1s3brVijdQfPjhh1bfoW2C+O7+5ptvfH19Lc0j
TjfVw2hBLDBq1Khh6dFlyJBhzpw5WpT3hQsXrNhXxM3N7cCBA6qHgcOgVQKN
0B+GAV27dk1cFJv+3pw/f77smPbn9u3blm7skCVLlrVr12qaKjw83Iqujl08
fx0SEmLpcbVp00bT20fFsnn69OmW9uRLlixp/DeG371719J7WcWf//nnnzVN
deXKFSsuw5ctW6ZpKlV88cUXlh5Xy5YtzW7iZwtR3rNmzbK0J//2229r/cbw
nj17WjpWL8maNWuLFi2+/vrrNWvWnD17VtO0gEYSEhIKFChg47mQRCxmVq9e
rWnaq1ev1qxZ09JgdrE6nThxoqXH1bRp03v37mma6vvvv7e0J1+4cOGoqChN
U9lOLOpy5Mhh0XH5+flpvcq9fv26FZuPzZkzR9NUqhBflJYeV+PGjbW+O1rM
DJb25MVs+fTpU01TqUhcJthRWntHqwTaoT8MoxHrKLNvUhg7dqzsmHbJ0kc7
xZWR1pcDScQ146hRoyy6uSJ9+vQG34j4wIEDFu216OnpuWTJEn2ynT9/3tLd
DwYOHKhPNqtZuqv2+++/r8/DkomJiWPGjLGovNOmTWvwjYiPHDli0TvpPDw8
Fi5cqE+2sLAwS1/H069fP00jxcfHW73z5Gs5OTn5+/tv3LhR09iA6qZNm2Z7
/VeuXFmtDSVME7P3hAkTXFxclGfz8fHR4p5PFZ08edKizabEH547d64+2cLD
w0uWLGlRMfTq1UufbFZr3bq1RUcUGBioz/pWlPfkyZMtWql6e3tfunRJh2xW
O3PmjEXblYjy1m0XtStXrpQuXdqiYujWrZs+2az29OlTscR9++23kx7fy5Ej
hzgltXisA8lolUBT9IdhKM+fPzd7K2mPHj00fem8o1q+fLlFa5Lg4GCdt778
8ccfLVrUGflBzri4OIuucbJmzXrs2DE9Ez558qR27drKE4oriKNHj+qZ0CKr
Vq1SfixCz549rX7HonV+/vlni/agM/KDnGLoAgIClB9L5syZdX4KODIysl69
esoTuri4aP1+9oSEhM6dOyuPpFBISIimsQF1iWVerly5bKl5cR5Z/QpR66xb
t86ih27q1q2rZzyLiInIom2v/P399+/fr2fCp0+fBgUFKU/o7Oy8Z88ePRNa
xNI9VTp27Gj1S+iss3HjRoseuqlZs6ae8Swiytuiba/8/Pz27t2rZ8Jnz541
btxYeUInJ6cdO3bomdAi165de+121unTp9+5c6fsdI6JVgm0Rn8YxhEfH9+0
aVPTM16jRo14X48VHj16ZNFbub/88kspObdv327R64a13hzAahbtOJo/f34p
txuJa5BmzZopz1mmTBljnn2PHz+26EUko0ePlpJTrJYtenhW66enrTZ58mTl
R5E3b14ptxvFxsZ+9NFHynOWKlVK618ZiOV6//79lUdSyLDTIPBaixcvtrra
ixQpsnbtWi32CDVt3759pnd6fIlh9wj69ttvlR9Fzpw5w8LC9A8ppmKLHrgo
VqyYzj1VhaKiovLkyaP8QAYNGiSlq3PgwIH06dMrz7lo0SL9Qyoxa9Ys5UeR
I0eOP/74Q/+QYiHdoUMH5TkLFy5szB3enj9/buIuVnE1d/HiRdkZHQ2tEuiA
/jAMQqyIgoODTc94lSpVevbsmeykdmnEiBHKlyIjR46UGHX79u2enp4Ko4qL
FwPudnX58mWLDuHKlSuyooqrMLGQUF4bU6dOlRXVhF69eik/hGHDhkmMumvX
LuX3oWXPnv3JkycS077W1atXld9rJA4hPDxcVlRR3mYX0i+aNGmSDqnElbVF
D0qY5eHhoX+7DLCaKFdLH7J+ScGCBWfMmKHzxrP79+9X/gu+zJkza/oqAevc
vHlT+Q6o4hCkNIeTxMfHt2rVSnlJGPNh6kGDBik/hE8//VRi1EOHDimvDX9/
f01fJWCd27dvK/8lTqZMmaQ0h5OIObBt27bKa2PUqFGyopowdOhQ07GbN28u
O6NDoVUCfdAfhkGYvd+yaNGiBlyN2It8+fIpXIR07dpVdtj/++WXX5Rv99e/
f3/ZeV+mfJ9nsRo/c+aM3LQxMTGVK1dWGFhcHRttX9yDBw8qr5ZOnTrJzvvX
o8rKA/ft21d23pcp3+c5TZo0p06dkps2NjZW+fsBvb299dk0T1yJ58+fX2Eq
JcaNG6dDbEAtmzdvtr3s/f39Z82apeeNUiK28n3Xu3fvrlswhVq0aKEwvJeX
l/QdpeLi4mrVqqUwsKenp9H2xRVff8qrpWXLltKfB9+2bZvywJ07d5ab9lXK
93kW1aLznlevEhOX8l2wUqdOLfGXNa919uxZd3d307HFHzDgPTz2i1YJ9EF/
GEZg9mHDbNmyXb16VXZMe/Xs2TOFK5DKlSvrvK3fm3z11VcKM7u4uGzfvl12
3n/Nnj1bYXJnZ+fffvtNdt6/3Lt3T/kjkNWrVzfOzYpi5VmoUCGFyQMDAw3y
COqUKVOUF8nvv/8uO++/vv/+e4XJnZycfvnlF9l5/yJWy8qbsVWrVtWn3SRK
t1evXknvc7GduAo7ffq0DrEBtVi0CacJxYsX37Jli26xZ8yYoTCYOLvXr1+v
WzCzlixZojz5Dz/8IDvvXx4/fly4cGGFsStWrKjzawVMeP78eYkSJRQmL1Om
jEFu+fvuu++UF8mvv/4qO++/LHrHSmhoqOy8f4mIiChatKjCzOXLlzfIBZoQ
HR2t8BmQI0eOyA7rIGiVQDf0hyHdpk2bTL8819fX9+TJk7Jj2rGnT58q+RLP
kCGDcW4NTUxMVH4Xbvbs2e/cuSM78l+OHz+ufGeJgQMHys77r/379yu/b+SL
L76QnfcfyrcoTJ8+vaEWTsrfv5M1a9Zbt27JzvuXU6dOKd8co1+/frLz/uvQ
oUNmb3RJpucb37Zt2/b2228rDGZaQECAcXojgFniWztjxoyqFL+Tk1PXrl11
242nefPmCoNlypTp2rVr+qQy7dy5c8o3x+jZs6fsvP8SyyrlG/IMHjxYdt5/
iIJUmDlNmjQXLlyQnfdfyrf1EOevPk/cmBUWFqZ8cwwjPCaZTCyrlL+52DjP
S4opQmFm6fdpOwZaJdAT/WHIdeTIEdNbWYqLekPdHWqnlLwufOXKlbJj/sfd
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
aCg2NjYkJITy1s2JEydKlCghe6T/ERAQ4NjlrQNaJTAs+sPQwsSJE03PeEWK
FNF6M6579+65uromfdzy5cs1/SxIt379eul3WpYvX/7YsWOyR0IPjx496tGj
h9zrgtSpU48ePTomJkb2YOhh48aN0nvy5cqV0/rtTgYRERHRq1cv6eUtLr2j
o6PfFPLJkydKdtcZMGCAnkMHyCK+fBXuN1W2bFk9g/3+++/Sm5alS5c+ePCg
nkcti5gY+/btm7z4l8Ld3X3o0KEp5E68bdu2FS1aVOJov/X3bcP79++XPRJ6
iIyM7Nevn5ubm8TRFuX9+eefa920TAlolcCw6A9DdUuWLDE942XNmlWHp++n
Tp2a9HHikuHFnRvhqMRqfPTo0b6+vravfyyVJUuWmTNnOvZ9la86fPhw5cqV
9R9tJyenoKAgh3xI1oTo6OgxY8akTZtW/wHPnDnz9OnTU1p5Hz161OymcFoQ
5d2gQQMlD8lWq1bN7E+rXr26DmMFGMHIkSMVnmV79+7VM1hMTMy4cePSp09v
09RgFX9//2nTpumzpYZxnDhxokaNGvqPtpi969Wrd+7cOdkDoKvY2NiJEycq
2RJfdRkzZpwyZYpj3zb8qlOnTsnakbhOnTpnzpyRPQCOgFYJjIz+MNS1adMm
07+49/X1PXnypNYxxGI4eVtaca2t9cfBOJ4+fSq+73LkyKHKWsisMmXK/PLL
Lymtdfai48ePf/zxx/rcbOnh4REcHBweHi77oKWJjo6ePXt2zpw5dRhtoVix
YgsXLhRXf7KPW5oTJ06I8tbnbrSk8la+X8qAAQPM/sz06dM79nY3QDIxPSrc
HEbKW9pFPDGd6vYkSNGiRVP47C2uNXSbvVOnTi1m75T2a+sXxcTEiHrTbXem
IkWKiI9LIU+QvdapU6d0K+9UqVKJ8r5w4YLsg3YQtEpgcPSHoaKjR496e3ub
mPHc3d23bdumQ5LVq1cnf+j8+fN1+EQYyrNnz6ZPn543b15VlkavVbZs2ZUr
V6bkzvCLTpw40apVK+2eevPy8hKr0ytXrsg+UEN4/vz5zJkzNd1QJSAgYPny
5SntrrM3ERdibdq00bS8e/XqZelb/0JDQ5X88GvXrmkzKoDh/PDDD0pOCnH1
bWLzFk2Jz/3uu+807RKXKlVq6dKlKe2myjc5e/Zsu3btxNWHRqPt4eHRvXt3
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
P3580DNrpKSk5Je//GVNYmkC9evX/8EPftDp39q3b3/ggQem6axdatCgQcP/
k8JrxmKxyZMnB/1zAwAgEX0YAICaO+mkk/ZYC2+++eagZ1bfl19+efLJJ6cq
nLZq1ap379633HLL9OnT33777S1btuzy0JKSkvXr1y9duvThhx++/PLLc3Nz
c3JyUrUh3bKzsx9//PEM/5gAAKgqfRgAgJo788wz9xgMr7nmmqBnVtPq1avb
tm1bw16ak5Nz6qmnPvjgg5999lm1l2zbti0/P/+SSy5p2rRpDfekVd26dWfN
mpXCHwEAAGmiDwMAUHN5eXl7bIYDBgwIemZ1rFmzpk2bNjWJpUcdddSDDz64
adOmFK4qKyubP39+v3799t1335psS4fmzZsvXbo0hTcLAED66MMAANTclVde
ucds2KNHj6BnVtnatWur/ZvD2dnZeXl5CxcuTOvCL774YuzYsS1atKjeyJQ7
/fTTN27cmNZbBgAghfRhAABq7pZbbtljOWzbtm3QM6vms88+O/TQQ6uXSXv3
7v3uu+9mbGphYeHtt9++//77V29tSuy3335jx44tKyvL2F0DAFBz+jAAADU3
derUPfbDnJycoqKioJcmq7CwMDc3txqZtGPHjm+88UYgm7/88strrrkmkCdO
nHXWWatWrQrkrgEAqAl9GACAmlu8eHEyFfH1118Pemmy+vXrV9VGus8++4we
PbqkpCTY5atWrcrLy4vFYlWvvNVxzDHHvPjii8HeMgAA1aYPAwBQc5s3b06m
JY4ZMybopUm5++67q5pJO3To8Le//S3o4f9RPuaCCy7IycmpevFNVm5u7pNP
PumBEgAAezV9GACAlEjmUb1dunQJeuaevfzyy1XNqueee+727duDHr4La9as
GTFiRNOmTavbgHehVq1a55xzziuvvBL0zQEAkAL6MAAAKXHJJZfsMS3GYrH1
69cHvTSRL7/8skmTJsnH0qysrJtvvjkejwc9PJHS0tJ58+YNHDjw4IMPrnYW
rl279mmnnTZp0qQtW7YEfUMAAKSMPgwAQEpMmjQpmcx41113Bb00kQsvvDD5
ZJqdnT116tSgJ1fNxx9/XP6Tuuyyy4477rh69eolvsGWLVv27NnzhhtumDNn
zo4dO4LeDgBA6unDAACkxMqVK7OysvbYVNu0aRPaJ9bOmjWrSnF4ypQpQU+u
kXg8vnbt2nfeeef111+f+w0LFy78+OOPCwoKgh4IAEDa6cMAAKRKp06dkimr
+fn5QS/dhW3btrVs2TLJOByLxR577LGgJwMAQE3pwwAApMqYMWOSiavt2rUr
KSkJeuy3DRw4MMk4XO6ee+4Jei8AAKSAPgwAQKp88sknsVgsmb563333BT32
/3nttdeSeThGhby8vKD3AgBAaujDAACkUM+ePZNJrPXr11+9enXQY/+lqKio
Xbt2ScbhY445xl9qAwDgv4Y+DABACs2ePTvJ0NqtW7eQPGViyJAhSW5u0KDB
qlWrgt4LAAApow8DAJBCZWVlyf8u7rBhw4Le+88ZM2Yk/2SJCRMmBL0XAABS
SR8GACC1nn766SRz6/eCfhDx3//+9wMOOCDJqd26dYvH4wGuBQCAlNOHAQBI
rXg83qlTpySjaywWmzx5ciA7V65c2bx58yR31qlTZ8WKFYHsBACA9NGHAQBI
uXnz5iX/0IZYLPbggw9meOG7777bsmXLJBeWu/POOzO8EAAAMkAfBgAgHS67
7LLk62u5oUOHFhcXZ2bba6+91qhRo+S3HX300RnbBgAAmaQPAwCQDlu3bm3R
okWVEvGPf/zjlStXpnvY/fffv88++yS/KhaLvfnmm+leBQAAgdCHAQBIkzlz
5sRisSol4vr16z/88MNlZWXp2LNu3bqzzjqrSnvK3XjjjekYAwAAYaAPAwCQ
PqNGjapqj/3e/z3P4fnnn0/hjKKiorvvvrthw4ZVXdKtW7fS0tIULgEAgFDR
hwEASJ/S0tJTTz21Gom4XG5u7p/+9KeioqKaDNi6deu4ceNatWpVjQHNmjXb
sGFDqj4KAAAIIX0YAIC02rp1a25ubvUScbmGDRsOGjRo9uzZhYWFyR+6bdu2
Z5555oILLqhbt271zq1fv/7SpUvT97EAAEAY6MMAAKTbxo0bDz/88Gon4gq1
atXq3LnzkCFDJk6cOH/+/E8++WTTpk1b/m3lypULFy4s/9bVV1/dqVOn7Ozs
mpy17777zps3L+iPDQAA0k4fBgAgA9asWXPEEUfUMBFnRq1atZ599tmgPzAA
AMgEfRgAgMzYunVrly5dgq6/e7D//vvPnz8/6I8KAAAyRB8GACBjCgoKzj77
7KAb8G4deOCBb775ZtAfEgAAZI4+DABAhv3hD3/IyckJOgZ/W+fOnT/77LOg
PxsAAMgofRgAgMx7/vnnW7RoEXQS/o9+/foVFhYG/akAAECm6cMAAASisLDw
+uuvj8ViwZbhli1bzpw5M+gPAwAAgqEPAwAQoNdee+1HP/pRIGU4KysrLy/v
iy++CPozAACAwOjDAAAEKx6PT5ky5bDDDstkHD799NP/+te/Bn3rAAAQMH0Y
AIAwKC0tnTZt2jHHHJPWLJyVlfXTn/50/vz5Qd8uAACEgj4MAECoLFmy5Ior
rmjQoEFqy/CBBx44cODA9957L+j7AwCAENGHAQAIoR07djz//PNXXXXVoYce
Wu0mnJWVdcQRRwwePHju3LklJSVB3xMAAISOPgwAQMht3LhxxowZI0eO7N27
d/v27WvVqrW7IFynTp127dr16dPn5ptvnj59ur89BwAAienDAADsXUpKSrZs
2bJmzZpPvuHTTz8tLCwMehoAAOxl9GEAAAAAgGjShwEAAAAAokkfBgAAAACI
Jn0YAAAAACCa9GEAAAAAgGjShwEAAAAAokkfBgAAAACIJn0YAAAAACCa9GEA
AAAAgGjShwEAAAAAokkfBgAAAACIJn0YAAAAACCa9GEAAAAAgGjShwEAAAAA
okkfBgAAAACIJn0YAAAAACCa9GEAAAAAgGjShwEAAAAAokkfBgAAAACIJn0Y
AAAAACCa9GEAAAAAgGjShwEAAAAAokkfBgAAAACIJn0YAAAAACCa9GEAAAAA
gGjShwEAAAAAokkfBgAAAACIJn0YAAAAACCa9GEAAAAAgGjShwEAAAAAokkf
BgAAAACIJn0YAAAAACCa9GEAAAAAgGjShwEAAAAAokkfBgAAAACIJn0YAAAA
ACCa9GEAAAAAgGjShwEAAAAAokkfBgAAAACIJn0YAAAAACCa9GEAAAAAgGjS
hwEAAAAAokkfBgAAAACIJn0YAAAAACCa9GEAAAAAgGjShwEAAAAAokkfBgAA
AACIJn0YAAAAACCa9GEAAAAAgGjShwEAyKRly5Zdfvnlffv2veSSS6688spr
r7121KhRY8aMGT9+/EMPPTRp0qTJkyc/8cQT06ZNe/bZZ2fOnPmXv/zlqaee
evzxxydOnPjAAw+MGzeu/MWjR4/+9a9//atf/WrIkCGDBg269NJL8/Lyzj//
/FtvvXXHjh3pmL158+YRI0acd955/fv3L99/1VVXlZ9+0003lZ9411133X//
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
PB6vXbt2gj7cuXPnmlz/7LPPrrxUfn5+qmZXycSJEw866KC2bdvOmDEjkAEA
AEScPgwAQGi1b98+QR9u0qRJta88ffr0yuuceeaZ8Xg8hbOTUVxcPHTo0MoN
5557boYHAADAP/VhAABCrEePHokfMbF9+/ZqXParr746+OCDK65Qt27d1atX
p3x5YnPnzj3iiCO+eSPld5rhDQAA8E99GACAEBs8eHDiPvyPf/yjGpe9+uqr
K68wbty4lM/endLS0lmzZp1xxhnfvZHyL2ZsBgAAVNKHAQAIrbFjxybuw7Nm
zarqNZcsWZKVlVXx9o4dO5aUlKRjeaV4PL5hw4YZM2YMHjy4ZcuWu7sRfRgA
gEDowwAAhFZ+fn7iPnz//fdX6YLFxcU//OEPK94bi8WWLl2a2sHPPffcrbfe
etNNNw0fPvy8887Lzc2tV69e4lvQhwEACJA+DABAaC1dujRxVh0+fHiVLvjN
X0geNmxYygeff/75CdZmZWV17979xhtv1IcBAAgJfRgAgNDavHlz4j7885//
PPmrrVy5cr/99qt44yGHHFJQUJDywbvsw/Xq1evSpcvo0aMr/hDem2++qQ8D
ABAS+jAAAKEVj8fr16+foA/n5uYmf6kePXpUvnHmzJnpGPzAAw9cfPHFV1xx
xY033jh+/Php06a9//77ZWVl33yNPgwAQHjowwAAhNnRRx+doA/vv//+SV7n
qaeeqnzXueeem9bNienDAACEhz4MAECY9e7dO0EfLrdly5Y9XqT8NU2bNq14
fYMGDdatW5eB5bujDwMAEB76MAAAYTZs2LDEfXjZsmV7vMgvfvGLytc/+OCD
GZidgD4MAEB46MMAAITZvffem7gP//nPf058hQULFlS++Pjjj//W04AzTx8G
ACA89GEAAMLsueeeS9yH77rrrgRv37lzZ/v27StemZOTs3z58owt3x19GACA
8NCHAQAIs+XLlyfuw1deeWWCt48ePbrylddff33GZiegDwMAEB76MAAAYVZQ
UJC4D/fs2XN37/3ggw9q1apV8bLWrVsXFhZmcvnu6MMAAISHPgwAQMg1btw4
QR8+4ogjdvmueDzerVu3ypfNmTMnw7N3Rx8GACA89GEAAELu2GOPTdCH99tv
v3g8/t13Pfroo5WvufDCCzM/e3f0YQAAwkMfBgAg5Pr27ZugD5fbsGHDt97y
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
       "], {{0, 913}, {1888, 
       0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Comments" -> Association["Software" -> "gnome-screenshot"]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->{240.19999999999956`, Automatic},
     ImageSizeRaw->{1888, 913},
     PlotRange->{{0, 1888}, {0, 913}}], "+"}], TraditionalForm]], "Input",
  CellChangeTimes->{{3.698416303067203*^9, 3.698416354093232*^9}, {
   3.698416389919321*^9, 3.698416427808646*^9}},ExpressionUUID->
  "691b439d-8fd0-41bb-a5a1-6719a32dbd9c"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XucjnXi//Gdk8YhxCiSIiWs0pYOsqulVGrFtjooZWlX6bSWDj+dVJuI
DrIrqS21lKJzOqjtvBRLUpIKUYSYKIcxp3t/s1/7ne0r3fc1Y2Y+Y+7n8499
tHbmul7X5fPXe6d7mvX7w2n9U3/yk58Mziz6j9P6XtVp0KC+Q35Tt+i/nH7Z
4AEXXPb733W97PLfX/D7QUf3Syv6w+FF/9F2t5/85N///C8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgMph3bp1CxYsmLeLeP/99z/77LOCgoLQrw0AAAAAIKqcnJxu
3br9ZBdUt27d559/PvT7AwAAAACIZPr06aFX1dI75phjQr8/AAAAAIBI3nrr
rdCTaukdf/zxod8fAAAAAEAk+fn5V155ZcOGDUMPqyVTrVq19u3bv/fee6Hf
HwAAAABAyRQWFuaXqUMOOaR4O73nnnvK9uKxWCz0CwMAAAAA/mPu3Lm/+93v
zjjjjN/+9rcXXXTR4MGDr7vuuuHDh48ePfruu+++7777HnzwwYcffvixxx57
8sknn3322SeeeGLy5MkPPfTQvffe+5e//OWOO+4o+uIbb7zxmmuuufzyyy+7
7LILL7ywb9++55xzzplnnvmnP/1py5Yt5ZGdnZ19xRVXnH766b179y7qv+SS
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
AAAAhFJQUPDwww8fcsghpdhgf6hevXpXX311dnZ2kGf56KOPIs6eP/mfAfnd
d9+tmLBHH300SlLdunXz8vIqJgkAAAAAqEgTJ05s3rz5ToyvO7bHHnvceuut
OTk5Ffks//znP7OysqJHXnrppRXWFovF2rZtG6XqlVdeqbAqAAAAAKACfPnl
lyeffHJp19ZIDjrooDfffLNiHufhhx+uUaNG9LZmzZpV8CcqTJw4MUrYFVdc
UZFVAAAAAED5icVi9957b506dUo7spZASkpK//79169fX36Ps2XLlj/84Q8l
rXr11VfLL2mHtm7dWq9evYRtHTt2rOAwAAAAAKA8bN269ayzzirttlpKDRs2
fOyxx8rjcaZPn16Kj1m48MILyyMmoT59+iRsq1mzZn5+fpA8AAAAAKCsfPPN
N8cee2yp9tQy0L59++eff76snmXOnDndunUrRcbRRx+9devWssookYi/xuuz
zz4LkgcAAAAAlIlly5a1bt26FOtl2TrssMPGjx+/YcOG0j1Fbm7uU089dfLJ
J6ekpJTi7vvss89XX31Vti82uuXLl0eJnD59eqhCAAAAAGAnrV69er/99ivF
ellOatSo0atXrwceeODzzz+P0p+dnT116tT+/fvXr1+/1DetXr36nDlzyvlN
J1C3bt2EnePGjQsbCQAAAACUztatW4855phSb5jlrXHjxp06dfr9739/8803
33777eP/x5gxY0aMGDFw4MBf/epXLVu2TEtL28m7VK9e/aWXXgr9V/Gvww47
LGHq4MGDQ2cCAAAAAKUR5fdGxVezZs0DDzzw8MMPP+ywwxo3bly6jwgIqKj/
1VdfDf338G+nn356wtpTTz01dCYAAAAAUGK333576QbMffbZp3///s8888zq
1au3u2ZOTs6MGTOuvfban/70p6W7eEWqXbv222+/HeTl/9DVV1+dMLhFixah
MwEAAACAkvn0008zMzNLul4eddRRTz75ZGFhYZRbzJ49++yzz05NTS3VUFru
WrRosWDBgvJ+z9FNmDAhYXNKSsqqVatClwIAAAAAJdClS5cSTZeNGzeeNm1a
KW40d+7cI444orSLaXk59dRTN2zYUOZvdWf84x//iFL+yCOPhC4FAAAAAKKa
PHlyiabL8847b/369aW+XUFBwR133FGrVq1S7aZlbLfddrvllltisVgZvs8y
sXHjxoyMjIT9vXv3Dl0KAAAAAETy3XffNWrUKOJ0mZqaOmrUqDK57/Lly7t1
67ZzS+rOOvbYYz/++OMyeZzycMwxxyR8hJo1axb9DYYuBQAAAAASGzVqVMTp
Mi0tbfLkyWV79yeeeGL//fffuUm1NBo0aHD//fdXwh+I/b5rrrkmyrMUPUjo
UgAAAAAggdzc3MaNG0ccMO+6667yaMjLy3vggQeaN2++E9tqCWRlZY0YMWLj
xo3l8Sxl69VXX43yRK1bt474O9QAAAAAgFCefPLJiBvmBRdcUK4l+fn5EyZM
KNff7dW0adNdZYbdJi8vr0GDBlEe7dFHHw0dCwAAAADE85vf/CbK1tesWbMt
W7ZUTNLChQuHDBnSpEmTnVte/6t27dr9+vV74403KvmHEuzQH/7whyjP2KJF
i61bt4aOBQAAAAB2bPPmzZmZmVG2vmnTplVwW2Fh4dy5c0eOHHniiSfWqFGj
pANsampqu3bt/t//+39///vfc3JyKji+DBW9hIiPPHTo0NCxAAAAAMCOPf/8
81FWvi5duoTtzM3Nff/99x9//PHhw4f369evqKdDhw6HHnro/v+jVatW7dq1
O/7443v27DlkyJAJEybMmDHjm2++Cdtchtq2bRvlr2m33XabP39+6FgAAAAA
YAcGDhwYZeV78cUXQ5cmtcmTJ0f5aypywAEHrF+/PnQvAAAAALC9n//85wn3
vX322aewsDB0aVIrev+tWrWKuMd27do1Ly8vdDIAAAAA8F+FhYW77757wnHv
kksuCV3Kvx555JGIY2yR008/PT8/P3QyAAAAAPAfq1atirLsPfnkk6FL+VdB
QUG7du2i77FnnHHG1q1bQ1cDAAAAAP82e/bsKLPe0qVLQ5fyb/PmzUtPT4++
x/7iF79Yt25d6GoAAAAA4F/Tpk1LOOilp6cXFBSELuU/rrzyyuhjbJGmTZu+
8cYboasBAAAAINk98cQTCde8rKys0Jn81+bNm1u2bFmiPTY1NfUPf/jD+vXr
Q7cDAAAAQPKaPHlywimvYcOGoTP5PxYuXBjl1679cFQfM2aMT5EFAAAAgCCe
euqphCNe7dq1Q2eyvSlTpqSkpJR0j902rd90001r1qwJ/QQAAAAAkFxee+21
hPNdSkrK5s2bQ5eyvSFDhpRijN0mLS2tU6dOd91119y5c+P/rGxubu7ChQuf
ffbZyZMnj/9f9913X9GfFH3v119/XWHPCwAAAAC7tPnz50fZ7oq+LHQp24vF
YgMGDCj1HlssPT29ZcuWxx133Lnnntv/fxX9c8eOHZs2bZqWlhb/2/fbb78z
zjhj7Nixn3zySehXAgAAAACV16ZNm6L82+73339/6FJ2oLCwsE+fPju/x5aV
5s2bDx06dMmSJaFfDAAAAABURnvvvXfCke3cc88NncmOFRQU9O3btwKG1uhS
U1N79Ogxa9as0O8GAAAAACqXU045JeG8Vq9evby8vNCl/KibbrqpdL/Pq1x1
7979008/Df1uAAAAAKCyuOWWW6IMa6+88kroUuKZOHFiZmZmee+rJVWtWrWr
r746/u8IAwAAAIAk8fbbb0dZ1S677LLQpSSwYMGCdu3alfe+WgqtWrWaN29e
6NcDAAAAAIEVFBRkZWUl3NOaNm0aupTE8vPzb7rppoyMjAqYWEukVq1azz77
bOjXAwAAAACBnX/++VH2tPfeey90KZF88cUX/fv3T01NLe+JtURSUlKGDh0a
+t0AAAAAQEhPP/10lDHttttuC11KCbz99tvt27cv74m1pC6++OJYLBb63QAA
AABAGFu2bKlRo0bCGe3ss88OXUqJzZs3r3///lH+fivMhRdeGPqtAAAAAEAw
p5xySsINrU2bNqEzKaUVK1YMGzbssMMOq4CtNYq//OUvoV8JAAAAAIRx5513
JhzQMjIytm7dGrqUnbJ06dLbbrutR48eTZs2LdF8Wr9+/f333//ggw8+/PDD
995775SUlFLusP8jLS3t6aefDv0yAAAAACCA119/PcqG9v7774cupcx88803
r7766oMPPnjzzTdfcsklZ5xxxun/q1evXoMHDx49evSTTz45e/bs7Ozs7b53
69at77333tixY4877ri0tLRS7LE1atT4+OOPgzw4AAAAAAT0zTffRPlZx+nT
p4cupdJZu3bt8OHDGzRoUNI99phjjiksLAydDwAAAAAVLSsrK+F69sgjj4TO
pJL67rvvrr766oyMjBLtsaNHjw4dDgAAAAAVrWXLlgmnsz//+c+hM6nU/vnP
f+63337Rx9iaNWsuWbIkdDUAAAAAVKgOHToknM5uuOGG0JlUdmvWrGnfvn30
PfbUU08NnQwAAAAAFapz587GWMpETk5O9+7dI46xKSkpH374YehkAAAAAKg4
xxxzTMLdbPjw4aEz2TXk5uYed9xxEffYXr16he4FAAAAgIrTrl27hKPZnXfe
GTqTXcbatWv333//KGNsRkbG8uXLQ/cCAAAAQAVp0qRJwtFs3LhxoTPZlbz5
5pupqalR9thBgwaFjgUAAACAipCTkxNlNHv88cdDl7KLufjii6OMsU2aNInF
YqFjAQAAAKDcffTRR1EWs3nz5oUuZRfz3Xff1a9fP8rpeu+990LHAgAAAEC5
u//++xNuZSkpKRs3bgxdyq7npptuijLGDh06NHQpAAAAAJS7Pn36JNzKGjZs
GDqTXdLatWtr1qyZ8IC1a9cudCkAAAAAlK9YLLbvvvsm3MpOPPHE0KXsqs48
88yEBywlJWXDhg2hSwEAAACgHL355psJh7IiI0aMCF3Krmry5MlRztisWbNC
lwIAAABAObrggguiDGUzZswIXcquKjs7Oz09PeEZmzRpUuhSAAAAACgv3377
bZ06dRKuZDVq1MjNzQ0dyy7soIMOSnjMrr/++tCZAAAAAFBehg8fHuXHYrt3
7x66lF3bqaeemvCY9erVK3QmAAAAAJSLzZs377nnnlHG2ClTpoSOZdd2+eWX
Jzxmv/zlL0NnAgAAAEC5GDx4cJQltn79+j6jgJ106623JjxpRx55ZOhMAAAA
ACh7CxYsyMjIiDLG9uvXL3Qsu7w77rgj4Un72c9+FjoTAAAAAMpYbm7ukUce
GWWJTUlJee+990L3ssu75ZZbEh629u3bh84EAAAAgDJ26aWXRllii3Tt2jV0
LFXBoEGDEh62zp07h84EAAAAgLL04IMPRlxii7z99tuhe6kKfv3rXyc8bGed
dVboTAAAAAAoM5MnT05LS4u4xPrt9pSVpk2bJjxvV155ZehMAAAAACgbEydO
TE9Pj7jEZmRkzJ8/P3QyVcEXX3wR5ciNGzcudCkAAAAA7KxYLHbttdempKRE
XGL9mCJl6O67745y5N59993QpQAAAACwU1atWtWtW7foM2yRpk2bbtq0KXQ4
VUSHDh0SHrmMjIwtW7aELgUAAACA0nvkkUfq169foiU2LS3ttddeCx1OFTF/
/vwoP5L985//PHQpAAAAAJTSa6+9dvTRR5doht1m2LBhodupOs4+++wop+6W
W24JXQoAAAAAJfPNN9+MHz/+mGOOKcUMW+SUU04pLCwM/RBUEe+++27EType
sGBB6FgAAAAAiOSjjz668847u3btuttuu5Vuhi3SsmXL7Ozs0I9CFZGXl/ez
n/0sysE77LDDQscCAAAAQDzz588fNWpUjx499txzz1IPsMUOOOCAlStXhn4m
qo5rr7024tkbM2ZM6FgAAAAA2IFFixYNHjx4//333/kBtljTpk2/+OKL0E9G
1TFt2rTU1NQoZ69u3brfffdd6F4AAAAA+D9eeumlE088MeKHcEbXsmXLpUuX
hn44qo7FixfXrVs34vG75pprQvcCAAAAwH/9/e9/L/Xv5IrvhBNOWL9+fejn
o+rYsmVL27ZtIx6/OnXqrF27NnQyAAAAAPzb/PnzO3XqVB4zbJGhQ4fGYrHQ
j0iVcuaZZ0Y/gaNHjw7dCwAAAAD/KigouOGGG6pVq1YeM2xWVtZjjz0W+hGp
asaNGxf9EB500EFbt24NnQwAAABAsvvyyy87duxYHjNskdNOO2316tWhH5Gq
ZtmyZTVq1Ih4CNPT02fNmhU6GQAAAIBkN3v27IYNG5bHDNu8efMpU6aEfj6q
pu7du0c/ikOHDg3dCwAAAECye/rpp6P/eGF0e++997hx4/Ly8kI/H1XTtGnT
op/GLl26FBQUhE4GAAAAIKk9/vjjGRkZZTvDHnLIIXfdddfmzZtDPxxV1pYt
W/bff/+IB7Jp06br1q0LnQwAAABAUnvqqafKcImtX7/+JZdcMnfu3NCPRdV3
++23RzyWmZmZziQAAAAAYc2YMaN69eo7OcDWq1evR48eo0ePnjdvXmFhYehn
Iink5ubus88+EY/oX//619C9AAAAACS1JUuWZGVllW6ArVat2kknnTR27NgP
P/zQAEvFmzBhQsSz2rdv39CxAAAAACS13Nzcdu3alWKG3W+//UaOHOnjNwko
Fou1bt06ynFt1KjRt99+G7oXAAAAgKQ2ePDgks6w++yzz4QJE/Ly8kK3k+xe
eOGFiId20qRJoWMBAAAASGozZ85MTU2NPsOmpKRcfPHF3333Xehw+Lff/va3
Uc5tx44dY7FY6FgAAAAAkldubm7Ef8V7mzp16jz77LOhq+E/8vLy6tWrF+Xo
vvHGG6FjAQAAAEhqo0ePjr7ENmnS5MMPPwydDP81ffr0KEf36KOPDl0KAAAA
QFL79ttvGzRoEH2JXbx4cehk+D/69+8f5fQ++eSToUsBAAAASGrDhg2LuMTW
r19/0aJFoXthe82bN094erOysvLz80OXAgAAAJC8cnNz99577yhLbFpa2uuv
vx66F7a3du3alJSUhAf4/PPPD10KAAAAQFKbOHFilCW2yPXXXx86FnbghRde
iHKAi74sdCkAAAAASa1Tp05RhqxDDz00Ly8vdCzswI033pjwAFerVi0nJyd0
KQAAAADJ6/PPP09NTY0yxr711luhY2HHunfvnvAAt2vXLnQmAAAAAEltzJgx
UZbYE044IXQp/KjDDz884RkeMGBA6EwAAAAAktppp50WZYz1e7uozBo3bpzw
DI8fPz50JgAAAADJq7CwsH79+glXrIMPPjh0KfyoomOcnp6e8BhPmzYtdCkA
AAAAyWv+/PlRfix2xIgRoUvhR61ZsybKMZ4zZ07oUgAAAACS11133RVlxfrw
ww9Dl8KP+vTTT6Mc4y+++CJ0KQAAAADJq1+/fgknrD333DMWi4UuhR+1dOnS
KGPsypUrQ5cCAAAAkLyOO+64hBNWr169QmdCPMuXL48yxhZ9WehSAAAAAJJX
y5YtE05Yo0aNCp0J8axcuTLKGLt06dLQpQAAAAAkr5o1ayacsB599NHQmRBP
xF/gNXv27NClAAAAACSpdevWRZmwZsyYEboU4ikoKKhWrVrCk/zYY4+FLgUA
AAAgSX322WdRxtjPP/88dCkk0KxZs4QneeTIkaEzAQAAAEhSn3zySZQx9quv
vgpdCgl06tQp4Unu27dv6EwAAAAAktSiRYuijLErV64MXQoJ9O3bN+FJbtGi
RehMAAAAAJLUl19+GWWMXbhwYehSSGDEiBEJT3JKSsqaNWtClwIAAACQjDZu
3BhljH3jjTdCl0ICb731VpTD/Oijj4YuBQAAACAZxWKxzMzMhPvVAw88ELoU
EsjJydltt90SHuYePXqELgUAAAAgSbVq1SrhfnXZZZeFzoTEfvGLXyQ8zBkZ
GWvXrg1dCgAAAEAyOvnkkxPuV+3btw+dCYldddVVCQ9zkbFjx4YuBQAAACAZ
DRkyJOF4lZaWtm7dutClkMDs2bOjjLFNmjTJzc0NHQsAAABA0nniiSei7FeT
Jk0KXQoJxGKx5s2bRznPEyZMCB0LAAAAQNJZuXJllPGqa9euoUshsWuvvTbK
eW7evHlOTk7oWAAAAACSTtu2bROOVykpKQsWLAhdCgksWrQoyhhbZMiQIaFj
AQAAAEg6l19+eZTxql+/fqFLIbEOHTpEOc+77bbbokWLQscCAAAAkFxmzJgR
ZbxKT09fuHBh6FhI4IUXXohynoscddRRPqwAAAAAgIoUi8UOOOCAKONVly5d
QsdCYocffnjEPbZPnz6hYwEAAABILjfffHPE8cqvoafye+qppyKe5yK33XZb
6F4AAAAAksjXX39dvXr1KMtVrVq1Pvroo9C9EE8sFjviiCMijrEpKSnjxo0L
nQwAAABAErngggsijlfNmzf/6quvQvdCPO+99156enr0Pfaee+4JnQwAAABA
svj8888zMzMjjldt2rRZvXp16GSIZ9CgQRHP87Y99pprrikoKAhdDQAAAEBS
uOqqq6KPVy1atFi+fHnoZPhRGzdu3HfffaMf6SKdOnXy/zIAAAAAUAE2bNiw
9957R1+uGjVqNGvWrNDV8KNefvnltLS0Eu2xe+2119/+9rdYLBa6HQAAAIAq
7umnny7RclW9evXbbrvNv9xNpXXrrbeW6Ehv06FDh3nz5oVuBwAAAKCK69Wr
VymWq2XLloUOhx2IxWJnnXVWKfbYtLS0iy66KDs7O/QTAAAAAFBlffvtty1a
tCjpclW3bt0pU6aEbocd2Lx586GHHlqKPbZI/fr17733Xp9aAAAAAEA5+fDD
D2vWrFmK5ep3v/vd5s2bQ+fD9latWtW6devS7bFFjj/+eL+uDgAAAIBy8txz
z6Wnp5ditmrVqtXHH38cOh+2t2bNmoMPPrjUe2zt2rUffvjh0A8BAAAAQNX0
yCOPpKamlmK2qlu37ttvvx06H7a3YcOGo48+utR7bJFzzz13y5YtoZ8DAAAA
gCpozJgxKSkppdisatWq9fLLL4fOh+1lZ2cff/zxO7PHduzYcf369aGfAwAA
AIAqaPLkyRkZGaXYrNLS0u6///7Q+bC9WCw2YsSIovNZ6j22VatWK1asCP0c
AAAAAFRB06ZNq127dik2q9TU1EceeSR0PuzAM888U6dOnZ3ZY1evXh36IQAA
AACoghYuXHjggQeWYrPKzMz8xz/+ETofdmDx4sUnnHBCqffYtm3bfvPNN6Ef
AgAAAIAqaOPGjQMGDCjFR8g2aNBg6dKlofNhx5588smmTZuWbo9t37795s2b
Qz8BAAAAAFXTq6++2qRJk5JuVq1bt/Y7j6i0tmzZcsMNN1SvXr0Ue2zv3r1D
5wMAAABQZWVnZ5922mkl3ay6du0ai8VCt8OPWrZs2W9+85tS7LGjR48O3Q4A
AABAVXbPPfeU9CcJ77777tDVkMBzzz3XsGHDEh3sjIyM9957L3Q4AAAAAFXZ
7NmzGzRoEH2zqlWr1pIlS0JXQwLr1q07+eSTS7THHnLIIbm5uaHDAQAAAKjK
Fi1atN9++0XfrDp27FhYWBi6GhIoOqXXX399iX5d3dChQ0NXAwAAAFDFrVix
onXr1tE3qzvvvDN0MkQyfvz4tLS0iAe7Ro0aX375ZehkAAAAAKq4ZcuW7bXX
XhE3qzp16mRnZ4dOhkgeeOCB6D8fe+6554buBQAAAKDqe+eddzIzMyNuVkOG
DAndC1HdeuutEQ92amrqggULQvcCAAAAUPVNnjw54s8Q1qxZc82aNaF7Iaoz
zzwz4h57zjnnhI4FAAAAICn87ne/i7hZDRw4MHQsRLVx48YDDjggysFOT09f
smRJ6F4AAAAAqr7vvvuuadOmUTarzMzM1atXh+6FqP7xj39E/GVeV199dehY
AAAAAJLCzJkzI25WI0aMCB0LJXDRRRdFOdh77bVXfn5+6FgAAAAAksI555wT
ZbNq06ZN6FIogVWrVtWqVSvK2Z4+fXroWAAAAACSwueff16tWrUom9W7774b
OhZK4KqrropysPv37x+6FAAAAIBk0adPnyib1SWXXBK6FEpgxYoVGRkZCQ92
48aNY7FY6FgAAAAAksJnn32WmpqacLPKysoqKCgIHQslcNppp0X5Pxrmz58f
uhQAAACAZNG5c+com9WcOXNCl0IJPPfcc1EO9tixY0OXAgAAAJAs/va3v0XZ
rEaOHBm6FEogJyenZs2aCQ/22WefHboUAAAAgGSxefPm2rVrJ9ysunbtGroU
SqZbt24JD3arVq1CZwIAAACQRM4666yEm1WtWrXy8vJCl0IJjBw5MuHBrlat
moMNAAAAQIUZP358ws2qyOzZs0OXQgm89dZbUQ72okWLQpcCAAAAkCyWLFkS
ZbP629/+FroUSmDt2rVRDvYrr7wSuhQAAACAJNKkSZOEm9UNN9wQOhNKpk6d
OgkP9qRJk0JnAgAAAJBEunbtmnCzOvfcc0NnQsm0bNky4cG+4447QmcCAAAA
kEQuvfTShJtV+/btQ2dCyXTo0CHhwR42bFjoTAAAAACSyOjRoxNuVo0aNQqd
CSXTqVOnhAfb528AAAAAUJGeeeaZhJvV7rvvHjoTSibKGHvdddeFzgQAAAAg
ibz66qsJN6tq1aqFzoSSOeqooxIe7OHDh4fOBAAAACCJvP322wk3q5SUlFgs
FroUSqBVq1YJD/aYMWNCZwIAAACQRGbPnp1wsyqSm5sbuhRKoFatWglP9UMP
PRQ6EwAAAIAk8s9//jPKGLtx48bQpRDV6tWro5zq1157LXQpAAAAAEnkhRde
SLhZpaenFxYWhi6FqF588cUoY+ySJUtClwIAAACQRB566KGEm1XDhg1DZ0IJ
DBs2LOGprlatWl5eXuhSAAAAAJLIyJEjE85WhxxySOhMKIHOnTsnPNU/+9nP
QmcCAAAAkFwuvvjihLPVcccdFzoTotq0aVP16tUTnuo+ffqELgUAAAAguRx9
9NEJZ6tevXqFzoSopkyZkvBIFxk/fnzoUgAAAACSSH5+fpSfIbzxxhtDl0JU
3bt3jzLGfvrpp6FLAQAAAEgi77//fpTZatq0aaFLIZIvv/wyPT094ZFu0qRJ
6FIAAAAAksuoUaOijLGrVq0KXQqRXH755VGO9CWXXBK6FAAAAIDk0r59+4Sz
VePGjUNnQiTr1q2rVatWlDH29ddfDx0LAAAAQBJZuXJlampqwtnq1FNPDV0K
kVx22WVRlthGjRoVFBSEjgUAAAAgidx1111RlqvRo0eHLoXEPvjggyifFlvk
uuuuCx0LAAAAQBLJz89v2rRpwtkqJSVlxYoVoWMhgS1btrRu3TrKEpuRkfHV
V1+F7gUAAAAgiUydOjXKcnXkkUeGLoXEBg0aFOU8F+nVq1foWAAAAACSyxFH
HBFlubr11ltDl0ICkydPjrjEpqamLly4MHQvAAAAAEnkqaeeijheffbZZ6Fj
IZ433nijevXqEc/z2WefHboXAAAAgCSyadOmfffdN8pydeyxx4aOhXjeeeed
2rVrR1xia9SosXz58tDJAAAAACSRK664IuJ49fzzz4eOhR/1wgsv1KxZM+Jh
LnLD/2fvvuOjKtY/jpNGEgIhISF0AobeRIp06SC9CAgiUhQuiDRRQBCRKl2k
SJNeBCkC0psU6b2E3lsSCDUFSFl/g7k/LlKyc3b37Gz5vP+6r/vC7Hdmnz17
5tlz5nz/verIAAAAAAAAcCIHDx708PCQ6VwVLlzYYDCozgu83ujRo93c3OQ7
sXnz5o2NjVWdGgAAAAAAAM7i9u3bkhsUCHPmzFGdF3iN8PDwhg0byrdhBXd3
93379qkODgAAAAAAAGcRHx9fuXJlyeZV9uzZ4+LiVEcG/iUxMXHGjBkBAQGa
OrHCgAEDVGcHAAAAAACAE/niiy/km1eLFi1SnRf4H4PBsG7duhIlSmhtwwq1
atVKTExUPQIAAAAAAAA4i4EDB8o3r6pXr646L/BfDx8+nDJlSqFChUxowwq5
cuW6d++e6kEAAAAAAADAWQwaNEi+eeXl5XXu3DnVkeHsEhMTN2/e3Lp1ax8f
H9PasEJQUBDFDAAAAAAAAOswGAw9evTQ1L9id02oFRER0b9//6xZs5rcg03i
6+t76NAh1aMBAAAAAACAU0hISPj000819a8KFSr0+PFj1cHhpC5evNixY0dv
b28z27BCQEDAnj17VA8IAAAAAAAATuHp06dNmzbV1L9KmzYt93RDiatXr3bo
0MHDw8P8NqyQI0eO06dPqx4TAAAAAAAAnEJCQkKTJk009a9cXV1XrVqlOjic
TkxMTL9+/Tw9PS3ShhXKli0bFhamelgAAAAAAABwCgaDoV27dlpbWP3791cd
HE5n9erVOXLksFQbVmjfvv3Tp09VDwsAAAAAAADOonfv3lpbWHXq1ElMTFQd
HE4kKiqqffv2FmzDpkuXbuHChaqHBQAAAAAAACeyZMkSFxcXTV2scuXKRUdH
qw4OJ3Lw4MFcuXJZsBPboEEDtiYAAAAAAACANZ0+fTpNmjSaulglSpR48OCB
6uBwIpMmTbLgDrFFihTZuHGj6jEBAAAAAADAuTx58qRw4cKaGlmVKlV6+PCh
6uBwFnFxca1bt7ZUGzZv3ryzZs1KSEhQPSwAAAAAAAA4nb59+2rqZTVs2PDx
48eqU8NZREVF1axZ0yJt2JIlSy5evJhdjgEAAAAAAKDEgQMH3N3d5dtZLVu2
jI+PV50azuLevXvvvvuumT1Yf3//L7744ujRo6pHAwAAAAAAAOeVmJhYvHhx
+aZW27ZtuaoQVnP37l1N9fkSV1fX999/f/HixVzIDQAAAAAAAOVmzZol39pq
2rQp22zCaqKjo0uUKGFaG9bLy6tz587nzp1TPQgAAAAAAADgmejo6MyZM0t2
t6pUqfL06VPVkeEsEhMTGzVqZEIb1tXVtXXr1levXlU9AgAAAAAAAOB/Ro8e
LdngypYt2+3bt1XnhRPp1auXCZ3YcuXKHTx4UHV2AAAAAAAA4F/i4uKyZs0q
0+Byd3ffs2eP6rxwIjNnztTahvX29h4/frzBYFCdHQAAAAAAAHjZnDlzJNtc
vXv3Vh0WTmT79u0pU6bU1InNnz9/aGio6uAAAAAAAADA65UqVUqmzZUnTx6e
RA+refjwYfbs2TV1Yhs1avTo0SPVwQEAAAAAAIDXO3r0qGSna+3atarDwom0
bdtWUyd2wIABbE0AAAAAAAAAW/bVV1/JdLoqVaqkOimcyObNm11cXOQ7scOH
D1cdGQAAAAAAADAiW7ZsMs2ujRs3qk4KZxEVFZUjRw75TuywYcNURwYAAAAA
AACMkNyjoGjRoqqTwol06dJFvhP7+eefq84LAAAAAAAAGDdo0CCZftf06dNV
J4WzOHPmjJubm2QntkGDBomJiaojAwAAAAAAAMZVrlzZaL8rVapUDx48UJ0U
zqJNmzaSndgCBQpQmQAAAAAAALALCQkJqVOnNtryatiwoeqkcBZnz551d3eX
6cR6e3uLf6w6LwAAAAAAACDl0KFDMl2vGTNmqE4KZ9GsWTOZmhTGjx+vOiwA
AAAAAAAga8aMGTJdr0uXLqlOCqcQGhrq6uoqU5NlypRJSEhQnRcAAAAAAACQ
1bt3b6NdrwwZMqiOCWfRtWtXmU6sp6fnqVOnVIcFAAAAAAAANGjcuLHRxlfd
unVVx4RTePr0aWBgoEwztlu3bqrDAgAAAAAAANq88847RhtfPXv2VB0TTmH5
8uUynVgfH5/w8HDVYQEAAAAAAABtsmbNarT3NWXKFNUx4RTq168v04zt06eP
6qQAAAAAAACAZt7e3kZ7XytWrFAdE44vIiLCw8PDaDWmSZPm7t27qsMCAAAA
AAAA2jx+/FjmQsSdO3eqTgrHN3XqVJlq/Oyzz1QnBQAAAAAAADSLjo6WaX8d
PHhQdVI4vqZNm8pU4+7du1UnBQAAAAAAADSTbMYeOnRIdVI4OIPBkD59eqOl
mC9fPtVJAQAAAAAAAFNINmP379+vOikcXGhoqEwpDh48WHVSAAAAAAAAwBQG
g8HNzc1oB2zjxo2qk8LBTZgwQaYZe/jwYdVJAQAAAAAAABOlS5fOaAds0aJF
qmPCwclsGOvn55eQkKA6KQAAAAAAAGCikJAQo02w4cOHq44JB1eoUCGjdViv
Xj3VMQEAAAAAAADTVaxY0WgTrH379qpjwpEZDAYfHx+jdTh27FjVSQEAAAAA
AADTtW3b1mgTrHTp0qpjwpGFhYUZLUJh27ZtqpMCAAAAAAAAphs8eLDRJpiX
l1dcXJzqpHBYu3btkmnGXr16VXVSAAAAAAAAwHQrVqyQ6YPt2bNHdVI4rPnz
5xutQE9Pz8TERNVJAQAAAAAAANPduHFDphk7aNAg1UnhsIYOHWq0AvPkyaM6
JgAAAAAAAGCuTJkyGW2FsW0s9NO7d2+jFVi1alXVMQEAAAAAAABztWjRQubi
2LNnz6pOCsfUuXNno+XXuHFj1TEBAAAAAAAAc82YMUOmGTt48GDVSeGYPv30
U6Pl9/HHH6uOCQAAAAAAAJjr+vXrMs3Y7NmzJyQkqA4LB9S+fXuj5deyZUvV
MQEAAAAAAAALKFGihEw/dvny5aqTwgF17NjRaO01b95cdUwAAAAAAADAAsaM
GSPTjC1WrJjBYFAdFo6mW7duRmuvdu3aqmMCAAAAAAAAFnDjxg1XV1eZfiwX
x8Livv/+e6OFV6ZMGdUxAQAAAAAAAMuoX7++TDM2e/bs0dHRqsPCoYwfP95o
4WXLlk11TAAAAAAAAMAy1qxZI9OMFfr37686LBzKokWLjFadm5vb06dPVScF
AAAAAAAALCAxMTEkJESmGevh4XHo0CHVeeE49u3bJ1N4oaGhqpMCAAAAAAAA
lvHLL7/I9MSEQoUKxcTEqM4LB3Hnzh2Zqlu4cKHqpAAAAAAAAIBlxMfH58mT
R7If26JFC4PBoDoyHERAQIDRkvvqq69UxwQAAAAAAAAsRmb3zueGDBmiOi8c
RNWqVY3WW4kSJVTHBAAAAAAAACzGYDBUqFBBshnr4uLyyy+/qI4MR9CzZ0+j
9ebm5nb37l3VSQEAAAAAAACLOXr0qJubm2Q/VvzL2bNnq44Mu7d06VKZeqPY
AAAAAAAA4GC6d+8u2YxN8c/1sePGjVMdGfbtzp07rq6uRoutfv36qpMCAAAA
AAAAlhQbG5s/f375fqzQoUOHp0+fqg4OO1a0aFGjZebh4REREaE6KQAAAAAA
AGBJBw4c8PDw0NSPLVWq1Llz51QHh73q16+fTJmNGjVKdVIAAAAAAADAwsaP
H6+pGSv4+PiMGzcuPj5edXbYn/3798vUWHBwMAUGAAAAAAAAx9O6dWut/Vih
YMGC69atU50ddsZgMGTLlk2mwObPn686LAAAAAAAAGBhjx8/Llu2rAn9WKFM
mTJr1qxJTExUPQjYDcmdCvLmzcvFsQAAAAAAAHA89+7dK1y4sGn9WCEkJGT4
8OHXr19XPQ7YgYsXL7q4uMjU1dSpU1WHBQAAAAAAACzv1q1buXLlMrkfK7i4
uJQtW3bEiBG7du16+vSp6gHBdlWrVk2mooKCgu7evas6LAAAAAAAAGB5t27d
KliwoDn92Oe8vb2LFSvWvHnz7777buHChYcOHYqKilI9PtiKtWvXShZS+/bt
VYcFAAAAAAAAdBEZGVmyZEmL9GNflTt37o8//njChAmHDx82GAyqxwplxLtf
qFAhmZpxcXFZv3696rwAAAAAAACALmJiYj766COd+rHPZcyYsU2bNosXL+aK
Wec0f/58yVLJnDlzZGSk6rwAAAAAAACAXsaOHevu7q5rPzaJt7d348aNFy1a
9PjxY9WDhvUkJiYWKVJEskiaNGmiOi8AAAAAAACgoxMnThQtWlTXTuyLfH19
O3TocPz4cdXjhpWsX79evjymT5+uOi8AAAAAAACgo5iYmM6dO7u6uurXg32J
eK1mzZrRknUSNWrUkCwMX1/fy5cvq84LAAAAAAAA6Gv//v2lSpXStQf7EldX
1w8++ODs2bOqhw59nT9/3svLS7IqatasqTovAAAAAAAAoLvExMTZs2fnyJFD
zxbsy1KmTNm7d2+e8OXYBg0aJF8SK1asUJ0XAAAAAAAAsIa4uLipU6cGBwfr
14B9VZYsWZYtW6Z66NBLfHx8mTJlJIshJCSEB70BAAAAAADAecTHxy9btqxG
jRrW3Eu2QYMG169fVz106OLSpUtp06aVrIQRI0aozgsAAAAAAABY28WLF3/4
4YcSJUro2oZ9Ll26dCtXrlQ9aOhiwYIFkmWQPn366Oho1XkBAAAAAAAANa5c
uTJlypRWrVrlzJlT136si4tLjx494uLiVI8Ylvfhhx9KlsHo0aNVhwUAAAAA
AADUCwsL27p169SpU3v27Fm7dm09NpitXLny3bt3VQ8UFibe08yZM8sUQMaM
GWNjY1XnBQAAAAAAAGzOw4cPt23bNnr06KZNm/r7+1ukH5s7d+4zZ86oHhks
bP78+ZIFMHv2bNVhAQAAAAAAAJuWkJCwc+fOHj16SF4DmYzAwMADBw6oHhAs
yWAwlC9fXubdL126tOqwAAAAAAAAgH1ITEzctGlTo0aN3N3dTe7H+vr6btu2
TfVQYEn79u2TfPePHj2qOiwAAAAAAABgT65du9alSxcvLy/T+rHe3t70Yx1M
jRo1ZN76bt26qU4KAAAAAAAA2J9bt2517NjRzc3NhH6sr68v+xU4ku3bt8u8
79mzZzcYDKrDAgAAAAAAAHbp+PHjlStXNqEfGxgYyPO8HMk777wj877ThAcA
AAAAAABMZjAYZs2aFRAQoLUfmytXrsjISNXxYRlTp06VedP79u2rOikAAAAA
AABg327cuFGhQgWt/dj33nvv6dOnqrPDAqKiolKlSmX0HS9btqzqpAAAAAAA
AIDdi4+P79mzp9Z+bJcuXVQHh2U0aNDA6Nvt6ekZGxurOikAAAAAAADgCGbN
muXp6ampH/vbb7+pTg0LEG+9zNu9fft21UkBAAAAAAAAB/Hnn3/6+vrKN2PF
P758+bLq1DDXzZs3Zd7uUaNGqU4KAAAAAAAAOI6DBw8GBgbK92OrVatmMBhU
p4a5QkJCjL7X7dq1Ux0TAAAAAAAAcCiHDx/28/OT78dOmzZNdWSYq3Xr1kbf
6DJlyqiOCQAAAAAAADiaPXv2pEqVSrIZ6+fnFxERoToyzDJy5EiZN1p1TAAA
AAAAAMABrVixwtXVVbIf27p1a9V5YZZVq1bJvNHR0dGqkwIAAAAAAAAOqH//
/pLNWFdX14MHD6rOC9OdOHFC5o3meW0AAAAAAACAHgwGQ8OGDSX7sRUqVFCd
F6a7c+eOzLu8b98+1UkBAAAAAAAAx3Tnzp1MmTJJ9mN37NihOi9MlJiY6O7u
bvQt3rBhg+qkAAAAAAAAgMNasWKFZDO2cuXKqsPCdD4+Pkbf4rVr16qOCQAA
AAAAADiyFi1aSPZj2TnWfqVJk8bo+/vHH3+ojgkAAAAAAAA4sps3b6ZOnVqm
Gfvxxx+rDgsTyTRjV65cqTomAAAAAAAA4OCGDRsm04xNmTJlWFiY6rDQLDEx
0dXV1ej7u2nTJtVJAQAAAAAAAAf3+PHjrFmzyvRjf/jhB9VhodmDBw9k3twD
Bw6oTgoAAAAAAAA4vp9++kmmX1egQAHVSaHZ2bNnZd5c8c9UJwUAAAAAAAAc
X0xMTEBAANdPOqT169fLvLP3799XnRQAAAAAAABwCt98841My65v376qk0Kb
SZMmGX1b/f39VccEAAAAAAAAnMWVK1dkHvPETgV2p3379kbf1mLFiqmOCQAA
AAAAADiRqlWrylwce/78edVJoUGxYsWMvqdNmjRRHRMAAAAAAABwIrNnz5Zp
xk6dOlV1Ush69OiRh4eH0fd08ODBqpMCAAAAAAAATuTBgwcpU6Y02rj78MMP
VSeFrOXLl8s02NevX686KQAAAAAAAOBcZHYqyJw5s+qYkNWpUyeZZmx4eLjq
pAAAAAAAAIBzGT58uEzv7tatW6qTwriEhISMGTMafTdz586tOikAAAAAAADg
dPbv3y/TjF29erXqpDBu06ZNMu9m165dVScFAAAAAAAAnE5cXJyXl5fR9t2w
YcNUJ4Vxbdq0kWnGrlq1SnVSAAAAAAAAwBkVL17caPuuXbt2qmPCiDt37sj0
1b29vaOiolSHBQAAAAAAAJxRu3btjHbwqlSpojomjBg2bJjMZbFNmjRRnRQA
AAAAAABwUjJNvJw5c6qOieRERUWlT59ephm7dOlS1WEBAAAAAAAAJ/Xrr78a
7eB5e3urjonkDB8+XKYT6+fn9/jxY9VhAQAAAAAAACe1Y8cOmT5eTEyM6qR4
vYiICD8/P5k3sUePHqrDAgAAAAAAAM7r1KlTMn28a9euqU6K12vZsqXMO+jm
5nblyhXVYQEAAAAAAADndevWLZlW3unTp1UnxWts2rTJxcVF5h2sU6eO6rAA
AAAAAACAU7t9+7ZMK+/kyZOqk+JlkZGRmTJlknn7XFxcDh48qDovAAAAAAAA
4NQiIyNlunnHjx9XnRT/YjAYmjRpIvPeCTVr1lSdFwAAAAAAAHB24eHhMt28
EydOqE6Kfxk1apRkJ9bFxWXPnj2q8wIAAAAAAADO7sKFCzINvcuXL6tOiv9Z
u3atu7u7ZDO2ZcuWqvMCAAAAAAAA+Pvw4cMyDb3IyEjVSfFfe/fu9fHxkezE
+vr63rp1S3VkAAAAAAAAAH+vWbPGaEPPxcXl6dOnqpPimYMHDwYEBEh2YoUf
f/xRdWQAAAAAAAAAz0ydOtVoQy8wMFB1TDyzbds2X19f+U5shQoVEhMTVacG
AAAAAAAA8Ezv3r2N9vSKFi2qOib+XrRokZeXl3wnNk2aNJcuXVKdGgAAAAAA
AMB/1alTx2hbr27duqpjOjWDwTB48GAXFxf5Tqwwa9Ys1cEBAAAAAAAA/E/2
7NmNtvW+/PJL1TGdV3h4eI0aNTS1YYWOHTuqDg4AAAAAAADgf27evCnT2Zs5
c6bqpE7q119/DQoK0tqJLVu2LA9cAwAAAAAAAGzKokWLZJp7Bw4cUJ3U6Zw+
ffr999/X2oYVcubMGRYWpjo+AAAAAAAAgH/p0KGD0eaep6fn48ePVSd1Ihcv
XmzdurWbm5sJndigoKBz586pHgEAAAAAAACAfzEYDJkzZzba3ytXrpzqpE5B
vB1bt25t2LChaW1YwdfX9+DBg6rHAQAAAAAAAOBlBw4ckGnx9e7dW3VSR5aY
mLh///6vv/46ODjYtB5sEj8/v71796oeDQAAAAAAAIDX6NGjh0yXb+3ataqT
OprY2Ni9e/f+/PPPzZs3DwwMNKcHm8Tf3599fQEAAAAAAADbFBcXlyFDBqNd
Ph8fHzaMfdGDBw8OHDiwcOHCYcOGde/e/aOPPqpSpUrxF5QsWbJatWoffPBB
69atO/yb+Mfly5fPnj27u7u7+Q3Y54KDg48dO6Z6YgAAAAAAAAC83rJly2Qa
fQ0bNlSdVLGLFy/Onz//66+/rlatWlBQkAWbqBZRtmzZ8PBw1ZMEAAAAAAAA
4I3Kly8v0+ubMWOG6qQKxMXFbdiwoXv37nny5NG7m2qO//znP0+ePFE9WwAA
AAAAAADeaN++fTK9Pm9v7wcPHqgOaz1xcXFr165t27ZtunTp9O6jmil9+vQr
V65UPWEAAAAAAAAAjGjRooVMx0/8M9VJreTy5cv9+vXLlCmT3k1Ui2jUqFFY
WJjqOQMAAAAAAABgxPXr1z08PGSafhs2bFAdVne7d++uV6+eq6ur3h1Ui8ia
NeuKFStUzxkAAAAAAAAAKX369JHp++XJkycxMVF1WB39+eefVapU0bt9aik+
Pj79+vV79OiR6mkDAAAAAAAAICU2NlZyQ9Sff/5ZdVi9HD58uEaNGnq3Ty3F
09OzS5cu4eHhqqcNAAAAAAAAgAaLFy+WaQAGBATExMSoDmt5t27datmypb1s
SpApU6aBAwfShgUAAAAAAADsUcOGDWXagN98843qpBaWmJg4efJkPz8/vTuo
5kuZMmW9evUWLVr09OlT1dMGAAAAAAAAwBT379/39PQ02gz08PC4fv266rCW
dPny5fLly1uhj2qOtGnTNmjQYOrUqXfv3lU9YQAAAAAAAADMMnPmTJmuYPPm
zVUntaTFixenTZtW71aqCdzd3QsWLChme/jw4bt3746Pj1c9VQAAAAAAAAAs
o0mTJjJNwh07dqhOahlPnjxp3769Hn1Ub2/vQoUK1a9fv3Xr1t27dx84cODw
F/Tu3btbt24dOnRo1apV0//Xpk0b8f98/fXXEydOXL16dWhoqIineoYAAAAA
AAAAWF5CQoK/v7/RNmNwcLDBYFAd1gKuXbtWsmRJS3VfPTw8Klas+M033/z+
++9Xr15VPTgAAAAAAAAAtmvv3r0yXUfHeHTXzp0706dPb34PNl26dK1bt166
dOnDhw9VjwkAAAAAAACAfRgyZIhM+/HIkSOqk5pr9erVqVKlMqcH6+np2aJF
i40bN7KPKwAAAAAAAACt6tevb7QJmSFDBnvfo2D+/PkeHh4mt2HFDAwdOjQi
IkL1OAAAAAAAAADYq2zZshltRX788ceqY5pl9uzZrq6uprVhs2bNOnny5MeP
H6seBAAAAAAAAAA7FhkZKdOQnDFjhuqkpps3b56bm5sJbdhUqVINGDAgJiZG
9QgAAAAAAAAA2L0tW7bItCUPHz6sOqmJlixZYlontl69eleuXFEdHwAAAAAA
AICDmD59utG2pIeHx5MnT1QnNcWOHTu8vLy0tmGDgoKWLVumOjsAAAAAAAAA
h/Ldd98ZbU4WKlRIdUxTnDp1Kl26dFo7sXXq1AkPD1edHQAAAAAAAICjadu2
rdH+ZN26dVXH1Oz+/fu5cuXS1IZ1dXUdMWKEwWBQnR0AAAAAAACAA6pevbrR
LmWnTp1Ux9TGYDDUr19fUyfW19d39erVqoMDAAAAAAAAcFilS5c22qgcMmSI
6pjaDB06VFMnNmvWrMePH1edGgAAAAAAAIAjK1KkiNFe5U8//aQ6pgb79u1z
d3eX78QWLFjw+vXrqlMDAAAAAAAAcHAyG6tOnz5ddUxZjx49ypkzp3wntnjx
4vfv31edGgAAAAAAAIDjy5Ytm9GO5dy5c1XHlPXFF1/Id2Lz5MkTFhamOjIA
AAAAAAAApxASEmK0afnLL7+ojinlzz//dHFxkezEZsuW7caNG6ojAwAAAAAA
AHAWhQoVMtq3nDhxouqYxsXHxxctWlSyE5sqVar9+/erjgwAAAAAAADAiZQo
UcJo63LEiBGqYxo3btw4yU6ssGDBAtV5AQAAAAAAADiXSpUqGW1dduvWTXVM
I+7fvx8QECDZibX94QAAAABwEnFxcT/++GPr1q2bNWv2ga1q2rRpu3btevTo
cebMGdUTBgCAffv444+Ndi/Fl6/qmEZ89dVXkp3Y0qVLx8fHq84LAADsCa0S
APoZOHCg5FrGFnz77beqJwwAAPvWu3dvo1+4JUuWVB0zOTdv3vT29pY5cxD/
LDQ0VHVeAABgZ2iVANBJYmJitmzZVB82NGDDNwAAzDRhwgSjX7g+Pj7iJEF1
0jf6+uuvJc8cRo4cqTosAACwM7RKAOhn//79qo8ZGmTNmjUiIkL1nAEAYN/W
rFkj87V79uxZ1Ulf7/79+2nSpJEZQqFCheLi4lTnBQAAdoZWCQD9fPvttyZ8
0tOnT1+rVq0+ffqMHj162rRpixcvXr9+/e7du0NDQy9dunTZJJMnT07+Rf38
/E6ePKl6wgAAsHvXrl2T+br/9ddfVSd9vaFDh8rkd3Fx2bFjh+qwAADA/tAq
AaCfIkWKSB5VSpYs2a9fv+XLl4sVnMFgsGyMAwcO+Pj4JPPqnp6erKcAALCU
gIAAo1/97du3Vx3zNeLj47NkySJz6tKsWTPVYQEAgF2iVQJAJ5cvXzZ6YEmf
Pv2AAQMuXLigXwzxx8WrJJPBxcVl2bJl+gUAAMDZVKpUyeg5QK5cuVTHfI1V
q1YZTS6kTJny4sWLqsMCAAD7Q6sEgH5++umnZD7XAQEBEyZMiI2N1TVDRERE
SEhI8ke5SZMm6ZoBAABnI/kArEuXLqlO+rJGjRrJJG/VqpXqpAAAwC7RKgGg
n6pVq77pQ92hQ4e7d+/qHSAqKqpEiRLJH1769u2rdwwAAJzNhg0bkv/+TTJ8
+HDVSf9FnJx4eHgYje3q6nrmzBnVYQEAgF2iVQJAJ/fv33d3d3/1E+3r67t0
6VIrBIiLi3v//feTP7y0bt3a4puuAAAAcZKfMmVKo13NUqVKqU76L3PnzjWa
Wahdu7bqpAAAwC7RKgGgn19//fXVT3SmTJms8xg+cdwQR4/kDy/i+COOQlYI
AwCAE6pQoYLRrqaLi8vp06dVJ/2fBg0aGM0srFy5UnVSAABgl2iVANBPixYt
XvpEZ82a1Wpbw33zzTfJH15KlCgRFRVlnTAAADihMWPGyDQ2u3fvrjrpf8XG
xnp7exsNnCVLlvj4eNVhAQCAXaJVAkAncXFxadOmffET7evre+LECeu8+sSJ
E5M/vISEhERERFgnDAAAzunq1asuLi5Ge5v+/v4xMTGqwz4juc9tr169VCcF
AAB2iVYJAP1s3rz5pQ/1ihUrrPPSy5YtS37pFxQUdOHCBeuEAQDAmZUtW1am
vTly5EjVSZ/56quvZNIePHhQdVIAAGCXaJUA0E/Xrl1f/FC3bNnSOq+7Y8cO
T0/PZA4vPj4+Bw4csE4YAACc3E8//STT3syYMWNsbKzqsH8XK1bMaNTg4GCe
ZwEAAExDqwSATsQiJUeOHM8/1EFBQZGRkVZ43ZMnT/r5+SVzeHF3d1+3bp0V
kgAAgL//eV6wOLc32uEURo8erTZqTEzMax9t/JKOHTuqzQkAAOwUrRIA+jl+
/PiLn+tly5ZZ4UWvX7+eNWvW5BdQc+bMsUISAADwXMeOHY12OIXUqVPfvHlT
Yc4dO3bI5Fy+fLnCkAAAwH7RKgGgn8GDBz//UFeuXNkKr3jv3r2CBQsmf3j5
4YcfrJAEAAC86PDhwzJNTuHTTz9VmHPcuHFGE7q4uFjnChYAAOB4aJUA0E/J
kiWff643bdqk98s9fvz4vffeS/7w8sUXX7DDm07i4uJCQ0N37tz5xx9/zJs3
b8KECcOHDx8zZsyMGTOWL1++detWsQx/+PCh6piO4/bt2wcPHhSfrCVLlkyb
Nm3kyJFiwidNmrRw4cK1a9fu3r37/PnziYmJqmM6iKTy/uuvv14t72XLliWV
94MHD1THdBx37tx5Xt7Tp09/Xt4LFixIKu9z585R3pYSHx9/6tQpUd6rV69+
tby3bNliwfKuUaOG0T6n4OrqKj5WFnlFE7Rt29Zowly5cpn8918q71GjRj0v
7zVr1lDelvViec+fPz+pvEePHv28vA8dOnT//n3VMR1HZGSkKO/Nmze/qbzP
nj2bkJCgOqaDEOV9+vTp5+U9ceLEpPL+5ZdfKG893L17N6m8ly5d+ry8xbQn
lfeuXbsob8ijVQJAJzdv3nz+uRaHGr0/1+KLr0mTJskfXj744AO+Hy3oyZMn
4mxEnPJ98sknRYsWTZkypdHVq5AzZ84GDRr0799fnKVHRESoHoQ9uXjxojjT
7tWrV40aNTJlyiQz2z4+PqVKlerQoYM4URQrIFb38p4+fSpWMUnl/c4772gq
72+//VaUd3h4uOpB2JPLly+LtYwo75o1a8qX97vvvtu+fXtR3mIFRHnLE+W9
devWMWPGtG7dulixYsk/xOG5HDly1K9fX5T3b7/9FhYWZtpL7927V+a1hCxZ
sty7d8+yA5dUvnx5o/E++ugj+T945coVUd69e/d+//33M2fOLDP8VKlSJZX3
hAkT/vrrL85e5MXFxf35559jx45t06aNfHkHBwfXq1evX79+orxv3bqlehD2
RJT3woULRXnXqlVLfGwly1ssDT777LPx48fv3LmT8pYnynvbtm0//vhj27Zt
ixcv7uXlJTPh2bNnr1u3bt++fRcvXqx2Exi7c+3atV9//bVPnz61a9c2enN3
Em9v7xIlSlDeSB6tEgD6mTp16vOP9u+//67ra4nD1xdffJH84aVChQqPHz/W
NYaTePTo0Zw5c8RJneQZYPIKFCgwYMCA8+fPqx6W7RIncmKNIybK/Nn29/dv
1arVqlWrnj59qnpYNup5eYtzacrbCkJDQ8UUUd7WERUVZfHyPnfunNYYlStX
lnyJNm3a6DEPRsn8HDB8+HCjf8eC5e3n50d5J0+P8j579qzqYdmuU6dOWby8
nzx5onpYNio6OjqpvFOlSkV5W8Hp06cpb+iKVgkA/dSpUyfpo50nTx69L1j6
4Ycfkj+8iC9TVRfYOJKDBw+K04m0adOaeVryKjc3t0qVKi1YsCA+Pl71KG1F
TEzM+PHjixUrZvHZFjJmzNilS5eLFy+qHqUNOXz48CeffKJHebu6ulasWHHe
vHmU93OxsbETJ04sUaKExWdbyJAhgzjnvHDhgupR2pCjR4+2adMm+YfnmkaU
93vvvTd37ty4uDjJMLt27XJxcZH8+9OnT9d1Zl4VHR0tE2/p0qVv+guivCdN
mvTi7YcWFBQU9Pnnn5vQA3dgx44da9eunb+/v8VnW5S3WJ/Onj1bvrwdnlit
T548+d1335X/FMtLnz59p06daBK+6MSJE5999lm6dOksPtuivMuVKzdz5kx+
4nnuyZMnU6dOLVWqlB7lHRgY2LFjxzNnzqgeJWwCrRIAOomKinp+X9iwYcN0
fa05c+Ykf3jJkiXLtWvXdM3g2AwGw6pVq8QJm/nnIUZlyJBhwIABTr735s2b
N7t27ZomTRq9Z1ucatatW3fPnj2qR6wS5W1lt27dEuXt6+ur92wnlffu3btV
j1gla5Z3UFCQKG/JzQlbtWol+We9vLwOHDig90S96MKFCzLBjh49+up/a+Xy
3rVrlzVnxtbYbHk7qrCwMOuUt1CtWrW//vpL9YgVs1p5p0+fXpS3k7diIiMj
xSQEBgZaYcLF22qFDUJhy2iVANDP8uXLn3/Ar169qt8LrV+/3t3dPZnDS9q0
aU+cOKFfAIe3YsWKd9991/wTD00yZMgwfPjwmJgY1aO3tvDw8C+//DJ16tTW
nG2xqK9Tp87evXtVj14BsdIpVaqUNWc7xT/lLc67oqOjVY/e2m7fvv3VV19Z
4VeGF4nyrlWrlnO2ZNesWVO2bFlrznaKf3pWQ4cOFauM5LPdvHlTvhLER8aa
1zlL7mr7UuPizp07vXr1sk6f6kU1a9Z0zp7V2rVrrdOnelH69OkHDRr06NEj
1aO3tsjIyN69e1u/vGvUqLFjxw7Vo1dgw4YNFSpUsPJsBwYGDhw40AmftHv3
7t2+ffvqcedI8qpVq7Z9+3bVo4catEoA6KdNmzZJH/CKFSvq9yoHDhzw8fFJ
5vDi6enJ15zJdu/erdNdlpICAgLGjRvnJBuJx8bGDhgwwCJbgZmsbt26zrNx
AeVtTY8fP7aF8naejQv27t1r/R/RXpQuXTqj5T1mzBj5PxgSEmLyI8O0+uOP
P4zm8fDweP6sjaTyTv5sRG9iUR8aGmqd+VHuyJEj4txS4WwnlbeTbDtDeVvZ
sWPHKlWqpHC2/f39nae8nzx5YgvlffLkSdUzAWujVQJAPzlz5kz6jOu325tY
VgcFBSVzeHFxcVmyZIlOr+7YxAr6+++/T/53NKupWbOm1dbgqojTsMKFC6ue
6WfSpEkze/Zs1fOhL1HegwYNspHyrl69usM/tvvUqVNFixZVPdPPpE6deubM
marnQ1+JiYnDhg3z8PBQPdnPVK1aNZnHdotPoqYLd/Pnz2+d74K5c+caDZMx
Y8akf3z69GmddvbWSiy4rL+/rpWJ8h4+fLiNlHelSpWuX7+uekr0dfbs2eLF
i6ue6WdSpUo1depU1fOhL4PBMGrUqJQpU6qe7GcqVqzo8Lctnz9/Xu2vls95
e3tPnjxZ9XzAqmiVANBJTExM0mdcnDvptL9WRERErly5kv9qmzBhgh4v7fCu
Xr1q/Vv/kpc+ffo1a9aonhi9TJo0ySKPfrag5s2bO+p9amJxYf1b/5IXGBj4
xx9/qJ4YvYjls9oLYl/VtGlTR92298aNG2ovqXpVQEDAypUr3xT4zJkzmo5+
+fLlS6a7aykzZswwmiQkJET8S7GGsrXybty4saNu/Cje+ipVqqie4H9Jly7d
smXLVE+MXsQHQe0Vg69q2LDh3bt3VU+MLsLCwqpXr656gv/F39/fgRs1c+bM
sfKmSUbVr18/MjJS9cTAGmiVANBV586dxaJp/vz5evzxqKgoo8/g7tOnjx4v
7fCWL19u/T3BJHXo0MHBHmcsvn/r1aunel5fL1u2bPv27VM9Qxb2+++/23J5
O9jjjB88eNCgQQPV8/p6orwd77l169evDwgIUD21r5dMeY8bN07TnwoODtb7
js6pU6cajZE7d+7mzZubOh/6ypo1q+NtkrxhwwZ7LG87FR0d3aJFC9Xz+npZ
smRxvOfWbdy40TrPjTJBq1atYmNjVc+QJcXExLRs2VL1vL6eKG/n3APcCdEq
AWCP4uLiatWqlfzh5ZNPPnm+mRvkjR8/3s3NzXLnFJYn3nqjz4WxF7du3Xr7
7bdVz2hyfHx8krmkze5MnDjRxsu7Zs2aDlPe4eHhNnLv9pukSpVq+fLlqufJ
YqZMmWIjO2+8SfXq1V/72CPxZd2sWTNNf8rPz2/z5s36TeakSZOMZrC12xle
IuI50iVt06dPt/Hyrly5ssNcb3/79m21G6ob5eXltWjRItXzZDGzZs2ykZ03
3qRixYo6XbxnfZGRkaVLl1Y9o8kR5b1w4ULV8wQ7RqsEgE7EceP5ftdvUrNm
TQe7ftIKxMT27t3bYmcSeipUqNCNGzdUT5i5zpw5kz17dtVzaZyLi8vYsWNV
z5YF2Et5FyxY0AHK+9y5c8HBwarn0jhR3qNHj1Y9WxZgL+VdoECB1+6xGRUV
lT9/fk1/ys3NbeDAgTo9/27KlCk6zYA1ifIeOXKkHvNjZfZS3qKGHWCPzfPn
zz/fydCWifIePny46tmyAHsp73z58un6wHfruHjx4ltvvaV6Lo0T5T1gwADV
swW7RKsEgH769u2b/OGlePHiDnNpmTVZ8GxQnEL4+/sHBwcXKlRIvB3vvPOO
OPMJCAiw4CMJChYseOfOHdVzZroLFy5kyZLFUrPh7e0dFBQUEhJS/B9iPZg1
a9a0adNa6u+LN3TSpEmq58wsRo8bmmYjqbxFEepU3uIdvH37tuo5M93ly5ez
ZctmqdmwQnn/9NNPqufMLGLJZqnZSPHPJoHZs2dPKu9ixYqJ8g4MDPT09LTU
38+bN29ERMSrozh9+rR4aa1/rXLlyleuXLH4lM6bN89S402e3uUt2PuvaYMG
DbLgbOhd3rlz57br541eu3YtR44clpoNLy+v9OnTi0lOKu8CBQqIrwY/Pz9L
/X1h1KhRqufMLD/88IMFZ0Pv8hZHKits2a2fGzduiCFYajasUN6O8XMDrIxW
CQCdGL1zUHwnhoeHq45pfwYOHGjmCYM4/WjatOnIkSO3bNnypluZ4uLiDh06
NG3atP/85z9iwWLmK5YoUcJOnzBlkcWO+Cbt3r37vHnzTp06lZiY+NoXEkvC
1atXize3du3a4qTRnJdzdXUVr2XlibKUIUOGmDnbadOmbdKkyYgRIzZv3pxM
eR8+fHj69OkdO3bMkyePma8ollF2eserWOyYf9nJO++8061bt7lz54aGhr7p
0kdxqF+zZo0o7zp16ph5w7iLi8vs2bOtPFGWIsrSzNn29fVt3LixWPRt2rTp
TQ9+EuV95MiRpPLOmzevma9YtGjR136Otm/fbsKRKk2aND///LNl77Zbvny5
mWNMhhh+165d58yZk0x5R0REiPIeNGhQ3bp1zS/vX375xYKTY02jR482c7aT
yvuHH35Iprzj4+OPHj0qZqlTp0758uUz8xULFy5sp0+YEucM5p+bvf3220nl
ffLkyWTKe+3atYMHD65Xr56Zz78T5S3OKq08UZaidbvsV4mjX6NGjYYNG7Zx
48Y3VV1Sec+YMePzzz/XegPCqwoVKmSnT5gSVWf+p7tIkSJdunQRJwwnTpx4
U3nfvn173bp1orzr169vfnlPnjzZyhMFu0arBIBOli1bJr6Vkjm8pE+f/vz5
86pj2h+ZzfHeJCAgoEOHDuvXrzfh0RXHjx8fMGBAgQIFTH71atWqiZNMPeZE
P2IxaE4ro1y5cmPHjjXhSrCoqKjFixd/+OGHJq/r3d3dxdm+HnOiK3NuN06X
Ll379u3FSbUJ5S1O1L///vuCBQua/OqVK1e2u3uIHjx4YM4nukyZMmPGjLl0
6ZLW142Ojv7tt9+aN29u8sJHlPfatWv1mBNdifW1ybPt7+//6aefrlmz5smT
J1pf9+TJkwMHDhSrcpNfvWLFiq8tb/E+urq6mvAHS5cuvXPnTktM6jPiWGfy
0JJJOHr06IsXL2oNI8p7yZIlLVq0MPm59m5ubn/88YelJsdqZs+enfxZXzL8
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
WposMTFR634sPXv2tFo8E7Ru3Vp+LKK8R48ebc144hOaM2dO+YS+vr7WPFnV
6ty5c15eXvLDKViwoAnPRDOZKG9xNJaPJ/To0cNq8Uzw2WefyY/FxcVl+PDh
1lxUim/zt956Sz5hmjRprl27ZrV4WsXFxYlV+as3SVWpUsWWz6nsGq0SADoR
Czqj/atGjRqJf6Y6qf0Rk1ayZEn5b//33nvPOhf5vGTo0KHyIVOmTGny7ah6
++OPPzQN5LfffrN+SLGezZMnj3zOli1bWj+kDLGaKF26tPxAypcvr2SbUHHO
L39fv6gKm3102vr16+Vn28PDQ8ll1WL9oulCx+bNm1s/pAxR3poeAlimTBnr
XOTzkpEjR8qXt6iKZDZWvXr1aqlSpeSHrJC7u/v8+fOtOc9Jbty4oal1/MEH
H1g/pAyxYNS0t7YoDCXbhP7444/y5S2q4tChQ9YPKWPLli3yA3Fzc5szZ471
Q968edPodV8vatiwofVDyhDlrem+mBIlSkRGRlo/5/jx4+W3rRBVYbNPBtyx
Y4em8p4xY4b1Q966datw4cLyVVGvXj3rh5SUzO/y4hvKXp43YUdolQDQiThj
6dq1a/KHF7Egtfg+9k5i5syZ8t/7lSpViomJURVVrOjlo1aoUMEGf/uLjo4O
Dg6WHIKHh8fvv/+uKqo4J8ydO7f8hG/cuFFV1GRMmjRJfghi4a/wJrsxY8bI
Ry1btmxiYqKqqG8iDg7y13W4u7svWbJEVdSwsLC8efPKT7h1bnzWatq0afJD
KFeunJLf0ZL8+OOP8lFLly6dTHnHxcX17t3bnEd6WYEo78WLF1tzhl8UERGR
P39++bSrVq1SFTUZM2bMkB9CmTJlFD5ub+LEifJ9nuLFi9vgcvjJkyfyv8C6
ubkp3J7o9u3bBQsWlK8NhedRyZg7d678EEqWLKnkd7QkkydPli/vYsWK2WB5
P336VP6QKMpbvDuqot65c0dTP3bp0qWqoiZjwYIFyccWX+KqMzoUWiUA9DNi
xIjkDy8FChTgsZImk7/KSPxL5ftBadrb1gZ3w/v6668lw4tTX4Vr+SRXr17N
nDmzZODcuXPb2l6mYWFh8o+pFYsd5b/Ua9rb1gZ3w5O/pVGUtzhXV5tW5hkH
z4WEhNjaSWxERIS/v79k/nfeeUdhJzaJpmdYT506Nfm/tnHjRk27qViTKG+F
a/kkN2/elN+OI0eOHAp/Zn2tO3fuyD++8+2331bYiU2iaW/bCRMmqE37qu+/
/14+v/KHv4gvd/ntOMQHQfmX+0vEmkX+wQGFChVS2IlNYnQh9iIrbz0kY8iQ
IfL5p02bpjZteHi4/HYc4ntQ+Zf7S+7du2f0AXDp0qWzwaa9/aJVAkAn8+bN
S/7wkiVLFlveM8fGxcXFST5XVHzd37p1S3XeZ7/9NWvWTCaw4O/vb1O1sXv3
bvm9eQcOHKg67zMHDhyQf+DRl19+qTrv/4hSqVevnmTyzJkz28LGiSKz/Iar
fn5+1twd0ah9+/bJ78377bffqs77zOHDh318fCQzd+vWTXXef2nYsKFk8owZ
M9rCkVCUt/wzo9OmTXv58uXk/+CDBw86dOggf8mW1SSz7a01HTt2TP6JMJ07
d1ad91/kd1YPCgqykSNhmzZtJDOL9+X8+fOq8/6POBLK783bq1cv1XmfOXHi
hK+vr2Tmjh07qs77L82bN5dMHhgYeOnSJdV5n/n0008lM6dOnfrcuXOq8/7P
0aNH5ffmtZFtb0NDQ8WXoGTm9u3bq877L5Jf9Da7m5zdoVUCQCcbN25Mvnkl
vqqS2VwORonFrMw3ppub286dO1WH/a+oqCj5m+kqVKgQHx+vOvIz9+7dk7+Q
o2bNmrazx8L06dMlY7u4uKxdu1Z13v8aN26cZGxR3tu2bVOd97+io6PltzMt
V65cXFyc6sjPiCNJSEiIZOyqVavazh4Ls2bNkowtyts6j7GWIb//hqur6+bN
m1Xn/a+YmBj57UzLlCkjU95btmzRtAOw3ipVqmQ75W10jfacKG/buZt7ypQp
krFFeW/YsEF13v96/PhxkSJFJJOXLFnyyZMnqiM/8+jRI/k9W9577z3buZ5t
4cKFkrFT2NLd3PL7b4hP5Zo1a1Tn/S9Rrm+//bZk8uLFi9tIeYtzKvkvnbJl
y9rIkkFYvHixZGxBydMlXmv27NmSmffu3as6rCOgVQJAJ4cOHUqdOnUyh5eU
KVPaTgvFThkMBpnfXvv376866b+I2pC/xPSLL75QnfdvcXZXvXp1ycCBgYG2
9qTRxo0bS4b39/c/e/as6rzP+jPyV2n27dtXdd5/OXLkiHz4Tp06qc777KkB
tWrVkgycLl06W7gI+UVNmzaVDO/n53f69GnVef/evn27+PqTzPz111+rzvsv
R48elQ//n//8R+ZvxsXFTZgwQRw5Jf+sftzc3K5fv673HGry0UcfSYb39fU9
efKk6rx/79y5U75CbOp2jL//uZ5N/hLTtm3bqs777CGA9evXlwwsThdt7fKq
Vq1aSYZPkyaNLXQkdu/eLX+VZpcuXVTn/ZdTp07Jh2/durXqvM/Ku1GjRvIV
YvR2DCuTv9herJfFd6vqvM/ukJKvEFs7FbRHtEoA6OTixYvJbzjj4uJiO78D
2jWjd/3nyZPHRn7gftFXX30l+XUvjB49WmFUg8Hw2Wefyae1wa1ub926JX/D
VO7cudXuaCEWXPJ7aebKlcvWtroVevfuLV8wastb6NSpk3xao3uBWp+mvYVF
wYh/rzBtaGio/F6aOXPmtLW9QP/WsrewMHLkSMk/e//+ffGX5Y9UerDBZ1vf
vn1bvmBy5Mihttt2+vRp+b00g4ODle9j/6oBAwbIF4zy/YiMPvPlRTa41W1k
ZKT8rzCiYNT+VnLu3Dmje2k+Z4N7gf6tcevvQYMGqU375ZdfyqcdO3as2rSv
unv3blBQkGT+7Nmzqz16nz9/PmPGjJJpixQpojCqY6BVAkAnYu1g9DHu48eP
Vx3TQRw/fjyZq1BcXV3//PNP1RlfQyzBxHm15Je+8OOPPyrJaTAYevToIZ+z
QoUKtrNBwYvkb4sW8uXLp6ofe/bsWfmzQcF2bnF9UUxMjPymFuJ0S2GHs1ev
XvKzXbp0adu5g/tFkydPlh9F4cKF79y5oySnWOzIP1NPsJ19FV4UGxv71ltv
SQ5BlPeUKVPk//jDhw9HjhyZKVMm+VmyFDc3N9u5xfVF8rdFp/jn5wZVK3qx
tNT0ULaVK1cqyZm8J0+eyO+kJAwdOlRVVE1PRC1evLjtbFDwIvmtZoT8+fOr
uvPo8uXL8s/US2FL+yq8SJS3/KYWwrhx41RF1fSzyNtvv22bR++5c+fKj0K8
Nap+LL569ar8WauwZMkSJTkdBq0SADqJjo5+9913kz+89O7dW3VMhzJt2rQ3
PQNl2LBhqtO90erVq+W/91Oo+I1enNq1bdtWPqGHh4ct3CX6WomJiaVLl5Yf
S0hIiPWfOrF37175q6qE5s2bWzmhvFWrVskPRHx+rb+iF+Xdvn17+ZDu7u62
cBvda4nyNvq98yKx5LF+eR84cED+qiqhcePGVk4oT9PRW5T34MGDNf39p0+f
Ll++vEGDBvI7fpjPBm9qSGIwGCpWrCg/kODgYOs/f+fQoUOafkdr2LChlRPK
27p1q6bnyvXp08fKP8ImJCR8/vnn8gnd3NwOHjxozYTyxNRVqFBBfizi5MT6
5S2++zT9jla7dm0rJ5S3efNm+YGk+Od5nVYub/GF3qVLF/mErq6ue/bssWZC
eVqP3jlz5jxz5oyVQx4/fjxLlizyIWvWrGnlhA6GVgkAncTFxYkzkOQPL61a
tbLNSwft2sqVK8U3+IvzLM4b582bpzqXEUb3WHhJmzZtrHZP+p07dypXrqwp
no08g/tNjh07pqmzERQUtH37dqvFmz9/vre3t3w8Pz8/tfebG9WwYUNN9fPJ
J59YrbwjIyOrVaumKZ6t7e74kkOHDrm5uckPJ3369Na8a2DRokWpUqWSj5cm
TRpb27z0JfI7USf5+OOPY2Njtb7K7du3J06cWL16dfltSE1jy7/s/P3P7f/y
e5kKAQEB1nzu22+//ebj4yMfL3Xq1La2eelLNP0Om1Q/VttR5N69e++//76m
eF27drVONtOcOHFC08lJunTpNm7caLV4y5YtEwdk+XjiUG/9H/s0kd+JOok4
V7fajiIPHjyoU6eOpniSm5OrEhoaqun7y9/ff/369VaLt2LFCk3lLU7UL1y4
YLV4jodWCQCdiONGu3btkj+81KhR4+nTp6qTOqb4+Pjt27dP/YdYhdngPrGv
unPnjqZraYRixYpZ4erTLVu2aLofLcU/GyjZ4OalLxkyZIimQYn1kfhP9L75
KyoqSpxLawomLFiwQNdU5gsLC5PfLixJ0aJFxbJU72Dbtm3TdD+aUKBAARvc
vPQl3333naZBubu7Dxo0SO/yFvPWuXNnTRfapbDhqzSfCw8P13Shb4p/7iQ1
+RE8YoX+66+/inOM/Pnza51Mo/Lly2eDm5e+ZPTo0ZoGJcp7wIABYt2naypR
3l26dNH6jsyYMUPXVOa7f/++1nOAQoUKHTlyRO9gO3fulN8kJEnevHltv7yH
DRumaVBubm79+/fXu7xjY2O7d++utbx//vlnXVOZLzIyUtOVkELBggUPHz6s
d7Bdu3blypVLU7CQkBAb3Jv3JSNGjNA0KFHe/fr103u9LNYsPXv21FreNrj1
tB2hVQJAP99++23yh5dixYrZ/jcmrGzt2rVazwS8vLyGDBmi01fVvXv3Onbs
qDWSt7d3aGioHnksKyEhoXz58pqGJrz77rv6rTHXrVundWmZ4p+LSHXKY1km
lLenp+egQYN0+jHlwYMHnTt3dnV11RRJfOKOHTumRx7Lio+PN6G8S5QocejQ
IZ0ibdy4UevSMoXNX6X5nPjwmlDeAwcONLO87969u3r1arG87dChQ9WqVXPk
yJH884iNRrJCD818iYmJVapU0To6cd514MABnSJt3rzZ6K53r2rWrJlOeSxr
27ZtWg+VKVOm/O6773T6Wfbhw4fdunUzIZJ+xzcLMq28ixYtum/fPp0ibd26
NV++fFojNWrUSKc8liVGp7WWPDw8xELPhBscZIjlYY8ePTTd3pIUSb8CsCBR
3tWrV9c0tBT//Hy5d+9enSKJ41v+/Pm1Rqpfvz5XbJqDVgkAnRh9fkrOnDlV
7boPG6fp0fPP5c2bd86cORa8LuL+/fvDhw/Xeiljin92RBRJLBVDb1evXtV6
PVuKfy6y+vTTTy27UduOHTvq1q2rNUmKfy5CtqNzlT59+pgwxty5c8+ePduC
5R0VFTVmzBitF6InmTZtmqVi6O3atWsmlLdYALZr1+7s2bMWTLJ///4GDRqY
MNtiffTgwQMLJtFV3759TRijKO9Zs2ZZsLyjo6NHjRplwtFb0PR8MbVu3ryp
9Xq2FP+Ud5s2bU6fPm3BJLt379a6DUsSUd7iq9aCSXQ1aNAgE8b41ltv/fLL
Lxb8vVh834mjt2lPtbP9qzSfu3Xrlgnl7erq+sknn5w6dcqCSQ4fPvzBBx+Y
cAV+rly57t69a8EkujKtvMVqbvr06Rb8vTgmJmb8+PEmvPUplD5fTKuwsDBN
zzdMIsq7VatWlr0f8MiRI02bNjWhvMWRLTIy0oJJnA2tEgA6+f3335P/gTUw
MFCP/fYjIiLEOdjXX39t+7eHIxmJiYnivFfrWUGS4ODgCRMmmNmau3DhQo8e
PTRtmvSi/v37W2oqrGPfvn2admd9TizqmzVrZuZ1VuIcfsmSJZqeJvYisSC1
8c0GXyLKu379+qYNNnv27D/99NPDhw/NCXD79u2BAwcGBASYlqFbt26Wmgrr
2LVrl6bdNZ8T32JihbJ//35zXl283Vu2bDHhGpgk4m06f/68pabCCsR4TWvK
CdmyZRNLaTPL+86dO4MGDRLnGKZl6NKli6WmwjoOHz5s2mXAorwbN25s5mNu
kh6sVq5cOdNmOygo6OLFi5aaCiswGAytWrUybbBZsmQZO3asmT+sXLlypVev
XmnTpjUtg41v9P0qcXZh2smJKO9GjRrt3r3bnFcXb/e2bdtq1apl2kYo4m2y
bE9Yb2K8H374oQkjTfFPeY8ZM8bMH1bu3r07bNgw035EE9q3b2+pqbCOQ4cO
ado6/jlR3g0aNBDnNua8uni7t2/fXrt2bdPK29fX12afUGwXaJUA0Mlff/3l
5eWVzOFFfPXodBfJ8ysqFy9erMffh9XExsaWLVvWhNODJKIC69WrN2vWLE3X
JIhlzqhRo0qUKGHy66aw213WxYJa6+1gLwoJCRErxL1798qPPS4ubu3atW3a
tPHz8zP5ddOkSWMXd1y+5NGjR8WLFzd51J6ennXr1p05c6amaxKuXbs2fvz4
ypUrm/NGi49VQkKCfjOjkwULFmi9AfNFb731ljhx3bNnj3x5x8fHb9q0qVOn
TpqeuP0ScRzbtm2brjOjh6ioKHOOoqK869SpM2PGDE3lff369QkTJphZ3uJ1
9d4xWA+rV6/W9LSjl+TMmbNnz55iXZ+YmCj5imKWNmzY0K5du3Tp0pn8uj4+
Pjb7xPNkPHnyxITb559LmTJlrVq1pk+ffvv2bfkXFeU9duzY0qVLm7M98gcf
fCD/FtuOJUuWmPOhzpEjx5dffikWJvJjF99xW7Zs+eKLL0y4cPE58UZb85li
liLOvcuUKWPOqE0o75s3b06aNKlatWru7u4mv3T16tX13jFYD+Lc25xRBwcH
9+jRY+fOnZrKe+vWrV26dMmWLZvJryve6HXr1uk6M46NVgkAnZw6dcrf3z+Z
w4s4p1qzZo0eLy1WB89v2rKLLYOQvPv377/99tsmnyokESuXkJCQxo0bf//9
9wsXLly/fv2BAwcuXrx47ty5vXv3rl27dt68eX369BFnj6bdEvWSunXr2uPZ
YJKZM2ea/xycNGnSlC1btmPHjpMnT16xYsWOHTtOnjwpJvz48ePbtm1btmzZ
uHHj2rZtW6xYMdMuVnyROJMRp5Sqp81EkZGRhQsXNnMGxPv11ltvNWrUaMCA
AUnlvX//fjHb58+fTyrv+fPni/KuXbu2Rcq7atWq9vtL+tSpU80v79SpU4uF
6n/+85/XlrdYVf3000/t2rUrXrx48qfZMjw8PFavXq162kx09+7dIkWKmDkD
MuX9zTff1KlTx5yeyXOVK1fWafNDKzDz54YkorxLly4tyvvnn3/+/fffX1ve
n376qUXKW6zlrfl8cMt69OjRu+++a+YMpPinDd6gQYPvvvtOvH1J5X3hwgVR
3uIMdt26daK8+/btK8rbnJ7Jc+LobRdPcX2tOXPmmF/ePj4+pUqV6tChw6RJ
k0R5b9++Pam8T5w4kVTe48eP/+yzz0qUKGHatbgvcnd3F2c7qqfNRA8ePDDn
x+Lnksq7f//+byrvfv36iXNmrc/Fe61y5crZ/jPp3kQsQyxY3hMnTnypvMX/
FuU9YcIES5W3WMgvWbJE9bTZMVolAHRy48YNo9+q+j0SWizNkl5CHOLs8eIW
vCo8PLxgwYJmnjZYTbVq1ex3LZ9EnK1Z/LnkOvHy8lq5cqXqCTOLKG/z+7FW
U6lSJftd7CQRa3DzlzzW4enpab9r+SQR/9fevcdIVd1xABdxlxWNiLwULIJU
YGMLitTHgtKX1lIwmmhbETBFKCVt0NIXPohpBGmElRUTNVjTYKmPpi2IxMoi
rDa0tYksBawERRGBohZt1QVhFdsTJ9mSZZ2V2bn3zM58Pn/x3z3z4zvnnvPb
O/e88Ubb+7GpGTVq1HvvvRe7Zm2yaNGi9hLv8vLy9r6X37Nnz7Bhw2IX8tMa
OXJkO3qteot++ctftuX52DSVlZU99NBDsQvWJiHeeenHpqOqqqodvVa9RWFr
3F7ifcwxxyxZsiR2wdoxrRIgIeFW2GpjYfbs2ckN4Jprrslc5dprr03uKqQs
bJBzft1imiZPntwef759uKVLl7b9qaek9ejRozj+pBvifckll8QuZ+smTZpU
HMu2ZcuWtf2xkKR17949uROT09TQ0PC1r30tdjlbN27cuDwerhTR8uXLCz/e
3bp1a49vJzhciPfXv/712OVs3be//e3iiPfjjz+e2ws209SlS5e6urrYpcqD
vXv3jh49OnY5W/fNb36z/T7yfahVq1blfFBFak444YT2+3u0QqBVAiQk3Aq/
+MUvZp9epk2blty7NMOq+LjjjstcqL0/L0czYU0YllttXkQkpUOHDjNnzmyP
r2L7JCtXrsz5dKcUDBgwYOPGjbGLlDch3ldddVXsomYzY8aM4vhDQ0ZtbW1b
XnSZtL59+65fvz52kfJm3759hTx7BzfccEMxxbuuri7n429S0K9fv/r6+thF
ypuw9J04cWLsomZz/fXXF1O8n3766ZzP5ktBnz592njgY0EJ8R4/fnzsomYT
9pXF8WfijD/96U89evSIXdRP1Lt37+J4CiIWrRIgIQcPHmx1t3X55ZcnuiB8
6KGHMhcK80z7fashWSxYsKAtZ5QkpEuXLkuXLo1dm/x79dVX23iQWUIuu+yy
Nh7XW4DC0mvOnDkF+BPjioqKBx98MHZ58m/r1q2f+9znYle3BaNGjTqic0/a
hRDvuXPnFma8Fy9eHLs8+bdjx462HMGTnEsvvfSIDmVrL+699962vwI9744/
/viHH344dm3yb9u2bWeddVbs6ragqqpq9+7dscuTf9XV1W05YSoh5eXlixYt
il2b/Nu+fXthvv8k3FN27doVuzztmFYJkJCwz7r++uuzTy8jRoxI+l2aY8aM
yVwrzHWJXoiInn322QEDBrR9UZEvYXHyyiuvxK5KUvbv3z9jxozCeYVsRUVF
TU1Ncn8yjm7NmjWnnXZa7DL/X9jwFtMTyM00NDRMmzatcOJdVlb285//vJge
8mnm6aef7tevX+wy/9/QoUM3bNgQuypJaWxsnDlzZuE0wMvLy++4445i+v1I
M/X19YMHD45d5v8bPnz4li1bYlclKWFDEfYdhTN7H3PMMTfffHNxvAuiRWvX
ri2otfeZZ565bt262FVJSoj3D3/4w8KZvTt27HjjjTcWcbxToFUCJCcssLNP
L5WVlW+99VaiY/jXv/7V9HfbRx55JNFrEde77747ZcqU6KuUioqK4u6cNFm5
cmX//v3jVjs455xzirhz0uSdd9757ne/Gz3enTp1mjVrVimsvUO8Tz/99LjV
Purjvvdzzz0XuxiJC/GeOnVqIcT7lltuKYV4r1mz5rOf/Wzcah/1cd+7iDsn
Tfbu3fuDH/wg+ik85eXlN910UynEe/Xq1WeccUbcagef//zni+MV39k1NDQU
QrzLysp+9rOflcJDfXV1dQMHDoxb7aM+7nv/5S9/iV2Mdk+rBEjIkiVLsk8v
vXv33r59e9LDqKmpyVwubLLa+4mxfBrPPffcyJEj277MyM0VV1zx8ssvx65B
esK6d86cOccff3yUavfs2XPRokVF/EjV4datW3fRRRdFqfZRH78I4qWXXopd
g/Ts379/7ty5sQ7O6N69+3333VdML3VsVX19/ahRo6JUOxg7dmxJxfvAgQNh
G3jCCSdEqXa3bt3uueeekor3hg0bvvzlL0epdjB69OgifiD2cCHe8+bN69Kl
S5Rqn3TSSXfffXcp/FG+ycaNG7/yla9EqfZRH7/nZPPmzbFrkJ7Gxsbq6uoT
TzwxSrW7du161113lVS8E6JVAiSktrY2+3uEwgIphV+5hnV+05N7YZ+V9OUo
HGvXrh0zZkxqP1UL96/p06eX1Eb+UO+99164lffp0yedageDBw9evHhxKTzh
06J169ZdddVVqcW7rKxswoQJmzZtiv2540g/3oMGDSrleNfX14e8pfacVVir
hMsV8Ws3ssvE+9RTT02n2sHAgQNDvIvjlPMcrF+/XrxT09DQEOL9mc98Jp1q
B2eccYZ4pxzvUvhtVIvEu13TKgESEnZS2Z+UKy8vr6urS2Ekv//975su+qtf
/SqFK1JQNm3aFNZpiZ4vEO6Vt956a1EezXCkDhw4EBZpSf946rzzzlu+fHlJ
PQ37SVKId+fOnadPn/7qq6/G/qzxZeI9aNCg5KodnHvuueKd8fzzz4d4J3oy
o3g3ycQ76VebfuELXxDvjK1bt4bsJXq2Vybe27Zti/1Z40sn3sOHDxfvjEy8
Kyoqkqv2scceGy5RxEczfHqNjY0h3pWVlclV+6iPXwgm3nmkVQIkJNwZe/Xq
lWV66dChw6OPPprOYKqqqjIX7dixY9JvXKFgvfjii7fddtuQIUPysiDJOPro
oy+88MKFCxe+/vrrsT9fYQm7nnBnv/rqq/P74+4ePXpMnTp19erVRXxKV25e
euml2bNnDx06NI/VDvEeMWJETU3NP//5z9ifr7CEeP/hD38YN25cfuPdvXv3
KVOmrFq1yk6nmbCpD/HO7wnpYRES1gYLFiwQ72bCpn7ZsmXXXHNNft9d0K1b
t8mTJ9fW1op3M2HBfPvtt+f3hPQQ7wsuuODOO+90vnkzId6PPfbY+PHj8/vu
gpNOOmnSpElPPvmkeDcT4j137ty8x/v888+vrq7euXNn7M9XWD744IPly5dP
mDAhiXg/8cQT4p1HWiVAQt58881W35l/1113pTOYZ599tumiX/3qV9O5KIVs
y5YtYV9/zjnn5Py01bHHHnvRRRctXLjQNqdV+/btW7p06bhx43r27JlbtYO+
fftOnTr1qaeeKqlXC+bmxRdfnDNnzvDhw3OOd0VFxYUXXlhTU2Ob06r3338/
07bKvqLO7tRTT50yZUptba13r7UqxPv2229vY7xHjhy5YMGCHTt2xP40hW7/
/v2PPfZY2NeffPLJbYn35MmTV65cKd6t2rp16y9+8Ytzzz23vLw853iPGDHi
zjvvfO2112J/mkIX4r18+fKJEye2Jd59+vSZNGnSH//4x8bGxtgfqNC9/PLL
Id7nnXdezvHu1KlTVVVVdXV1Cu/PbO9CvB9//PFrr732lFNOyTnevXv3Fu+E
aJUACWloaAgryezTy09/+tPUxnPZZZc1Xfeee+5J7boUvgMHDqxfv37x4sU/
+tGPwt1nyJAhffv2bfYsUNeuXfv37z9s2LCxY8fedNNNjz766ObNm7UEc7N7
9+6wJb/jjjvGjx8fZomBAwf27Nnz0GV52EiGdWNlZeUFF1wQ9u8LFy6sq6t7
++23Yw+8XQrx/vvf//7ggw/++Mc/vvjii4cOHXraaae1GO+zzz57zJgx4t1G
r7/+em1tbSbeYb/ZYrzDrj8T7+uuuy4ss0O8PYGQm7A3PKJ433jjjY888sgL
L7ygJZibN954I8R73rx5EyZMCPEeNGhQi/EePHhwJt41NTVr1qwR79yEeG/Y
sOHXv/71T37yk0suuSQT72aPup144omZeH/jG9+YOXNmiPc//vEP8c5NiPeq
Vavmz58/ceLETLx79erVYrzPP//8SZMmLViwYPXq1Xv27Ik98HYpxHvjxo1L
liwJm8Es8e7Xr1+I9+jRo0O8H3744eeff168c/Pmm28eHu9D344S/t0U7+98
5zvinTStEiAh4UYZloXZp5ewUU3tZw4rVqxoum6HDh38GpFPI+Tz7bff/ve/
/x17IKUiLEtCwd9///3YAykJmXhrcadm79694p0a8U6ZeKfpo48+Eu80ZeK9
b9++2AMpCeKdMvGOQqsESEi4jV533XXZp5eLL744tbOhw/2l6WTAYMSIEelc
FwAAAOC/WiVAkmbNmpV9ehk2bNi7776b2nhuueWWQ69eXV2d2qUBAAAAtEqA
hNx3333Zp5f+/fvv3r07tfFs3ry52Svit23bltrVAQAAgBKnVQIkZNmyZUcf
fXSW6aV79+5btmxJbTzvvPNOZWVls780pXZ1AAAAoMRplQAJ+fOf/1xRUZFl
euncufPf/va31MbzwQcfHHosYMbs2bNTGwAAAABQyrRKgIS88MILXbt2zTK9
dOzYccWKFamNJ0wvV1999eHDCONMbQwAAABAydIqARKya9euvn37Zpleggce
eCC18ezdu/fKK688fAyVlZWpjQEAAAAoWVolQEL+85//DBkyJPv0ctttt6U2
nldeeeWss85qcRg333xzasMAAAAASpNWCZCQ/fv3f+lLX8o+vXzve9/76KOP
UhjMhx9+WFNTc9xxx33SSOrr61MYBgAAAFCytEqAhBw8ePBb3/pW9unl8ssv
D1/8FEbyu9/9Lvtfnfr165fORAcAAACUJq0SICHh23rDDTdkn16qqqr27duX
6DB27tw5f/78wYMHZx9JMGPGjERHAgAAAJQyrRIgOfPmzcv+ja6srHzrrbeS
uHSYtZ555plbb7115MiRHTp0aHVuyVi7dm0SgwEAAAD4r1YJkJjf/OY32b/O
nTt3XrFixaZcbdy48a9//euTTz7529/+9v77758/f/6sWbOmT58+duzYAQMG
fPpZpcnJJ5988ODB2GUDAAAAipNWCZCQtWvXlpWVHel3PK5p06bFLhsAAABQ
nLRKgOSEb2vsCeOIPfXUU7HLBgAAABQnrRIgOWeffXbsCePInHLKKSkcUwgA
AACUJq0SIDnf//73e/XqVVFREXvmaF2nTp0GDhz4xBNPxK4ZAAAAULS0SgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACAwvRacdlRGnYWnV20JvZ/Uf7F/hqlJPakmIbtudqzZ09jY2Ps
2yAAAACkJ/YmPkGxezBpi91aiyl2o/RTiV2kmGJ/OdIWe/JLSc492EOFcn34
4Yex74QAAACQkrAXjr2hT1XsJk1ksXtyFKHYoY4s9pSWqrx0Xw+3Z8+e2HdC
AAAASEmLW+PYO/44Yjd1Clfsbh8piR20whV7coojodZri2LfCQEAACAlR7Rf
jt0bKAix20JFKHYPst2I/R9VhGJPJwUhof7qEYl9JwQAAICU5HdDHbupUIhi
d5ughMT+uhei/E7yCYl9JwQAAICU/A+hualS
     "], {{0, 903}, {1839, 0}}, {0, 255},
     
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageMargins->0.,
   ImageSize->{229.26666666666927`, Automatic},
   ImageSizeRaw->{1839, 903},
   PlotRange->{{0, 1839}, {0, 903}}]], "Input",ExpressionUUID->
  "6628d90e-1231-4418-9e06-fec9255418fa"],
 "+",
 Cell[BoxData[
  FormBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
qWo3duCBB06dOjW5kQAAAAAgooEDB8bvr8p32+EFF1xQssLIkSOTHrtU69at
e/bZZw877LCNT1H0w9RkqGGq43h88cUXe+yxx/ohW7ZsedZZZ91yyy0TJ058
/98mT55811139evXr1GjRps62rHHHrtw4cLkZgMAAACAhEaMGBG/lHv22WfL
uuaMGTNKfhu9c+fOBQUFlZG8WCwWW7Ro0dNPPz1w4MDttttuU6fQ2ZZPtRuP
J554okGDBut/7i+//HJhYeGmXp+Xlzd16tSOHTuWerpGjRo9/vjjSYwHAAAA
AAlNmjQpfil3xx13lGnB/Pz8krsc09PTP/zwwySmfeaZZ/72t79deeWVgwcP
PuGEEzp16rR+QReHzrZ8qtd4TJw4saQNbtWq1bRp06KnuvXWWzMzMzc+YNGC
Dz74YBJDAgAAAEB8H374YfxSbvDgwWVacP07MwcNGpTctCeddFKcqGlpab16
9br88st1tslSjcbjtddeq127dvHK++2335IlS8q6wvPPP5+VlVXqMe+5554k
RgUAAACAOHJycuKXcr///e+jrzZ//vy6desWv7FVq1YrV65MbtpSO9sGDRoc
cMABw4YNK/4qq7///e8622SpLuOxZMmSJk2aFK/crVu31atXl2+dV199teRO
3fUV/bBorpKVFgAAAADiiMViW265ZZxSrlOnTtGXOvzww0veOHXq1KSnvfPO
O88444wBAwZcfvnlo0aNeuKJJz7//PMNnlaqs02i6jIef/rTn4qXbdmy5Y8/
/liRpS677LJST9qxY8fc3NxkBQYAAACAOHbfffc4pVyjRo0irjNhwoSSdx13
3HGVmjkOnW1yVf3xmDlzZsnNsZMnT67ganl5eTvttFOph73qqquSEhgAAAAA
4uvTp0+cUq7IL7/8knCRotdsvfXWxa9v2LDhwoULU5C8VDrb5Kr643HOOecU
r9y1a9dYLFbxBe+5555ST7rVVlu51RYAAACAFBg0aFD8Um7mzJkJFyn55fQi
d911Vwpib4rONrmq+Hjk5+c3bdq0eOXs7Ox99933wgsvnDt3bkXWXLNmTcnT
cTcwZcqUZCUHAAAAgE25/fbb45dyTz75ZPwV3n777ZIX77fffhs8YDbFdLbJ
VcXH480339w4UmZmZsJU8ZX6bXdbBH3oBwAAAACbj2eeeSZ+KXfzzTfHeXtu
bm779u1LurJPPvkkZclLpbNNrio+Hg888ECpqZo3b75mzZpyLztmzJhSl91q
q62SGB4AAAAASvXJJ5/EL+XOPffcOG8fNmxYySsvu+yylMXeFJ1tclXx8bjm
mms2FWzSpEnlXnbGjBmbWnbVqlVJzA8AAAAAG1u5cmX8Uq53796beu+8efNq
165d/LI2bdqsXr06lclLpbNNrio+HhdccMGmgt16663lXnbBggWbWrboUEnM
DwAAAAClKvkWp1J16NCh1HfFYrHf/va3JS978cUXUxy7VDrbpKvK43H99ddv
KtjTTz9d7mXjNNWvvvpqEvMDAAAAQKn23nvvOKVc3bp1Y7HYxu8aO3ZsyWtO
OeWU1Mculc426aryePzjH/8oNVVmZuaiRYvKvezPP/+8qfO+++67ScwPAAAA
AKU68cQT45RyRTauv37++ecmTZoU/+tWW221ePHiIMk3prNNuqo8HrFY7JRT
Ttk40siRIyuy7Jw5czZ12K+++ipZ4QEAAABgU/7yl7/EL+Xee++9Dd7Sr1+/
kn994IEHgsQulc426ar4eOTn5w8bNqx58+bF27Vo0eLBBx8s9dbf6F588cVN
HXblypXJSg4AAAAAmzJmzJj4pdyjjz66/utfeeWVkn/q0aNHYWFhqOQb09km
XbUYj7y8vM8++2zBggVJ2e7qq68u9aR77rlnxRcHAAAAgITi3FVY7Lrrrit5
8Zo1a9q1a1f889q1a3/++ecBk29MZ5t0NWk8IjrwwANLPemQIUNCRwMAAABg
s/DFF1/EL+XOOuuskhcPGTKk5OdDhw4Nl7p0Otukq0njEcXixYszMzNLPemM
GTNCpwMAAABgs5Cbmxu/lDvooIOKX/npp5+W1Fk777zz2rVrwybfmM426WrS
eERx0003lXrMAw88MHQ0AAAAADYj22yzTZxSrk2bNkWvKSws7Nq1a8kP33jj
jdCpS6GzrQw1ZjwSys/Pb9u2banHfPHFF0OnAwAAAGAz0r179zilXEZGRkFB
wd13313yk/79+4eOXDqdbWWoMeOR0D333FPqGY855phYLBY6HQAAAACbkX79
+sUp5Yq89957DRs2LP5706ZNly5dGjpy6apUZ5uTkzN06NDOnTs3btw4Ozt7
3333HTVq1IoVK4KEqYgaMx7x/frrry1bttz4dE2aNFm0aFHodAAAAABsXq66
6qr4pVy7du1K/j5+/PjQeTep6nS2r7/+epMmTTYO07Zt208++ST1eSqixoxH
fGedddbGR0tLS3vmmWdCRwMAAABgszN27Nj4pVyJQw45pCr/kngV6Wy/++67
+vXrb+oaNm3atOgFKY5UETVmPOKYPHlyqSe65ZZbQkcDAAAAYHP0+uuvR2nk
srKyvvrqq9Bh46kinW2fPn3iX8n999+/GnWbNWY8NuXHH3/Mzs7e+EQXXHBB
NfqYAAAAAKhJFixYEKWUu+GGG0InTaAqdLbff/99lIv50ksvpTJVRdSY8ShV
QUHBIYccsvFxFLYAAAAABFRQUJCRkRG/kdt1113z8/NDJ02gKnS2zz33XJSG
8/DDD09lqoqoMeOxsVgsNnDgwI2Pc+mllypsAQAAAAirTZs28Uu56dOnh86Y
WFXobEePHh2ls61du/avv/6aymAVUTPGY2MjR47c4CCZmZn3339/6FwAAAAA
8M+DDjooTiN3zjnnhA4YSVXobCPeZ1tkypQpqQxWETVjPDbw6KOPpqWlrX+Q
xo0bv/baa6FzAQAAAMC/nHXWWZtq5Fq0aLFs2bLQASOpCp3twoULI3a21157
bSqDVUTNGI/1jR8/Pj09ff2DtGvXbt68eaFzAQAAAMB//O1vf9tUKTdx4sTQ
6aKqCp1tkRNOOCFKZ9u3b98UByu3mjEeJR566KEN7rA96KCDli5dGjoXAAAA
APzXI488Umojd+SRR1ajL2OqIp3tDz/8sOWWWybsbHv06JHiYOVWM8aj2Nix
YzcobP/85z8XFBSEzgUAAAAA/8f06dM3buTq1av3zTffhI5WBlWksy3y9ttv
Z2dnbxymefPmU6ZMKf6nPffcM/XByqdmjEeR+++/f/3Ctm7duo8++mjoUAAA
AABQih9//HHjUu7WW28Nnatsqk5nWyQnJ+eqq67afffd69evn52d3aNHj6uv
vvrnn38u+qeddtqpKNiOO+4YJFg51IzxuOeee9bPv/3228+aNSt0KAAAAAAo
XSwWa9q06fqNVufOnavdL4xXqc42jjZt2hQF22233UIHiaoGjMddd921fv6e
PXsW9+cAAAAAUGWdeuqpJY3Wlltu+cknn4ROVGbVpbNt0qTJFv/+3qvQQcqg
Wo/H6NGj1x8JD7AFAAAAoFpYtGjRBRdccPzxxw8aNGju3Lmh45RHtehsY7FY
RkZGUbCTTjopdJYyqL7jcdttt5UMQ2Zm5gMPPFDWFcaMGXPWv82bN68yEgIA
AABATVUtOtuff/65ONgFF1wQOkvNd+utt65/e/DLL79cjkV233334hW+++67
pCcEAAAAgBqsWnS2b7zxRnGwa6+9NnSWGm7EiBElY7DddtuV73kOubm5mZmZ
RSs0aNAgFoslPSQAAAAA1GDVorO94447ioNNmjQpdJaa7MYbbyyZgT333HPh
woXlW2f27NnFi+yzzz7JTQgAAAAANV616Gz/8Ic/FAdbvHhx6Cw11nXXXVcy
AEccccTKlSvLvdTYsWOL1yn64JKYEAAAAAA2B1W/s43FYi1btixK1b59+9BZ
aqxhw4aVfPrnnHNOQUFBRVbr27dv8VIjRoxIVkIAAAAA2ExU/c625BftBwwY
EDpLDRSLxa6++uqSj37EiBEVfAJtfn5+48aNi1ebNm1asnICAAAAwGai6ne2
Q4cOLU41YcKE0FlqmlgsdsUVVxRf3jp16kycOLHia44ePbpkkObPn1/xBQEA
AABgs/Lee+9V5c523bp1rVq1KorUqFGj1atXh45To8Risb/+9a8lH/pVV131
QmTPP//8tGnTnnnmmaeeeuqJJ554+OGHR48ePWzYsBNPPLFevXrFC9atW7ew
sDD0KQEAAACgmnn11Vc37mwPOOCA0Ln+47nnniuOdP7554fOUqPEYrFLL710
448+iTp37hz6lAAAAABQ/Tz22GMbt21V59u+DjrooOJIn3zySegsNUcsFhs8
eHClFrZF+vXrF/qgAAAAAFDNrF69+oADDii1cHvuuedCp/vnG2+8URymW7du
obPUHLFY7KKLLqrswrbIDTfcEPqsAAAAAFC1FBYWLvpf33///RdffDFr1qy3
3377hRdeGDdu3IUXXtiiRYtNFW5paWmHHXbYTTfd9PTTT7/22mvvv//+p59+
On/+/B9//LF4wRUrVlR2+G7duhWHef311yt1r81HLBY7//zzU1DYFimanNDH
BQAAAICqZeXKlZXXyF100UWVGv7+++8v3uh3v/tdpW60WXn44YcrbyQ28OWX
X4Y+LgAAAABULdW3s124cGHjxo2LdklPT//ss88qb6PNzV//+tfKG4n11alT
p6CgIPRxAQAAAKBqWblyZXp6ep06dbbccsvs7OyWLVtuv/32O+64Y8eOHTt1
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
v/32y83NTVaMMon4TWT/8z//EyQeAAAAAJBK33zzTceOHctRciZX586d7733
3uXLl5fvFHl5eVOmTDniiCPS0tLKsft22233448/JvfCRvftt99GCfnSSy+F
SggAAAAApMZPP/20ww47lKPkrCT16tXr27fv2LFjFyxYECV/Tk7OpEmTBgwY
kJ2dXe5N69at++GHH1bylU6gcePGCXOOGTMmbEgAAAAAoFLl5uZ269at3FVn
Zdt222179uz5pz/96brrrrv11lvv/bfRo0cPHz580KBBv/vd79q3b5+RkVHB
XerWrfviiy+G/ij+2blz54RRL7744tAxAQAAAIBKFOWrr+KrX7/+TjvttNde
e3Xu3Hnbbbct33MJAirK/9prr4X+HP7lhBNOSJj26KOPDh0TAAAAAKgst956
a/l6zu22227AgAHPPPPMTz/9tMGaa9eunT59+pVXXvmb3/ymfIunUsOGDd95
550gF39jl19+ecLAO++8c+iYAAAAAECl+PLLL7Oysspacu67776TJ08uLCyM
ssUHH3xwyimnpKenl6tPrXQ777zznDlzKvs6Rzdu3LiEmdPS0hYtWhQ6KQAA
AACQfL169SpTw7nttttOmzatHBvNnDlz7733Lm+xWlmOPvro5cuXJ/2qVsS7
774bJfljjz0WOikAAAAAkGQTJkwoU8N5+umnL1u2rNzbrVu3buTIkQ0aNChX
vZpkderUueGGG2KxWBKvZ1KsXLmyVq1aCfP369cvdFIAAAAAIJl+/fXXli1b
Rmw409PTb7755qTs++233x511FEVK1wr6sADD/z888+TcpzK0K1bt4RHqF+/
ftEnGDopAAAAAJA0N998c8SGMyMjY8KECcnd/amnnmrbtm3FmtfyaNas2YMP
PlgFb69d3xVXXBHlLEUHCZ0UAAAAAEiOvLy8bbfdNmLPefvtt1dGhvz8/LFj
x7Zr164CFWwZNG3adPjw4StXrqyMsyTXa6+9FuVEHTt2jPg1cAAAAABAFTd5
8uSIVefZZ59dqUkKCgrGjRtXqV9P1rp16+rS1hbLz89v1qxZlKM9/vjjocMC
AAAAAElw3HHHRakE27Rps2bNmtREmjt37pAhQ1q1alWxgva/GjZseOaZZ775
5ptV/EkIpbrooouinHHnnXfOzc0NHRYAAAAAqJDVq1dnZWVFqQSnTZuW4myF
hYUzZ84cMWLEYYcdVq9evbL2tOnp6V26dPnrX//66quvrl27NsXhk6joIkQ8
8tChQ0OHBQAAAAAq5LnnnotSBvbq1Stszry8vI8++ujJJ5+88cYbzzzzzKI8
3bt379SpU9t/69ChQ5cuXQ455JDjjz9+yJAh48aNmz59+i+//BI2cxLtscce
UT6mOnXqfPzxx6HDAgAAAADlN2jQoChl4AsvvBA66WZtwoQJUT6mIjvuuOOy
ZctC5wUAAAAAymn//fdPWANut912hYWFoZNu1oquf4cOHSLWtr17987Pzw8d
GQAAAAAos8LCwi233DJhB3j++eeHTso/H3vssYidbZETTjihoKAgdGQAAAAA
oGwWLVoUpQCcPHly6KT8c926dV26dIle25544om5ubmhUwMAAAAAZfDBBx9E
af/mz58fOin/Mnv27MzMzOi17QEHHLB06dLQqQEAAACAqKZNm5aw98vMzFy3
bl3opPzHX/7yl+idbZHWrVu/+eaboVMDAAAAAJE89dRTCUu/pk2bho7Jf61e
vbp9+/Zlqm3T09MvuuiiZcuWhc4OAAAAACQwYcKEhI1fixYtQsfk/5g7d26U
b47buHsfPXq0J9wCAAAAQFU2ZcqUhF1fw4YNQ8dkQxMnTkxLSytrbVvcwF97
7bWLFy8OfQIAAAAAoBSvv/56wpYvLS1t9erVoZOyoSFDhpSjsy2WkZHRs2fP
22+/febMmfHvvM3Ly5s7d+7UqVMnTJhw7/+6//77i35S9N6ff/45ZecFAAAA
gM3Bxx9/HKXiK3pZ6KRsKBaLDRw4sNy1bYnMzMz27dsffPDBp5122oD/VfT3
Hj16tG7dOiMjI/7bd9hhhxNPPPGuu+764osvQl8SAAAAAKj2Vq1aFeVX7B98
8MHQSSlFYWHhGWecUfHaNlnatWs3dOjQr7/+OvSFAQAAAIBqbJtttknYxZ12
2mmhY1K6devW9e/fPwV9bHTp6enHHHPMjBkzQl8bAAAAAKiWjjzyyIQtXJMm
TfLz80MnZZOuvfba8n0lWaXq06fPl19+GfraAAAAAEA1c8MNN0Tp31555ZXQ
SYln/PjxWVlZlV3DllXt2rUvv/zy+F9zBgAAAACs75133olSvl144YWhk5LA
nDlzunTpUtk1bDl06NBh9uzZoS8PAAAAAFQP69ata9q0acLarXXr1qGTklhB
QcG1115bq1atFDSxZdKgQYOpU6eGvjwAAAAAUD2cddZZUWq3WbNmhU5KJN99
992AAQPS09Mru4ktk7S0tKFDh4a+NgAAAABQDTz99NNROrdbbrkldFLK4J13
3unatWtlN7Fldd5558VisdDXBgAAAACqtDVr1tSrVy9h23bKKaeETkqZzZ49
e8CAAVE+35Q555xzQl8VAAAAAKjqjjzyyIRV26677ho6JuX0ww8/XH/99Z07
d05BJRvFnXfeGfqSAAAAAECVdttttyXs2WrVqpWbmxs6KRUyf/78W2655Zhj
jmndunWZWtbs7Oy2bdvutttue+211zbbbJOWllbOuvbfMjIynn766dAXAwAA
AACqrjfeeCNK1fbRRx+FTkrS/PLLL6+99tpDDz103XXXnX/++SeeeOIJ/6tv
374XX3zxqFGjJk+e/MEHH+Tk5Gzw3tzc3FmzZt11110HH3xwRkZGOWrbevXq
ff7550EODgAAAABV3y+//BLlzsmXXnopdFKqnCVLltx4443NmjUra23brVu3
wsLC0PEBAAAAoIpq2rRpwpLtscceCx2TKurXX3+9/PLLa9WqVabadtSoUaGD
AwAAAEAV1b59+4QN2x133BE6JlXaP/7xjx122CF6Z1u/fv2vv/46dGoAAAAA
qIq6d++esGG75pprQsekqlu8eHHXrl2j17ZHH3106MgAAAAAUBUddNBBOluS
Yu3atX369InY2aalpX366aehIwMAAABAldOtW7eE9dqNN94YOibVQ15e3sEH
Hxyxtu3bt2/ovAAAAABQ5XTp0iVht3bbbbeFjkm1sWTJkrZt20bpbGvVqvXt
t9+GzgsAAAAAVUurVq0SdmtjxowJHZPq5K233kpPT49S2w4ePDh0WAAAAACo
QtauXRulW3vyySdDJ6WaOe+886J0tq1atYrFYqHDAgAAAEBV8dlnn0Up1mbP
nh06KdXMr7/+mp2dHWW6Zs2aFTosAAAAAFQVDz74YMJKLS0tbeXKlaGTUv1c
e+21UTrboUOHhk4KAAAAAFXFGWeckbBSa9GiReiYVEtLliypX79+wgHr0qVL
6KQAAAAAUCXEYrHtt98+YaV22GGHhU5KdXXSSSclHLC0tLTly5eHTgoAAAAA
4b311lsJ+7Qiw4cPD52U6mrChAlRZmzGjBmhkwIAAABAeGeffXaUPm369Omh
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
+i9fvtyAD7148WKpUqWyv86aP3++AUkAAMBd/fv312yECoUKFbp8+bLCnDt2
7JDJuWLFCoUhAQBA7kWrBIByY8aMufvdb9KkiQGfeO3atcqVK2e/F/rkk08M
SAIAAO514MABmV6o8OqrryrMOWXKFM2EdnZ2xtwPAwAA8h5aJQCUq1Wr1t2v
/6ZNm6z9ccnJyQ0bNsx+LzRw4EBWn7OS1NTUiIiInTt3/vTTT99+++20adNC
QkI+/fTTOXPmrFixYuvWreJq/ebNm6pj5h1XrlwJDw8X36ylS5d+9dVXEydO
FBM+Y8aMRYsWrVu3bteuXadPn87IyFAdM4/ILO9ff/31v+W9fPnyzPK+ceOG
6ph5R2xs7N3ynj179t3y/u677zLL+9SpU5S3paSlpR07dkyU95o1a/5b3lu2
bLFgebds2VKzHSrY29uLr5VFPtEMvXv31kxYrlw5s/9+lvKeNGnS3fJeu3Yt
5W1Z95b3woULM8t78uTJd8t7//79169fVx0z74iLixPlvXnz5oeV98mTJ9PT
01XHzCNEeR8/fvxueU+fPj2zvL/++mvK2xquXr2aWd7Lli27W95i2jPL+7ff
fqO8IY9WCQC1Ll++fPfrL/ZI1v76i+Njly5dst8LPf/88xxGLej27dvipEWc
Gb7yyivVqlVzdnbWvMgVypYt26FDhxEjRoiT+ZiYGNWDyE3OnDkjTsjfe++9
li1bFi9eXGa23dzcateu3a9fP3E+KS6UaALIS0lJERc7meX91FNP6SrvDz/8
UJR3dHS06kHkJufOnROXPKK8W7VqJV/eTz/9dN++fUV5iwslylueKO+tW7d+
+umnQUFB1atXz/49FHeVKVOmffv2orx/+OGHqKgo8z56z549Mp8llCxZ8tq1
a5YduKRnnnlGM95LL70k/wf//PNPUd7BwcHPPvtsiRIlZIZfsGDBzPKeNm3a
r7/+ytmLvNTU1F9++eWzzz7r1auXfHkHBAS0a9du+PDhorwjIyNVDyI3EeW9
aNEiUd6tW7cWX1vJ8haXBq+99trUqVN37txJecsT5b1t27bPP/+8d+/eNWrU
cHFxkZnw0qVLt23bdtiwYUuWLFG78kyuc+HChe+///79999/7rnnNJ8oz+Tq
6lqzZk3KG9mjVQJAudDQ0Lt7gB9//NGqnyX2cgMHDsx+L9SgQYPk5GSrxsgn
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
nE15HzhwYPbs2f37969QoUIOP1FcbeXSx2zFNVHOb2J56qmnhgwZsmDBgoiI
iIfdSCl29WvXrhXl3aZNmxw+pW5nZzdv3jyDJ8pSRFnmcLbd3d07d+4srg03
bdr0sHdXifL+/fffM8v7sccey+EnVqtW7YHfo+3bt5uxpypcuPCXX35p2Uf8
VqxYkcMxZkMMf/DgwfPnz8+mvGNiYkR5jx49um3btjkv76+//tqCk2OkyZMn
53C2M8v7k08+yaa809LSDh48KGbp9ddff/zxx3P4iU888UQufUmWOGfI+bnZ
k08+mVneR48ezaa8161bN2bMmHbt2uXwFX6ivMVZpcETZSl6l/L+L7H369Sp
0/jx4zdu3Piwqsss7zlz5rzxxht6H2f4rypVquTSl2SJqsv5t7tq1aqDBg0S
JwxHjhx5WHlfuXLl559/FuXdvn37nJf3zJkzDZ4o5Gq0SgCotXz5cnHwymYv
5Ovre/r0adUxcx+Zhfsextvbu1+/fuvXrzfj7RuHDx8eOXJkpUqVzP705s2b
i3NRa8yJ9Yhrxpx0POrXr//ZZ5+ZcV9ZfHz8kiVLXnzxRbMv/x0dHcVFgTXm
xKpy8oyzl5dX3759xbm3GeUtzuc//vjjypUrm/3pTZo0yXUPLt24cSMn3+i6
det++umnZ8+e1fu5CQkJP/zwQ7du3cy+PhLlvW7dOmvMiVWJy3CzZ9vT0/PV
V19du3bt7du39X7u0aNHR40aJS7ezf70Ro0aPbC8xXa0t7c34w/WqVNn586d
lpjUO8S+zuyhZZNw8uTJZ86c0RtGlPfSpUu7d+/u5uZm3kc7ODj89NNPlpoc
w8ybNy/7s75seHh49OnTZ82aNWaUd0RExJgxY6pWrWreRz/y95HajM9V69at
WzkZcu3atSdNmmRGeScmJi5btuyll17KSXnnxoX3Fy5caHZ5FylSpHfv3qtX
r05OTtb7uceOHRs7dmxOXqYgjtRmfK5aYi+akwX2a9WqNWHCBDOuMUV5i6vX
Hj16FCpUyLyPFgfEvLTwPqyKVgkAtcS1WPZP94hL9X379qmOmfuI6zjzLpAr
VKgwf/58i7woWWzctm3bmnfu2qtXr5wHMIyYrmeeecaMYTo6Ovbs2fPIkSM5
z3Dz5s0pU6YUL17cjBiFCxe2SAbDiAt28146Vr58eVso71deeSXnAQwjpqth
w4ZmDDOzvA8fPpzzDLdu3TK7vMUl1aFDh3KewTCbN282761M5cqVE+VtkZ5S
TspbbPQH/s1Zs2aZ3cro0KFDWFhYzsclqtG8AP9l8fIuUaKEGTFcXV0tMjOG
2bJli3lvZbKR8u7SpUsuer1LWlpay5YtzRimOMKK8rbInjOzvM1bNkqUd+66
BPjll1/MK29/f//Q0FCLlPf+/fu7du1qXnk///zzuai809PTn332WTOGmVne
Bw8ezHmG+Ph4s8vbxcVl7969Oc+AvI1WCQC1jh49mv0CQeKomhtvkVLu7Nmz
Xl5eek8eihUrJs4YLdLOutevv/7aoEEDvWGEXPTU59ChQ80YoLj0O3bsmGWT
3Lx5c+zYsWb87v/444/nlkWQ/vzzT29vb70DLFq06MyZMy1+i9Rvv/1mXj9T
fNcsm8R63nvvPTMG2KlTJ7GHt2wSce0/fvz4woUL6w1Tvnz53LLiysWLF319
ffUO0M/Pb8aMGRYv7927dzdu3FhvGOHLL7984B8Ue3XzfkzMJL5rP/74Y06e
wrh69arZn36vDh06WKRbey+xBw4JCXF3d9cbJjAwMLesuHLp0iVRq3oHKL4R
06ZNs/gdgHv37m3atKneMEIuWij7ww8/NGOA7du3t/jvXKK8J06caMaSzmXL
ln3Y2he2JioqyowfFsX5jKiopKQky4bZt29f8+bN9YZ5JFctlG3e+m9t2rT5
/fffLZskISFh0qRJZqx5GxAQkEtXXIExaJUAUEtcmZYqVSr7Y9ncuXNVx8x9
xPVs3bp1dZ0ziIvoN99889atW1aKZDKZFi5cqLfPVrBgQYu3NK1hzZo1eu9n
KFeu3LZt26wX6fLly506ddIVSQgKCrJeJEsR5V2/fn1d4xJbZ/DgwVZt2S1a
tMjHx0dXKldXV4u3NK1h/fr1esv70Ucf3bJli/UiRUZGdunSRVck4eWXX7Ze
JEtJT09v1KiRrnGJrTNgwACrtuwWL16st43s4uLysJbmggULzLuL+K7ixYu/
//77ERER5g0nh+sQlilTZtOmTTmYTg3R0dEvvvii3lTif7FeJEvJyMjQ2yMV
5f36668/bLFxi1i6dKneNnKBAgUOHDhgvUiWsnXrVr0/kQQEBGzYsMF6kWJi
Yrp3764r0iN//8BtvUiWIspb7y3Norz79u1r1Y708uXLixYtqiuVs7NzeHi4
9SJZyo4dO/Q+b+Xv72/V7taVK1d69OihK5LQuXNn60VCrkarBIBa4gxcc8W8
cePGqY6ZKw0fPlzX2UKxYsXEib0BwSIjI5s0aaIr25NPPmnja8dFRUXp7Wb0
7t07ISHBgGzz5s3Tu8jtokWLDAiWEx999JGuEYmrlc2bNxsQTFRCs2bNdGUT
+0AbXztOXF+L/YOuQfXs2dN6v/7ca8GCBXqbb7b/ur0xY8boGpHY+Vi1wXJX
dHR0ixYtdGWrXLnyw+4cW7NmjdlrAN6rXLlyb7/99vr163X9IpOTt9WI63Fj
yvu7777TO0XffPONAcFyYvz48bpG5OPj8/PPPxsQ7MqVK61bt9aV7bHHHjPm
OG62uLg4vc9rd+/e3ZjnERYvXqy3vGfPnm1AsJyYNGmSrhF5eXmJPaEBwWJj
Y9u0aaMrW4UKFWy8vK9du+bv769rUF27drXqrz93/fDDD3qfBpo1a5YBwXLo
4MGDQ4cObdiwYd26dcWFzNq1a3PRMhq5Ea0SAGolJydr3kr0xhtvcCwww++/
/67rFqZatWpdunTJsHhpaWmDBg2Sjyd89NFHhsUzg677/RwcHGbMmGFkvAMH
Dmj+RHsvb29vcfVqZEJdDh06pGuluBo1aly8eNGweKK8hwwZIh9PGD58uGHx
zKDrhihR3gY/MiyuIEqXLi2fUFwj2/JLdSMiIpydneWHU61atfPnzxsWLz09
/a233pKPJ3zwwQcP+2vh4eHmrU78QKL2qlat2rNnz5EjR86bN2/r1q1HjhwR
2/ra/xMTJfYe27dvX7FihXlv07O3tzf4keHDhw+XKVNGPmGRIkUuX75sZEJd
jh8/nv2KfFmIDWrGSznNlpGRoXcRmLffftuweGYICgqSH4so78mTJxsZT3xD
y5YtK5/Q3d3dyJNVvU6dOuXi4iI/nMqVK5vxWjezifIWe2P5eMLQoUMNi2eG
1157TX4sdnZ2ISEhRl5UiqP5o48+Kp+wcOHCFy5cMCyeXqmpqeKq/L+PXDVt
2tSWz6lyNVolANQS132aba5OnTqJf6Y6ae4jJq1WrVryJwkNGzY05pahLMaN
Gycf0tnZ2exnYK3tp59+0jWQH374wfiQ4rK3QoUK8jl79OhhfEgZ4qKjTp06
8gN55plnlCxhKi4N5BcTEFVhs29/W79+vfxsOzk5KblJW1zm6Lptslu3bsaH
lCHKW9d7DOvWrWvMLUNZTJw4Ub68RVVks+jr+fPna9euLT9khRwdHRcuXGjk
PGe6dOmSrg7z888/b3xIGeK6Ute636IwlCxh+vnnn8uXt6iK/fv3Gx9SxpYt
W+QH4uDgMH/+fONDXr58WfMusnt17NjR+JAyRHnresqmZs2acXFxxuecOnWq
/FoZoips9uWGO3bs0FXec+bMMT5kZGTkE088IV8V7dq1Mz6kpGx+vhdHqNzy
LoxchFYJALXEic3gwYOz3wuJ61aLL8WfT3zzzTfypweNGzdOTExUFVVc+MtH
bdCggQ3+kpiQkBAQECA5BCcnpx9//FFVVHHqWL58efkJ37hxo6qo2ZgxY4b8
EBo2bKjwyb5PP/1UPmq9evUyMjJURX0YsXOQv0vE0dFx6dKlqqJGRUU99thj
8hNuzNPWen311VfyQ6hfv76Sn9syff755/JR69Spk015p6amBgcH5+StZAYQ
5b1kyRIjZ/heMTExFStWlE+7evVqVVGzMWfOHPkh1K1bV+EbA6dPny7fDqpR
o4YNXjXfvn1b/odaBwcHhWsiXblypXLlyvK1ofA8KhsLFiyQH0KtWrWU/NyW
aebMmfLlXb16dRss75SUFPldoihvsXVURY2NjdXVtl22bJmqqNn47rvvso8t
DuKqM+YptEoAKDdhwoTs90KVKlXiBZpmk79nSfxL5WtV6Vp31wZX6nv33Xcl
w4szZIWX/JnOnz9fokQJycDly5e3tXVWo6Ki5F/IK66JlP/ur2vdXRtcqU/+
OUpR3uKUXm1amdc03BUYGGhr57oxMTGenp6S+Z966imFDdtMut7WHRoamv1f
27hxo64lXIwkylvhJX+my5cvy68BUqZMGYW/xj5QbGys/BtIn3zySYUN20y6
1t2dNm2a2rT/9fHHH8vnV/7+GnFwl18DRHwRlB/csxDXLPIvNahSpYrChm0m
zQuxexm83pGMsWPHyuf/6quv1KaNjo6WXwNEHAeVH9yzuHbtmuY77Ly8vGyw
t5970SoBoNa3336b/V6oZMmStryej41LTU2VfIOqOCuIjIxUnffOL4kvvPCC
TGDB09PTpmpj165d8usGjxo1SnXeO8LCwuTf2fTWW2+pzvsvUSrt2rWTTF6i
RAlbWNRRZJZfDNbDw8PIlRs17d27V37d4A8//FB13jsOHDjg5uYmmXnIkCGq
896nY8eOksmLFStmC3tCUd7yb8cuUqTIuXPnsv+DN27c6Nevn/wNYIbJZkle
Ix06dEj+pTYDBgxQnfc+8qu++/n52ciesFevXpKZxXY5ffq06rz/EntC+XWD
33vvPdV57zhy5Ii7u7tk5v79+6vOe59u3bpJJvfx8Tl79qzqvHe8+uqrkpkL
FSp06tQp1Xn/dfDgQfl1g21kSd6IiAhxEJTM3LdvX9V57yN5oLfZJexyHVol
ANTauHFj9j0ucUTLZuE7aBLXvDIHVgcHh507d6oO+4/4+Hj5J/gaNGiQlpam
OvId165dk78tpFWrVrazsMPs2bMlY9vZ2a1bt0513n9MmTJFMrYo723btqnO
+4+EhAT5pVbr16+fmpqqOvIdYk8SGBgoGbtZs2a2s7DD3LlzJWOL8jbmhd0y
5Bf9sLe337x5s+q8/0hMTJRfarVu3boy5b1lyxZdqxNbW+PGjW2nvDUv5e4S
5W07j5DPmjVLMrYo7w0bNqjO+4/k5OSqVatKJq9Vq9bt27dVR77j1q1b8gvF
NGzY0Hbujlu0aJFk7Eds6RFy+UU/xLdy7dq1qvP+Q5Trk08+KZm8Ro0aNlLe
4pxK/qBTr149G7lkEJYsWSIZW1Dy5osHmjdvnmTmPXv2qA6bF9AqAaDW/v37
CxUqlM1eyNnZ2XY6LbmUyWSS+SV3xIgRqpPeR9SG/A2rAwcOVJ33L3ES2KJF
C8nAPj4+tvZO1c6dO0uG9/T0PHnypOq8d9o48vd8Dhs2THXe+/z+++/y4V9/
/XXVee+8+KB169aSgb28vGzhluZ7de3aVTK8h4fH8ePHVef9a/v27eLwJ5n5
3XffVZ33PgcPHpQP/7///U/mb6ampk6bNk3sOSX/rPU4ODhcvHjR2nOoy0sv
vSQZ3t3d/ejRo6rz/rVz5075CrGphzv++vvuOPkbVnv37q067533GLZv314y
sDhdtLWbtXr27CkZvnDhwrbQuNi1a5f8PZ+DBg1Snfc+x44dkw8fFBSkOu+d
8u7UqZN8hWg+3GEw+Vv3xfWyOLaqznvneSv5CrG1U8HciFYJALXOnDmT/WI4
dnZ2tvOrYq6mudRAhQoVbOTn8nu98847kmcFwuTJkxVGNZlMr732mnxaG1yG
NzIyUv4prfLly6tdRkNcl8mv81muXDlbW4ZXCA4Oli8YteUtvP766/JpNdcp
NZ6udY9FwYh/rzBtRESE/DqfZcuWtbV1Sv/Ss+6xMHHiRMk/e/36dfGX5fdU
1mCDb/G+cuWKfMGUKVNGbVPu+PHj8ut8BgQEKF9j/79GjhwpXzDKF0HSfG3N
vWxwGd64uDj5H2tEwaj9SeXUqVOa63zeZYPrlP6lc1ny0aNHq0371ltvyaf9
7LPP1Kb9r6tXr/r5+UnmL126tNq99+nTp4sVKyaZtmrVqgqj5g20SgCoJS4x
NF9YP3XqVNUx84jDhw9nc0+Lvb39L7/8ojrjA4grNXH6LXluIHz++edKcppM
pqFDh8rnbNCgge2sinAv+Wexhccff1xV2/bkyZPyJ42C7TxXe6/ExET5lTTE
WZnCRuh7770nP9t16tSxncfG7zVz5kz5UTzxxBOxsbFKcoprIvnXAgq2s5jD
vZKSkh599FHJIYjynjVrlvwfv3nz5sSJE4sXLy4/S5bi4OBgO8/V3kv+WexH
/v5VQtWFv7gC1fVeuVWrVinJmb3bt2/LL98kjBs3TlVUXS91rVGjhu2sinAv
+fVthIoVK6p6juncuXPyrwV8xJYWc7iXKG/5lTSEKVOmqIqq69eTJ5980jb3
3gsWLJAfhdg0qn5TPn/+vPxZq7B06VIlOfMMWiUA1EpISHj66aez3wsFBwer
jpmnfPXVVw97jcv48eNVp3uoNWvWyJ8ePKLiF39xBti7d2/5hE5OTrbwaOoD
ZWRk1KlTR34sgYGBxr84Y8+ePfL3aAndunUzOKG81atXyw9EfH+Nv/AX5d23
b1/5kI6Ojrbw7N4DifLWPO7cS1wZGV/eYWFh8vdoCZ07dzY4oTxde29R3mPG
jNH191NSUlasWNGhQwf5ZUZyzgYfkchkMpkaNWokP5CAgADjXyG0f/9+XT+3
dezY0eCE8rZu3arr1Xjvv/++wb/Vpqenv/HGG/IJHRwcwsPDjUwoT0xdgwYN
5MciTk6ML29x7NP1c9tzzz1ncEJ5mzdvlh/II3+/ctTg8hYH9EGDBskntLe3
3717t5EJ5ende5ctW/bEiRMGhzx8+HDJkiXlQ7Zq1crghHkMrRIAaqWmpooT
lez3Qj179rTNGxFztVWrVokD/b3zLE4vv/32W9W5NGgu7JBFr169DHsQPjY2
tkmTJrri2cjbxh/m0KFDuhogfn5+27dvNyzewoULXV1d5eN5eHiofchdU8eO
HXXVzyuvvGJYecfFxTVv3lxXPFtbeTKL/fv3Ozg4yA/H19fXyGcQFi9eXLBg
Qfl4hQsXtrWFVbOQXyU708svv5yUlKT3U65cuTJ9+vQWLVrIL5FqHlv+Aeiv
v9cckF9nVfD29jby1XU//PCDm5ubfLxChQrZ2sKqWej6uTazfgxbxuTatWvP
PvusrniDBw82Jpt5jhw5ouvkxMvLa+PGjYbFW758udghy8cTu3rjfxPURX6V
7EziXN2wZUxu3LjRpk0bXfEkF05XJSIiQtfxy9PTc/369YbFW7lypa7yFifq
f/zxh2Hx8h5aJQDUEruXPn36ZL8XatmyZUpKiuqkeVNaWtr27dtD/yYu1mxw
Ddv/io2N1XVnjlC9enUD7mXdsmWLrofgHvl7cScbXFg1i7Fjx+oalLiMEv+L
tZ84i4+PF6fcuoIJ3333nVVT5VxUVJT8UmaZqlWrJq5erR1s27Ztuh6CEypV
qmSDC6tm8dFHH+kalKOj4+jRo61d3mLeBgwYoOu2vUds+J7Pu6Kjo3XdNvzI
34+vmv0WIXEh//3334tzjIoVK+qdzP9r787DtR7zP4C3ng4hKVmilZYLRTVJ
ZZcZqYjBWAot0mVJGaTEIDHaa8Rkm8g2xpQ0pdKCkKXTFOpKZU+ktCclv999
9VzXma7k1LN+n3PO6/VXf/W9v5/nfe7nvu/n+73vPapXr14Wbqy6i0GDBsV1
UyHed911V5geprVVId433HBDvJ/I448/ntZWJW/NmjXxjgGOPfbYefPmpbth
b7755t7vTBJTt27d7I/3gAED4rqp0qVL9+vXL93x3rx580033RRvvEeNGpXW
ViVv1apVcT1XGRxzzDF5eXnpbthbb7111FFHxdWw2rVrZ+G+wbv461//GtdN
hXj37ds33fPlMGe5+eab4413Fm6LXYhYKgEid8cddxTcCzVq1Cj7v1jJsEmT
JsU7YMjNze3fv3+avtF++OGHa6+9Nt4m7bPPPh9//HE62pNaP//8c8uWLeO6
taBp06bpm4pOnjw53hloiR2PpKapPamVQLzLlSt3zz33pOk3l7Vr11533XWl
SpWKq0nhL27+/PnpaE9qbdu2LYF4N2nSZO7cuWlq0tSpU+OdgZbI+mc+84U/
3gTifffddycZ79WrV0+cODHMgq+55pozzzyzRo0aBZ+8vMcmZWCpLXnbt28/
44wz4r27MO56//3309Sk1157bY878v3axRdfnKb2pNasWbPi7SpzcnLuvPPO
NP16u27duh49eiTQpPT1bymUWLyPP/74d999N01NmjFjRr169eJtUvv27dPU
ntQKdxdvlsqWLRsmegm8LrE3wvSwZ8+ecb0sE2tS+gKQQiHerVq1iuvWSuz4
lXPOnDlpalLo3+rXrx9vk9q1a+f5z2RYKgGitccjYGrWrBnVwQFkudtuuy3e
YUOJHY+OjBkzJoVPWaxZs+aBBx6I98HIEjt2awwtSVUz0u2LL76I9+m4Ejse
2ercuXNqN5F744032rRpE29LSux4pLkQDWl69+6dwD0effTR//jHP1IY7w0b
NgwePDjex9pjRo8enapmpNuXX36ZQLzDPLFTp06LFy9OYUvee++98847L4Fq
h2nU2rVrU9iStOrTp08C9xji/eSTT6Yw3hs3bhw4cGACvXcQ1xFp0Vq+fHm8
T8eV2BHvq666atGiRSlsydtvvx3v3i8xId7hqzaFLUmre+65J4F7rFWr1mOP
PZbCn5XD913ovRM7mC/7n/nM98033yQQ71KlSnXs2HHhwoUpbEleXt6FF16Y
wPP8Rx111OrVq1PYkrRKLN5hNvfoo4+m8GflTZs2jRgxIoGPvkSkR6TFa8WK
FXEd0RgT4t2hQ4fUvl04b968iy66KIF4h55t1apVKWxJcWOpBIjWuHHjCv65
tnLlyuk4MuC7774LQ7Vbbrkl+99JpwDbt28Pw+N4Bw8x1atXHzlyZJIreEuX
Lu3Zs2dcGzrtrF+/fqkqRWa8++67ce0cmy/M/S+++OIkn9oKQ/0XX3wxrgPR
dhbmrVm+EeIuQrzbtWuX2M1Wq1Zt+PDh69atS6YBK1euvPvuuytVqpRYG3r0
6JGqUmTGW2+9FdfOn/nCt1iYyLz33nvJXD183NOnT0/giZqY8DEtWbIkVaXI
gHC/ia3dBUceeWSYcScZ7++///6ee+4JY4zE2nDDDTekqhSZkZeXl9hDxSHe
F1xwQZIn9cTOhmvRokVi1a5SpcqyZctSVYoM+OWXXzp06JDYzVatWnXIkCFJ
/v7y+eef33rrrRUqVEisDVm+CfmvhdFFYoOTEO/27du//fbbyVw9fNyzZs06
55xzEtt9JXxMqV06Trdwv5dcckkCd1piR7wHDx6c5O8vq1evHjBgQGK/tQVd
u3ZNVSkyY+7cuXFta58vxPu8884LY5tkrh4+7tdff71169aJxfuAAw7I2kOW
CwVLJUC0Zs+enZubW0AvFL6h0vTqSv7zmS+88EI6/n8yZvPmzc2bN09gFBET
Eti2bdsnn3wyriccwmxo4MCBTZo0Sfi6JQrtRvFh3h3vO2g7q127dphIzpkz
Z+/vfevWrZMmTbrqqqsOPPDAhK+7//77F4rXPHexfv36xo0bJ3zX5cqVa9Om
zRNPPBHXEw5ffvnliBEjTj/99GQ+6PBn9fPPP6evMmnyzDPPxPvW585q1aoV
xrfvvPPO3sd727Zt06ZN6969e1xni+8i9GOzZs1Ka2XSYcOGDcn0oiHe5557
7uOPPx5XvL/66quRI0cmGe9w3XTvZpwOEydOjOvApl3UrFnz5ptvDtP/7du3
7+UVQ5WmTJnSqVOngw46KOHrli9fPmvPdi/Ali1bEnhnP19OTs4555zz6KOP
rly5cu8vGuI9ZMiQZs2aJbN184UXXrj3H3H2ePHFF5P5o65Ro0avXr3CxGTv
7z18x02fPv36669P4DHIfOGDzuSxaKkSxt4nnXRSMnedQLyXL1/+0EMPnXXW
WWXKlEn40q1atUr3bsbpEMbeydx19erVe/bs+eabb8YV7xkzZtxwww1HHnlk
wtcNH/TkyZPTWpmizVIJEK2FCxdWrFixgF4oDL3+85//pOPSYRKR/6ZYodjO
iIKtWbOmYcOGCY8oYsIEp3bt2hdccMFf/vKXZ5999tVXX33//feXLVv2ySef
zJkzZ9KkSU8//XTv3r3DIDOx97B20aZNm8I4aIx54oknkj/KZ//992/evPm1
11778MMPjx8//o033vjoo49CwRcsWDBr1qyXXnpp2LBhV199daNGjRJ79HFn
YcATRp5Rly1Bq1atOu6445KsQPi8atWq1b59+7vuuisW7/feey9Ue8mSJbF4
jx07NsS7devWKYn3mWeeWXh/l//73/+efLz322+/MJ/t1q3bbuMdJl/Dhw/v
1KlT48aNCx6N742yZctOnDgx6rIlaPXq1Q0aNEiyAnsT79tvv/3cc89NZmkl
3+mnn56mjRkzIMlfJWJCvJs1axbiPWrUqHHjxu023p07d05JvMOUP5MnoafW
+vXrmzZtmmQFSuxYLT/vvPPuvPPO8PHF4r106dIQ7zCCnTx5coh3nz59QryT
WVrJF3rvQnEQ7W6NGTMm+XiXL1/+xBNPvOaaax566KEQ79dffz0W7w8//DAW
7xEjRnTp0qVJkyaJPdm7szJlyoTRTtRlS9DatWuT+U05Xyze/fr1+6149+3b
N4yZ4z3ab7datGiR/cfq/ZYwDUlhvP/2t7/tEu/w7xDvkSNHpireYSL/4osv
Rl22QsxSCRCtr7/+eo9fvuk7/DrM4GKXCD1hYXxUhl/79ttvjznmmCRHFxlz
1llnFd4pf0wY1KX8BPY0yc3Nffnll6MuWFJCvJNfts2Y0047rfDOiWLCVD35
mVFmlCtXrvBO+WO+++675JdtM+bUU0/dsGFD1DVLyujRowtLvHNycgr7lH/V
qlWNGjWKupB7q2XLloVoy/fdeuyxx5J52jaTypYt++yzz0ZdsKSEeKdk2TYz
mjdvXoi2fN+tMDUuLPEuU6bM2LFjoy5YIWapBIhW+Mbc4/pD//7909eAyy+/
PHaVK6+8Mn1XIcPCPDrhrSAzqUuXLoXxnfFfGzduXPLPUKXbwQcfXDR+IA7x
Pvvss6Mu55516tSpaIzuxo8fn/xDJulWuXLl9J0NnUkbN278/e9/H3U59+yy
yy5L4flQEZowYUL2x7tSpUqFcUuEXwvxPuecc6Iu55796U9/KhrxfuWVVxLb
/DOTKlSoMHPmzKhLlQKbNm1q3bp11OXcs4svvrjwPkC+s2nTpiV8iEbGHHDA
AYX37bZsYKkEiFb4xjzttNMK7oW6d++evn0+w+C5fPnysQsV9qfv2EUYOoZR
WdJjjXQpWbJk7969C+M2cb9lypQpCR9QlQG1a9desGBB1EVKmRDviy66KOqi
FqRXr15F4/eImKlTpyazCWe6VatWbd68eVEXKWU2b96czb13cNNNNxWleM+c
OTPhE3wyoEaNGnl5eVEXKWXC0Ldjx45RF7UgPXr0KErxnjVrVsLHC2ZA1apV
kzyzMquEeF9xxRVRF7UgYV5ZNH5NjnnjjTcOPvjgqIv6mw4//PCi8bBEVCyV
ANHavn37Hidl559/flrHjc8++2zsQqE7Krw7LlKAoUOHJnPMSppUqFBh3Lhx
Udcm9T7//PMkz2JLk3bt2iV5MHEWCiO0++67Lwvfa87NzX3qqaeiLk/qLV26
9Nhjj426urtx6qmnxnV0S6EQ4n3//fdnZ7zHjBkTdXlS76uvvkrmFKH0+cMf
/hDXuXKFxcMPP5z89uwpt99++z333HNR1yb1Pvvss+OPPz7q6u5G8+bNV6xY
EXV5Um/w4MHJHJKVJjk5OaNHj466Nqn3xRdfZOemK+E7Zfny5VGXpxCzVAJE
K0zHevToUXAv1KJFi3Tv89mmTZvYtUKXmNYLEaE5c+bUrl07+bFHqoQxzKef
fhp1VdJly5YtvXr1yp7tbXNzc4cNG5a+H6AjN2PGjOrVq0dd5v8J8+Ki9Dzz
LjZu3Ni9e/fsiXfZsmXvvvvuovTI0C5mzZpVo0aNqMv8Pw0bNpw/f37UVUmX
rVu39u7dO3vWyXNych588MGi9DbKLvLy8urVqxd1mf+nSZMmixcvjroq6RIm
FGHekT29d5kyZfr27Vs0NqDYrdmzZ2fV2PuYY46ZO3du1FVJlxDvnj17Zk/v
Xbp06dtvv70IxzsDLJUAkQvj8IJ7ofr1669evTqtbfj+++/zfwV+/vnn03ot
orV+/fquXbtGPpjJzc0t2gss+aZMmVKzZs1oqx00bty4CC+w5Fu3bt0111wT
ebzLlSvXr1+/4jBED/GuVatWtNUusWN5/IMPPoi6GGkX4t2tW7dsiPcdd9xR
HOI9Y8aMo446Ktpql9ixPF6EF1jybdq06frrr4/8IKGcnJw+ffoUh3hPnz79
6KOPjrbawXHHHVc0th8v2MaNG7Mh3mXLlr3tttuKwyOCM2fOrFOnTrTVLrFj
efztt9+OuhiFnqUSIFpjx44tuBc6/PDDv/jii3Q3Y9iwYbHLhblYYT8bl73x
wQcftGzZMvnRSGLat2+/bNmyqGuQOWF4fN999+23336RVLtKlSqjR48uwg9o
/drcuXNPOeWUSKpdYsfuE0uWLIm6BpmzZcuW+++/P6qzPypXrvzII48UpQ0n
9ygvL+/UU0+NpNpB27Zti1W8f/rppzBbPOCAAyKpdqVKlUaNGlWs4j1//vwz
zjgjkmoHrVu3LsKP1/5aiPfAgQMrVKgQSbUPOuigkSNHFoff7vMtWLDgzDPP
jKTaJXZsrrJo0aKoa5A5W7duHTx48IEHHhhJtStWrDh8+PBiFe80sVQCRGvq
1KkF73EUxlEZeLU2TAfynwMM07F0X47sMXv27DZt2mTs/bjwNXfjjTcWq/n+
zjZs2BC+8atWrZqZagf16tUbM2ZMcXheaLfmzp170UUXZSzeZcuW7dChw4cf
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
Kvg3rBo1amSmPwQAAACKJ0slQLTCH/VNN91UcC/UvHnzzZs3p7UZX3/99aBB
g+rVq1dwS4JevXqltSUAAABAcWapBIjcwIEDC/7Dr1+//urVq9Nx6dC5vf76
63fddVfLli1Lliy5xy4oZvbs2eloDAAAAMD/WSoBovbMM88U/Fe/7777Tpw4
8cNELViw4J133nn11Vf/+c9/Pvroo4MGDerXr9+NN97Ytm3b2rVr733nk+/Q
Qw/dvn171GUDAAAAiiZLJUC0Zs+eXbZs2Xi7gmh179496rIBAAAARZOlEiBy
4Y866n4lbq+99lrUZQMAAACKJkslQOROOOGEqPuV+Bx22GEZOJARAAAAKJ4s
lQCRu+666w455JDc3NyoO5g9K1euXJ06dSZNmhR1zQAAAIAiy1IJAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkP3+HyTrt8M=
      "], {{0, 910}, {1852, 
      0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "Comments" -> Association["Software" -> "gnome-screenshot"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageMargins->{{0., 0.}, {0., 1.7053025658242404`*^-13}},
    ImageSize->{198.6666666666643, Automatic},
    ImageSizeRaw->{1852, 910},
    PlotRange->{{0, 1852}, {0, 910}}], TraditionalForm]], "Input",
  CellChangeTimes->{{3.698416303067203*^9, 3.698416354093232*^9}, {
   3.698416389919321*^9, 3.698416427808646*^9}},ExpressionUUID->
  "357cdac1-b536-44ac-ae52-8b95b8399396"]
}], "Section",
 CellChangeTimes->{{3.6982339346626663`*^9, 3.698233986113291*^9}, {
  3.6984161300867453`*^9, 3.69841613607393*^9}, {3.737911299550107*^9, 
  3.737911325404192*^9}, {3.741694737151464*^9, 
  3.7416948033102283`*^9}},ExpressionUUID->"3cbeecf4-d53b-4fca-9c38-\
ec11be9fe795"],

Cell[CellGroupData[{

Cell["Amplitudes", "Section",
 CellChangeTimes->{{3.74169196689572*^9, 
  3.7416919683311567`*^9}},ExpressionUUID->"f3231b73-7510-4d52-8626-\
857cd0648505"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MZZ1", "=", 
   RowBox[{"Contract", "[", 
    RowBox[{
     RowBox[{"ZVCVC", "[", 
      RowBox[{
       RowBox[{"-", "q"}], ",", 
       RowBox[{"q", "-", "l"}], ",", "l", ",", "\[Mu]", ",", "a", ",", "d"}], 
      "]"}], ".", 
     RowBox[{"propVC", "[", 
      RowBox[{
       RowBox[{"q", "-", "l"}], ",", "b", ",", "a"}], "]"}], ".", 
     RowBox[{"ZVCVC", "[", 
      RowBox[{"q", ",", 
       RowBox[{"-", "l"}], ",", 
       RowBox[{
        RowBox[{"-", "q"}], "+", "l"}], ",", "\[Nu]", ",", "s", ",", "b"}], 
      "]"}], ".", 
     RowBox[{"propVC", "[", 
      RowBox[{"l", ",", "s", ",", "d"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ1L", "=", 
   RowBox[{"OneLoop", "[", 
    RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MZZ1LPV", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"PaVeReduce", "[", "MZZ1L", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ2", "=", 
   RowBox[{"Contract", "[", 
    RowBox[{
     RowBox[{"ZV1V2", "[", 
      RowBox[{
       RowBox[{"-", "q"}], ",", "l", ",", 
       RowBox[{"q", "-", "l"}], ",", "\[Mu]", ",", "d", ",", "a"}], "]"}], 
     ".", 
     RowBox[{"propV2", "[", 
      RowBox[{
       RowBox[{"q", "-", "l"}], ",", "b", ",", "a"}], "]"}], ".", 
     RowBox[{"ZV1V2", "[", 
      RowBox[{"q", ",", 
       RowBox[{"-", "l"}], ",", 
       RowBox[{
        RowBox[{"-", "q"}], "+", "l"}], ",", "\[Nu]", ",", "s", ",", "b"}], 
      "]"}], ".", 
     RowBox[{"propV1", "[", 
      RowBox[{"l", ",", "d", ",", "s"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ2L", "=", 
   RowBox[{"OneLoop", "[", 
    RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MZZ2LPV", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"PaVeReduce", "[", "MZZ2L", "]"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ3", "=", 
   RowBox[{"Contract", "[", 
    RowBox[{
     RowBox[{"ZZVCVC", "[", 
      RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}],
      ".", 
     RowBox[{"propVC", "[", 
      RowBox[{
       RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ3L", "=", 
   RowBox[{"OneLoop", "[", 
    RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MZZ3LPV", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"PaVeReduce", "[", "MZZ3L", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"MZZ41", "=", 
   RowBox[{"Contract", "[", 
    RowBox[{
     RowBox[{"ZZV1V1", "[", 
      RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}],
      ".", 
     RowBox[{"propV1", "[", 
      RowBox[{
       RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ41L", "=", 
   RowBox[{"OneLoop", "[", 
    RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MZZ41LPV", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"PaVeReduce", "[", "MZZ41L", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"MZZ42", "=", 
   RowBox[{"Contract", "[", 
    RowBox[{
     RowBox[{"ZZV2V2", "[", 
      RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}],
      ".", 
     RowBox[{"propV2", "[", 
      RowBox[{
       RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ42L", "=", 
   RowBox[{"OneLoop", "[", 
    RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MZZ42LPV", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"PaVeReduce", "[", "MZZ42L", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7416240923846483`*^9, 3.7416241096155577`*^9}, {
  3.741624198456308*^9, 3.741624225401763*^9}, {3.741624417851057*^9, 
  3.741624433360313*^9}, {3.741624590764674*^9, 3.7416246041494837`*^9}, {
  3.741624635327046*^9, 3.741624643250196*^9}, {3.741624698317836*^9, 
  3.741624761727851*^9}, {3.741694540857305*^9, 3.7416945412187853`*^9}, {
  3.741694593596493*^9, 3.741694628481251*^9}, {3.7416946633610992`*^9, 
  3.741694713176564*^9}, {3.741695038750791*^9, 3.7416950417348757`*^9}, {
  3.741695081336631*^9, 3.741695260042697*^9}, {3.741695303173258*^9, 
  3.741695320143279*^9}, {3.741695401718549*^9, 3.7416955216781893`*^9}, {
  3.741695556870164*^9, 3.7416955637516727`*^9}, {3.741695597888693*^9, 
  3.741695616196347*^9}, {3.742149722296453*^9, 3.7421497288505707`*^9}, {
  3.742294429842145*^9, 3.742294436065906*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"02ea6ecc-a4d3-4619-83c0-17f6db0745f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of amplitudes", "Section",
 CellChangeTimes->{{3.741691979268497*^9, 
  3.741691982243298*^9}},ExpressionUUID->"d21905d8-e3b1-4182-8f15-\
8253710cdc84"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MZZ", "=", 
   RowBox[{
    FractionBox["I", 
     RowBox[{"64", "*", 
      SuperscriptBox["\[Pi]", "4"]}]], 
    RowBox[{"Simplify", "[", 
     RowBox[{
     "MZZ1LPV", "+", "MZZ2LPV", "+", "MZZ3LPV", "+", "MZZ41LPV", "+", 
      "MZZ42LPV"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{
     RowBox[{"FV", "[", 
      RowBox[{"y", ",", "\[Mu]"}], "]"}], ",", 
     RowBox[{"FV", "[", 
      RowBox[{"y", ",", "\[Mu]"}], "]"}]}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{
     RowBox[{"FV", "[", 
      RowBox[{"q", ",", "\[Mu]"}], "]"}], ",", 
     RowBox[{"FV", "[", 
      RowBox[{"y", ",", "\[Mu]"}], "]"}]}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{"y", ",", "y"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarProduct", "[", 
    RowBox[{"q", ",", "y"}], "]"}], "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.741624572976516*^9, 3.7416245775488787`*^9}, {
   3.74162482733567*^9, 3.741624845573947*^9}, {3.741624882335182*^9, 
   3.741624882688037*^9}, {3.741625070399714*^9, 3.7416250735510683`*^9}, 
   3.7416253609193296`*^9, 3.7416254071059093`*^9, 3.7416255116355457`*^9, 
   3.741625622732995*^9, {3.741635487304205*^9, 3.7416354908191137`*^9}, 
   3.7416920704861317`*^9, {3.741695744069804*^9, 3.7416957588126593`*^9}, 
   3.742149731116062*^9, 3.742234043043561*^9, 3.742294445824695*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"7c5b4ded-ed8d-4b41-882c-89447aee71cc"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Set","setraw",
    "\"Cannot assign to raw object \\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\).\"",2,46,2,24787999531254406431,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.7417765672825108`*^9, 3.7419508152669153`*^9, 
  3.741953927646666*^9, 3.741955998118865*^9, 3.7419736003002443`*^9, 
  3.7419739417878838`*^9, 3.742035977243984*^9, 3.742042557080331*^9, 
  3.74204766400913*^9, 3.7420477268601294`*^9, 3.7420478207115393`*^9, 
  3.74214973799329*^9, 3.74223404419627*^9, 3.7422944464740543`*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"44403c3c-a46c-4870-b670-c51fd8c35925"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Set","setraw",
    "\"Cannot assign to raw object \\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\).\"",2,48,3,24787999531254406431,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.7417765672825108`*^9, 3.7419508152669153`*^9, 
  3.741953927646666*^9, 3.741955998118865*^9, 3.7419736003002443`*^9, 
  3.7419739417878838`*^9, 3.742035977243984*^9, 3.742042557080331*^9, 
  3.74204766400913*^9, 3.7420477268601294`*^9, 3.7420478207115393`*^9, 
  3.74214973799329*^9, 3.74223404419627*^9, 3.7422944464852037`*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"362d6882-e457-4e31-8d77-d983cb47ecd5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the term proportional to gmunu", "Section",
 CellChangeTimes->{{3.741692001042224*^9, 3.7416920075781813`*^9}, {
  3.741692040053833*^9, 
  3.741692055902158*^9}},ExpressionUUID->"07b5b67a-f439-40ac-afea-\
de0cd6eccbce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPi]ZZ", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"Contract", "[", 
     RowBox[{"MZZ", ",", 
      RowBox[{
       RowBox[{"FV", "[", 
        RowBox[{"y", ",", "\[Mu]"}], "]"}], ".", 
       RowBox[{"FV", "[", 
        RowBox[{"y", ",", "\[Nu]"}], "]"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPi]ZZx", "=", 
   RowBox[{"\[CapitalPi]ZZ", "/.", 
    RowBox[{
     RowBox[{"ScalarProduct", "[", 
      RowBox[{"q", ",", "q"}], "]"}], "\[Rule]", "x"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7416244856313677`*^9, {3.741624917904914*^9, 3.741624922664772*^9}, 
   3.741625024553791*^9, {3.741625424059381*^9, 3.741625425523664*^9}, {
   3.7416258105900106`*^9, 3.7416258322742367`*^9}, {3.741630955515877*^9, 
   3.741631032261505*^9}, {3.741631084458704*^9, 3.741631091511636*^9}, {
   3.741631133394731*^9, 3.7416311469389353`*^9}, {3.741631184055224*^9, 
   3.7416312301434183`*^9}, {3.74163128167173*^9, 3.741631291294896*^9}, {
   3.741632530266707*^9, 3.741632539357306*^9}, {3.741633929976631*^9, 
   3.741633936278582*^9}, 3.741634427524345*^9, {3.7416914189320793`*^9, 
   3.741691419202018*^9}, {3.741691592773176*^9, 3.741691593044765*^9}, {
   3.74169201502728*^9, 3.741692033982752*^9}, {3.741695771655241*^9, 
   3.7416957782102757`*^9}, 3.7416964956511307`*^9, 3.741697130934215*^9, {
   3.7421497465171623`*^9, 3.742149747657802*^9}, {3.742294449526865*^9, 
   3.7422944509521008`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"7b955849-4eb7-443a-8847-95a8f0961d3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The amplitude after replacements", "Section",
 CellChangeTimes->{{3.7416921623947268`*^9, 
  3.741692177224592*^9}},ExpressionUUID->"8fb63286-c4c1-4ee7-bfc5-\
fa04d6e33b5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ZZF", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"\[CapitalPi]ZZx", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"B0", "[", 
          RowBox[{"x", ",", 
           RowBox[{"MV1", "^", "2"}], ",", 
           RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB12"}], 
        "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"B0", "[", 
         RowBox[{"x", ",", 
          RowBox[{"MV1", "^", "2"}], ",", 
          RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB1C"}], 
       "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"x", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB2C"}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZZ0", "=", 
   RowBox[{
    RowBox[{"Expand", "[", "ZZF", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", "0"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.741691781493144*^9, 3.741691806022744*^9}, {
   3.741692635578149*^9, 3.741692656273608*^9}, {3.74169321467247*^9, 
   3.741693220878487*^9}, {3.741693288216032*^9, 3.741693319647132*^9}, {
   3.741693368424301*^9, 3.741693396323289*^9}, {3.741693488386139*^9, 
   3.7416935041210613`*^9}, {3.741695639683567*^9, 3.741695681509883*^9}, {
   3.7416957865108337`*^9, 3.741695801904148*^9}, {3.741695879376521*^9, 
   3.7416958844082813`*^9}, 3.7416959817350407`*^9, {3.741696162786311*^9, 
   3.741696185206676*^9}, {3.741696564676466*^9, 3.741696589361622*^9}, {
   3.741697136464666*^9, 3.741697163219685*^9}, {3.741706844986763*^9, 
   3.741706851858287*^9}, {3.7417069299329844`*^9, 3.741706930360838*^9}, {
   3.742149755208885*^9, 3.742149756290208*^9}, {3.742294454540347*^9, 
   3.742294457244061*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"1132a442-7839-47f8-b5aa-031f5ec6696e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"A0", ",", 
     RowBox[{"A0ToB0", "\[Rule]", "False"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7420425726882267`*^9, 
  3.742042573124165*^9}},ExpressionUUID->"28d19a5d-aa41-496f-887d-\
74635e1290c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Z\[Gamma]-Amplitude polarization", "Subchapter",
 CellChangeTimes->{{3.742037244495743*^9, 
  3.7420372693623123`*^9}},ExpressionUUID->"b595f79e-c096-493a-9b3c-\
1147de483832"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XuclnPi//GdU6aDSgdKyhCpNmXJIdlsiI2lWKeItqycYtucfjmFlVIO
YdPGN7GlKMe0zmdb1BYilUMppNJZh2lO9/5mv+13WJu5r5m5Zz4z9zyff3iQ
met6XXefv96Puefeq98fTumf+rOf/ezyzMJ/nNL36q6DBvUd/Nv6hf9x2mWX
X3TBZef/vvtlV5x/wfmDDuuXVviHRxT+470aP/vZv/79nwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
FW7p0qVHHHFEixYtRowYEboFAAAAAKiq+vbt+7P/8+mnn4bOAQAAAACqpEMO
OaRoaXzsscdC5wAAAAAAVVKHDh2KlsZx48aFzgEAAAAAqqQfLo0PPPBA6BwA
AAAAoEqyNAIAAAAAZWdpBAAAAADKztIIAAAAAJSdpREAAAAAKDtLIwAAAABQ
dpZGAAAAAKDsLI0AAAAAQNlZGgEAAACAsrM0AgAAAABlZ2kEAAAAAMrO0ggA
AAAAlJ2lEQAAAAAoO0sjAAAAAFB2lkYAAAAAoOwsjQAAAABA2VkaAQAAAEgO
c+fO/f3vf3/66af/7ne/u/jiiy+//PLrr79+2LBho0aNuu+++x544IGHHnro
kUceeeyxx5588slp06Y98cQTkydPfvjhh++///4///nPd955Z+EX33TTTdde
e+0VV1xx2WWXXXjhhX379j377LPPOOOMP/3pT1u3bi2P7LVr11555ZWnnXZa
7969C/sHDBhQePfrrruu8I4jR4689957C8snTJgwderUZ555ZsqUKYXBY8aM
Kay95ZZbClP/+Mc/XnDBBeeee25hZ+GXlUdhRJZGAAAAAJJALBZr0qTJz8rT
+PHjy6O8d+/eCYz8/PPPyyMyCksjAAAAAElgxYoVCdzrdmjatGnlUd66desE
Rq5fv748IqOwNAIAAACQBPLz8w855JAETnY/0qVLl82bN5dH+cCBA1NSUhIS
edlll5VHYUSWRgAAAACSRm5u7ooVKxYsWPDuu+++9NJLU6dOvfnmmw844IDo
Y11qauoRRxwxdOjQSZMmvfjii3Pnzl2yZMmaNWvKNXvLli1z5sx5+OGHL7jg
gtq1a0dMbd68+bnnnnvnnXc++uijb7311pdfflmukXFZGgEAAABIbrFY7OKL
L46y3V144YVr164NW7thw4bTTz+9+M5TTz31jTfeKHyusKk/YmkEAAAAIOmt
WbMm7sw4atSo0Jn/lpube+ihh+4wsm3btm+++WbowB2zNAIAAABQHbRo0aKY
mTE9PT03Nzd04/eGDx/+35GnnXba1q1bQ6f9JEsjAAAAANVB9+7di/+Zxuzs
7NCN33vooYd+lHfllVcWFBQk5OKrV69+5JFHbr/99mEJ1aRJk6Lak08+OYFX
Hj58+L333jtjxoyEPD4AAAAAlEXcX9W4aNGi0I3fu/TSS3/YdtFFFyXqtzJ+
++23P5wEq5ahQ4cm5EUAAAAAgFIbMWJE8SvW888/H7rx37Kzsxs3blwUduKJ
J+bl5SXq4k888UQ5z4HlqH379ol6HQAAAACgdKZOnVr8inXfffeFbvy3MWPG
FFXtu+++mzdvTuDFFy5cWM5zYDk666yzEvhSAAAAAEApzJkzp/gV68orrwzd
+C+bNm3abbfdtielpaXNmjUr4bd45ZVXfve73x177LFHJ1Tt2rWLXszWrVsn
9uInnXTSTTfdVPjiJPzVAAAAAIASWbt2bfFL46mnnhq68V8GDRpUlHTTTTeF
zikBnz0NAAAAQHUQi8Xq1q1bzNJ40EEHhW7859y5c1NTU4t6EvjrGSuApREA
AACAaqJ9+/bFLI0NGjQIm5efn3/QQQdtj0lNTZ07d27YnpKyNAIAAABQTfTo
0aP4N1Bv3LgxYN5dd91VVDJo0KCAJaVjaQQAAACgmhg4cGDxS+MHH3wQqm3Z
smVFn6jSokWLqvjRJ5ZGAAAAAKqJu+++u/il8amnngoSFovFTjzxxKKMZ599
NkhGGVkaAQAAAKgmpk2bVvzSeOeddwYJmzp1alFDJfkI7FKwNAIAAABQTXz0
0UfFL42XXXZZxVdt2LChadOm2wPq1q27fPnyim9ICEsjAAAAANXEpk2bil8a
TzzxxIqvuuiii4oC7rvvvooPSBRLIwAAAADVR6NGjYpZGtu1a1fBPTNnzkxJ
Sdl+906dOhUUFFRwQAJZGgEAAACoPg4++OBilsbatWvHYrEKi8nNzW3Xrt32
W6enp3/44YcVduvyYGkEAAAAoPo4/fTTi38D9bffflthMbfeemvRfQcPHlxh
9y0nlkYAAAAAqo+rr766+KVx1qxZFVPy+eefZ2Zmbr/p3nvvvWXLloq5b/mx
NAIAAABQfYwZM6b4pfHRRx+tgIxYLNatW7eim7700ksVcNPyZmkEAAAAoPp4
4YUXil8ahw0bVgEZEyZMKLrj2WefXQF3rACWRgAAAACqj08++aT4pbF///7l
3bBmzZqij8DeZZddVq1aVd53rBiWRgAAAACqj23btqWkpBSzNHbr1q28G/r2
7Vt0u3HjxpX37SqMpREAAACAaqVZs2bFLI377rtvud799ddfL7rXkUceGYvF
yvV2FcnSCAAAAEC10rlz52KWxho1ahQUFJTTrbOzs1u1alV0o4ULF5bTjYKw
NAIAAABQrfTu3buYpbHQV199VU63vuGGG4rucuONN5bTXUKxNAIAAABQrVx/
/fXFL41vvfVWedx3wYIFGRkZ22+x3377bdu2rTzuEpClEQAAAIBq5cEHHyx+
aXz44YcTftOCgoJf/vKXRbd44403En6L4CyNAAAAAFQrP/xMlh0qj/c1P/DA
A0XX79evX8KvXxlYGgEAAACoVpYuXVr80tinT5/E3nHlypX169fffvHGjRuv
Xbs2sdevJCyNAAAAAFQreXl5aWlpxSyNXbp0Sewde/XqVXTxiRMnJvbilYel
EQAAAIDqZq+99ipmaWzevHkC7/X8888XXblbt26xWCyBFy+FgoKCoUOH7rvv
vnXq1NkpoX74GqalpSXwypmZmQ0bNix89RYuXBj21QMAAACAHzrqqKOKWRpT
UlJycnIScqPNmzdnZWVtv2xmZubnn3+ekMuWxbvvvlvMs1dy3bt3D/36AQAA
AMD3zjvvvOIXrURNgldeeWXRNYcNG5aQa5bR9OnTy3kOLEcHH3xw6NcPAAAA
AL53yy23FL9ovfzyy2W/ywcffFD0CyHbtWuXm5tb9muW3ebNm7t06VL+o2Di
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
xx9f2ikxkv322+/NN9+smMd55JFHatWqFb1tr732quA3ek+YMCFK2JVXXlmR
VQAAAABQarFY7P77769Xr15pF8QSSElJ6d+///r168vvcbZu3fqHP/yhpFWv
vvpq+SXt0LZt2xo0aBC3rUuXLhUcBgAAAAClsG3btjPPPLO0w2EpNWnS5LHH
HiuPx3nxxRdL8e7vCy+8sDxi4urTp0/cttq1a+fl5QXJAwAAAICI1q1bd+SR
R5ZqLEyATp06/e1vf0vUs8yZM+fEE08sRcZhhx22bdu2RGWUSMTPhfnss8+C
5AEAAABAFEuXLm3btm0pprnEOvDAA8eOHbthw4bSPUVOTs5TTz11/PHHp6Sk
lOLue+yxxzfffJPYFza6ZcuWRYl88cUXQxUCAAAAQPFWrly55557lmKaKye1
atXq1avXgw8++MUXX0TpX7t27dSpU/v379+wYcNS37RmzZpz5swp51c6jvr1
68ftHDNmTNhIAAAAANihbdu2HX744aUe6Mpbs2bNunbtev75599yyy133HHH
2P91zz33DB8+fODAgb/5zW9at26dlpZWxrvUrFnzhRdeCP1X8c8DDzwwburl
l18eOhMAAAAAdiDKB5EUr3bt2vvuu+9BBx104IEHNmvWrHTvXA6osL/iP2x6
h0477bS4tSeddFLoTAAAAAD4sTvuuKN069wee+zRv3//Z555ZuXKlT+6ZnZ2
9owZM6677rqf//znpbt4Rapbt+7bb78d5MX/b9dcc03c4FatWoXOBAAAAID/
8Omnn2ZmZpZ0mjv00EOffPLJgoKCKLeYPXv2WWedlZqaWqoVsNy1atVq/vz5
5f06Rzd+/Pi4zSkpKStWrAhdCgAAAADf69atW4l2uWbNmk2fPr0UN5o7d+7B
Bx9c2jmwvJx00kml/pDrcvL3v/89SvmkSZNClwIAAADAv02ePLlEu9y55567
fv36Ut8uPz//zjvvrFOnTqlGwQTbaaedbr311lgslsDXMyE2bdqUkZERt793
796hSwEAAADgX7777rumTZtG3OVSU1NHjhyZkPsuW7bsxBNPLNtMWFZHHnnk
woULE/I45SHK54DXrl278G8wdCkAAAAA/HPkyJERd7m0tLTJkycn9u5PPPHE
3nvvXba9sDQaN248bty4SvijjD907bXXRnmWwgcJXQoAAABAdZeTk9OsWbOI
69zdd99dHg25ubkPPvhgy5YtyzAclkCjRo2GDx++adOm8niWxHr11VejPFHb
tm0jfigPAAAAAJSTJ598MuJAd8EFF5RrSV5e3vjx48v1w2KysrKqysa4XW5u
buPGjaM82qOPPho6FgAAAIBq7be//W2UIWuvvfbaunVrxSQtWLBg8ODBzZs3
L9us+L26dev269fvjTfeqOTvld6hP/zhD1GesVWrVtu2bQsdCwAAAEA1tWXL
lszMzChD1vTp0yu4raCgYO7cuSNGjDjuuONq1apV0nUxNTW1Y8eO/+///b9X
XnklOzu7guMTqPBFiPjIQ4YMCR0LAAAAQDX1t7/9LcqE1a1bt7CdOTk5H3zw
weOPPz5s2LB+/foV9nTu3PmAAw7Y+3+1adOmY8eOxxxzzKmnnjp48ODx48fP
mDFj3bp1YZsTqEOHDlH+mnbaaad58+aFjgUAAACgOho4cGCUCev5558PXVqt
TZ48OcpfU6F99tln/fr1oXsBAAAAqHaOOOKIuOPVHnvs4XONwyp8/du0aRNx
bOzevXtubm7oZAAAAACqkYKCgp133jnucjVgwIDQpfxz0qRJEZfGQqeddlpe
Xl7oZAAAAACqixUrVkSZrZ588snQpfwzPz+/Y8eO0cfG008/3UdRAwAAAFAx
Zs+eHWWzWrJkSehS/uX9999PT0+PPjb+8pe/XLNmTehqAAAAAJLf9OnT465V
6enp+fn5oUv5t6uuuir60lgoKyvrjTfeCF0NAAAAQJJ74okn4k5VjRo1Cp3J
97Zs2dK6desSjY2pqal/+MMffCA1AAAAAOVn8uTJcXeqJk2ahM7kPyxYsCDK
5/j892J8zz33+M2NAAAAAJSHp556Ku5CVbdu3dCZ/NiUKVNSUlJKOjZu341v
vvnmVatWhX4CAAAAAJLKa6+9FnebSklJ2bJlS+hSfmzw4MGlWBq3S0tL69q1
69133z137tzif8oxJydnwYIF06ZNmzx58tj/88ADDxT+SeH3fvvttxX2vAAA
AABUZvPmzYsyTBV+WehSfiwWi1100UWlHhuLpKent27d+uijjz7nnHP6/5/C
f+/SpUtWVlZaWlrx377nnnuefvrpo0eP/uSTT0K/JAAAAAAEs3nz5ihvwh03
blzoUnagoKCgT58+ZR8bE6Vly5ZDhgxZvHhx6BcGAAAAgAB23333uAvSOeec
EzqTHcvPz+/bt28FrIjRpaam9uzZc9asWaFfGwAAAAAq1AknnBB3O2rQoEFu
bm7oUn7SzTffXLoPiClXPXr0+PTTT0O/NgAAAABUkFtvvTXKavTyyy+HLqU4
EyZMyMzMLO/xsKRq1KhxzTXXFP+hMwAAAAAkh7fffjvKZHTZZZeFLiWO+fPn
d+zYsbzHw1Jo06bN+++/H/rlAQAAAKB85efnN2rUKO5YlJWVFbqU+PLy8m6+
+eaMjIwK2A9LpE6dOtOmTQv98gAAAABQvs4777woY9F7770XupRIvvzyy/79
+6emppb3flgiKSkpQ4YMCf3aAAAAAFCOnn766ShL0e233x66lBJ4++23O3Xq
VN77YUldcsklsVgs9GsDAAAAQLnYunVrrVq14m5EZ511VuhSSuz999/v379/
lL/fCnPhhReGflUAAAAAKC8nnHBC3IGoXbt2oTMppa+//nro0KEHHnhgBQyJ
Ufz5z38O/ZIAAAAAUC7uuuuuuOtQRkbGtm3bQpdSJkuWLLn99tt79uyZlZVV
om2wYcOGe++99/7773/QQQftvvvuKSkppRwZ/1daWtrTTz8d+sUAAAAAIPFe
f/31KAPRBx98ELqUhFm3bt2rr7760EMP3XLLLQMGDDj99NNP+z+9evW6/PLL
R40a9eSTT86ePXvt2rU/+t5t27a99957o0ePPvroo9PS0koxNtaqVWvhwoVB
HhwAAACA8rNu3booP6X24osvhi6l0lm9evWwYcMaN25c0rHx8MMPLygoCJ0P
AAAAQII1atQo7jQ0adKk0JlUUt99990111yTkZFRorFx1KhRocMBAAAASLDW
rVvH3YXuvffe0JlUav/4xz/23HPP6Etj7dq1Fy9eHLoaAAAAgETq3Llz3F3o
xhtvDJ1JZbdq1apOnTpFHxtPOumk0MkAAAAAJNJRRx1laSQhsrOze/ToEXFp
TElJ+eijj0InAwAAAJAwhx9+eNxRaNiwYaEzqRpycnKOPvroiGNjr169QvcC
AAAAkDAdO3aMuwjdddddoTOpMlavXr333ntHWRozMjKWLVsWuhcAAACAxGje
vHncRWjMmDGhM6lK3nzzzdTU1Chj46BBg0LHAgAAAJAA2dnZURahxx9/PHQp
Vcwll1wSZWls3rx5LBYLHQsAAABAWX388cdR5qD3338/dClVzHfffdewYcMo
p+u9994LHQsAAABAWY0bNy7uEJSSkrJp06bQpVQ9N998c5SlcciQIaFLAQAA
ACirPn36xB2CmjRpEjqTKmn16tW1a9eOe8A6duwYuhQAAACAMonFYi1atIg7
BB133HGhS6mqzjjjjLgHLCUlZcOGDaFLAQAAACi9N998M+4KVGj48OGhS6mq
Jk+eHOWMzZo1K3QpAAAAAKV3wQUXRFmBZsyYEbqUqmrt2rXp6elxz9jEiRND
lwIAAABQShs3bqxXr17cCahWrVo5OTmhY6nC9ttvv7jH7IYbbgidCQAAAEAp
DRs2LMoPNPbo0SN0KVXbSSedFPeY9erVK3QmAAAAAKWxZcuWXXfdNcrSOGXK
lNCxVG1XXHFF3GP2q1/9KnQmAAAAAKVx+eWXR5kZGzZs6K3TlNFtt90W96Qd
csghoTMBAAAAKLH58+dnZGREWRr79esXOpYq784774x70n7xi1+EzgQAAACg
ZHJycg455JAoM2NKSsp7770Xupcq79Zbb4172Dp16hQ6EwAAAICSufTSS6PM
jIW6d+8eOpZkMGjQoLiH7aijjgqdCQAAAEAJPPTQQxFnxkJvv/126F6Swckn
nxz3sJ155pmhMwEAAACIavLkyWlpaRFnRp8FTKJkZWXFPW9XXXVV6EwAAAAA
IpkwYUJ6enrEmTEjI2PevHmhk0kGX375ZZQjN2bMmNClAAAAAMQRi8Wuu+66
lJSUiDOjHzAjge67774oR+7dd98NXQoAAABAcVasWHHiiSdG3xgLZWVlbd68
OXQ4SaJz585xj1xGRsbWrVtDlwIAAADwkyZNmtSwYcMSzYxpaWmvvfZa6HCS
xLx586L8MO0RRxwRuhQAAACAHXvttdcOO+ywEm2M2w0dOjR0O8njrLPOinLq
br311tClAAAAAPyHdevWjR079vDDDy/FxljohBNOKCgoCP0QJIl333034m8H
nT9/fuhYAAAAAP7l448/vuuuu7p3777TTjuVbmMs1Lp167Vr14Z+FJJEbm7u
L37xiygH78ADDwwdCwAAAFCtzZs3b+TIkT179tx1111LvS4W2WeffZYvXx76
mUge1113XcSzd88994SOBQAAAKiOFi1adPnll++9995lXxeLZGVlffnll6Gf
jOQxffr01NTUKGevfv363333XeheAAAAgOrlhRdeOO644yL+4rvoWrduvWTJ
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
8ptvvgndC8V577330tPTo4+Nf/nLX0InAwAAACSJL774IjMzM+Iy065du5Ur
V4ZOhuIMGjQo4nnePjZee+21+fn5oasBAAAAksHVV18dfZlp1arVsmXLQifD
T9q0aVOLFi2iH+lCXbt2NaEDAAAAlN2GDRt233336LNM06ZNZ82aFboaftJL
L72UlpZWorFxt912++tf/xqLxUK3AwAAAFRtTz/9dIlmmZo1a95+++3ec0ql
ddttt5XoSG/XuXPn999/P3Q7AAAAQNXWq1evUswyS5cuDR0OOxCLxc4888xS
jI1paWkXX3zx2rVrQz8BAAAAQFW1cePGVq1alXSWqV+//pQpU0K3ww5s2bLl
gAMOKMXYWKhhw4b333+/N1MDAAAAlM5HH31Uu3btUswyv//977ds2RI6H35s
xYoVbdu2Ld3YWOiYY47x+UcAAAAApfPss8+mp6eXYpNp06bNwoULQ+fDj61a
tWr//fcv9dhYt27dRx55JPRDAAAAAFRJkyZNSk1NLcUmU79+/bfffjt0PvzY
hg0bDjvssFKPjYXOOeecrVu3hn4OAAAAgKrnnnvuSUlJKcUgU6dOnZdeeil0
PvzY2rVrjznmmLKMjV26dFm/fn3o5wAAAACoeiZPnpyRkVGKQSYtLW3cuHGh
8+HHYrHY8OHDC89nqcfGNm3afP3116GfAwAAAKDqmT59et26dUsxyKSmpk6a
NCl0PuzAM888U69evbKMjStXrgz9EAAAAABVz4IFC/bdd99SDDKZmZl///vf
Q+fDDnz++efHHntsqcfGDh06rFu3LvRDAAAAAFQ9mzZtuuiii0rxaxsbN268
ZMmS0PmwY08++WRWVlbpxsZOnTpt2bIl9BMAAAAAVEmvvvpq8+bNSzrItG3b
1odoUGlt3br1xhtvrFmzZinGxt69e4fOBwAAAKiq1q5de8opp5R0kOnevXss
FgvdDj9p6dKlv/3tb0sxNo4aNSp0OwAAAEAV9pe//KWkPwN23333ha6GOJ59
9tkmTZqU6GBnZGS89957ocMBAAAAqrDZs2c3btw4+iBTp06dxYsXh66GONas
WXP88ceXaGxs3759Tk5O6HAAAACAKmzRokV77rln9EGmS5cuBQUFoashjsJT
esMNN5To84+GDBkSuhoAAACgavv666/btm0bfZC56667QidDJGPHjk1LS4t4
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
LeVtW2nLe9GiRYbyHj9+vLG8Dx48eOvWLdUxXUdMTIwo782bNz+vvE+ePPnw
4UPVMV2EKO8TJ04Yy3vKlCmG8p49ezblbQ+xsbGG8v7ll1+M5S2G3VDeu3bt
orwhr3z58sZJhZgS2Pvp7t279/rrr5ue23zwwQcsQA2nIM7NixQpYizduXPn
2umJxIS8YsWKxif6+OOPZf7VF198Yfj7OnXq2CmYa7t//774qhXzmbfffrt0
6dIZM2aUOX8sVKhQs2bNhgwZIqagUVFRqg/CmZw9e1ZMIz/99FNxqp47d26Z
0fbx8alQoUL37t3FLEhM7zl1lffgwQMxRTeU96uvvqqpvD///HNR3tevX1d9
EM7k/PnzYqIuyrt+/fry5f3aa69169ZNlLeY3lPe8kR5b926dcKECWFhYWXK
lDG9KrhRwYIFmzZtKsr7559/vnbtmmVPvWfPHpnnEvLmzat14WVbqVq1qtl4
b731lvwDXrhwQZT3gAED3njjjTx58sgcfpYsWQzlPXny5D///JNTV3li8vnH
H3988803nTt3li/vkJCQJk2aDB48WJR3ZGSk6oNwJqK8Fy9eLMq7QYMG4m0r
Wd7iFPvdd9+dNGnSzp07KW95ory3bdv27bffdunSpWzZsk+sV/88BQoUaNy4
8aBBg5YuXap2bQqnc+nSpZ9++mngwIENGzY0e8+pgbe3d7ly5ShvmCbeicaa
EZ+H9u7viTps3bq16dJt1aoV5QpnIebVxtJt2bKlXd9BBw8edHd3NzyXmMab
PeVMSEgIDAw0/P2aNWvsF8z13L17d8GCBWLGIjm9Ma148eJDhw5lkUwTxCxF
TODFQFk/2gEBAZ06dVq9evWDBw9UH5aDMpa3mChS3jqIiIgQQ0R56yMuLs7m
5X3q1CmtMWrWrCn5FJ07d7bHOJgl0+seM2aM2cexYXn7+/tT3qbZo7xPnjyp
+rAc1/Hjx21e3tZvFumq4uPjDeWdJUsWylsHJ06coLxhVzNmzDAWycqVK+36
XKmpqR988IHpQq1Wrdq9e/fsGgOwIePZRNasWXW4ei0sLMz4Ztm7d6/pP546
darhL4sUKcKVMJIOHDggviv9/Pys/9p9goeHR40aNX788cfk5GTVR+koEhIS
Jk2aVKZMGZuPtpArV67evXufPXtW9VE6kPDw8Lffftse5e3u7l69evUffviB
8jZKTEycMmVKuXLlbD7aQs6cOcWE6syZM6qP0oEcPny4c+fOprcatIwo79df
f33hwoVJSUmSYXbt2pV2dWXTZs2aZdeReZo4o5eJ98svvzzvEUR5izlG2rui
bChHjhzvv/++BQ1eF3bkyJGuXbsGBATYfLRFeYuTr/nz58uXt8sTp6LTpk17
7bXX5N/F8oKDg3v27EkHLK1jx469++672bNnt/loi/KuUqXK3Llz+f3C6P79
+zNmzKhQoYI9yjsoKKhHjx7//POP6qOEQ2jUqJGhMIoWLWrvXsRXX31lujiL
Fy+u6i4SwAJnz541Vu+wYcN0eMaIiAjjMw4ZMsTEXz58+DA0NNTwl+JsV4ds
Ti01NXX16tViNmLrr9xnyJkz59ChQ9P5endXr1798MMPn9hU3R7EPKpx48Z/
/fWX6iNWifLWWWRkpChvX19fe4+2obx3796t+ohV0rO8c+TIIcpbckGwTp06
ST5s5syZ9+/fb++BSuvMmTMywZ65vLPO5b1r1y49R8bROGx5u6pr167pU94Z
Hq9r9Oeff6o+YsV0K+/g4GBR3um8zxATEyMGISgoSIcBFy+rDovywZHFxcUZ
V/YYPXq0XZ9rwYIFpgsyb968ly5dsmsGwLbGjh1rqF4/P7+7d+/q86TGXwfK
lClj4s/Ed7cxm3in65PNSa1ateq1116zzzftc+XMmXPMmDEJCQmqj15v169f
/+ijj7JmzarnaIszVvHG2bNnj+qjV0B8FFSoUEHP0c7wuLzFpCI+Pl710est
Ojr6448/1qGFnpYo7wYNGqTPfuPatWsrV66s52hneNyQGTVqlNkv1qtXr8pX
gnjL6HmFquRKkk+cld+4cePTTz/VpwmTVv369dNnQ2bdunX6NGHSCg4OHj58
uG5zWscRExMzYMAA/cu7Xr16O3bsUH30CmzYsKFatWo6j3ZQUNCwYcPS4daN
sbGxgwYNssc1/6bVqVPHTjulwvGtWLHCWAkXL1603xOtX7/e09PTRB36+fkd
O3bMfgEAe2jXrp2hgHv37q3bk6Zt2ptY8ViceBr+pn///rplczri3NxON39J
CgwMnDhxYjpZmTYxMXHo0KE2WX7HYo0bN04/91NT3nq6d++eI5R3+rmfes+e
Pfr/QpRW9uzZzZb3hAkT5B8wNDTU4j1otPrtt9/M5vHy8jIuPW0obx8fHysG
zFrijDUiIkKf8VHu0KFD1atXVzjahvJOJ6thUN46O3LkSI0aNRSOdkBAQPop
7/v37ztCef/999+qRwJ669y5s6EAxNeZ/Z5l//79pss7U6ZMtLvhjOrVq2eo
YT375DExMR4eHobnfd4aSufOnTMsvuHu7n7+/HndsjkRcXr45Zdfmv4FRDf1
69fX7QRTFTHHePnll1WP9CPZsmWbP3++6vGwL1Hew4cPd5Dyrlu3rstvcnr8
+PHSpUurHulHsmbNOnfuXNXjYV8pKSmjR4/28vJSPdiP1K5d28RPfuKdqOmS
y5deekmf74KFCxeaDZMrVy7DH584ccJOq+lqJc4m9F/TUmeivMeMGeMg5V2j
Ro3Lly+rHhL7OnnyZNmyZVWP9CNZsmSZMWOG6vGwr9TU1HHjxmXMmFH1YD9S
vXp1l7+b8vTp02p/kjPy9vaeNm2a6vGArgoVKmR49e33xX3mzJkcOXKYKDw3
N7dly5bZ6dkBu7pw4YL42Fy0aJHOz2v8KXDAgAHP/APx3w1/0KpVK52zOYWL
Fy/qf0eSacHBwWvXrlU9MPYydepUm2yUaUPt2rVz1dtnxMxZ/zuSTAsKCvrt
t99UD4y9iHNDtZcyPq1NmzauulTmlStX1F4M87TAwMBff/31eYH/+ecfTZ9+
xYoVM9G6tJU5c+aYTRIaGir+UpwgOFp5t2zZ0lUXWxMvfa1atVQP8H9kz559
+fLlqgfGXsQbQe21Xk9r3rx5bGys6oGxi2vXrtWtW1f1AP9HQECAC3chFixY
oPNaLmY1bdo0JiZG9cBADwkJCYYXXUwh7LT8b1RUVOHChU2X3OTJk+3x1IAL
+/bbbw1vHzEjffr/e//+/eDgYMMf7Ny5U/94Dm7FihX6r8MjqXv37i62+aP4
cmnSpInqcX22/Pnzm93A3emsXLnSkcvbxTZ/vH37drNmzVSP67OJ8na9jZDW
r18fGBioemifzUR5T5w4UdNDhYSE2PtGsxkzZpiNUaRIEeMSMY4mX758rrcw
6YYNG5yxvJ1UfHx8+/btVY/rs+XNm9f1NkLauHGjPhuRWKBTp06JiYmqR8iW
EhISOnTooHpcn02Ud/pcdzcd6tWrV7Fixex0RVZcXFy5cuVMF9vAgQPt8dSA
azPuee3r6/v0lvGLFy82/H/LlCljXGQJBpMmTTLee+6YGjRo4DI7+ERGRr7y
yiuqR9QUHx8fExcjOZ0pU6Y4eHnXr1/fZcr7+vXrDnJL6fNkyZJlxYoVqsfJ
ZqZPn+4gCwI8T926dZ+5j4b4Im7btq2mh/L399+8ebP9BnPq1KlmMzjahehP
EPFc6WKkWbNmOXh516xZ02WulI6Ojla7iLFZmTNnXrJkiepxspl58+Y5yIIA
z1O9enWX2XU9JiamYsWKqkfUFFHe4lxV9TjBiSUlJRk3pHiet99+mzYIYAHx
xsmePbvhfXTy5Mkn/r/GGyfFN7uKdA5KDJrxpnIHV7JkyStXrqgeMGv9888/
BQoUUD2W5rm5uX3zzTeqR8sGnKW8S5Qo4QLlferUqZCQENVjaZ4o7/Hjx6se
LRtwlvIuXrz4M9e1i4uLe+mllzQ9lIeHx7Bhw+y0odL06dPtNAJ6EuU9duxY
e4yPzpylvEUNu8C6dqdPnzauHubIRHmPGTNG9WjZgLOUd7Fixey6Pa4+zp49
+8ILL6geS/NEeQ8dOlT1aMEpiTN6414zz1O/fn0Xu0kQ0JNxU8Inrkn++++/
Df/dz88vISFBVTwHZMOpjvh+DAgICAkJKVmyZNmyZV999VXxtR4YGGjDNa5L
lChx48YN1WNmuTNnzuTNm9dWo+Ht7Z0jR47Q0NCyj4mTnXz58okKt9Xjixd0
6tSpqsfMKoMGDbLhaBjKWxShncpbvILR0dGqx8xy58+fz58/v61GQ4fy/u67
71SPmVXE+YitRiPD44W5ChQoYCjvMmXKiPIOCgrKlCmTrR7/xRdfjIqKevoo
Tpw4IZ5a66PVrFnzwoULNh/SH374wVbHa5q9y1tw9p+Khg8fbsPRsHd5FylS
xKk3sLt06VLBggVtNRqZM2cODg4Wg2wo7+LFi4uvBn9/f1s9vjBu3DjVY2aV
r776yoajYe/yFp9UOiyTaz9XrlwRh2Cr0dChvF2jlw6dmT3lEeXqMvdPAUp8
8MEHhndTnz590v73Xr16Gf577969VWVzQMOGDbPy21B8t7Zp02bs2LFbtmx5
3h0WSUlJBw8enDlz5nvvvSdm41Y+Y7ly5Zx0yxKbzOTF10Tfvn3F6fDx48ef
XiLAQJzvrFmzRry4DRs2FDMia57O3d1dPJfOA2UrI0eOtHK0xYl/69atv/76
682bN5so7/Dw8FmzZvXo0aNo0aJWPqM4R3DSG/HETN76CwZeffVV8dG9cOHC
iIiI5120dv369bVr14rybtSokZX3sbq5uTnvfuuiLK0cbV9f35YtW4ozmk2b
Nj1vJxFR3ocOHTKU94svvmjlM5YuXfqZ76Pt27db8EmVLVu277//3rY3Aa1Y
scLKYzRBHP6HH364YMECE+UdFRUlynv48OGNGze2vrxnz55tw8HR0/jx460c
bUN5f/XVVybKOzk5+fDhw2KUevbsWaxYMSuf8eWXX3bSLUvEnMH6udkrr7xi
KO+///7bRHmvW7duxIgRTZo0sXJDJVHeYlap80DZitYlap8mPv1atGgxevTo
jRs3Pq/qDOU9Z86c999/X+ul408rWbKkk25ZIqrO+nd3qVKlxPmjmDAcO3bs
eeUdHR39+++/i/Ju2rSp9eXNhtTQxOzaL2KKLubPqmMCzs24nLs4CTX+x7i4
OOMuY/ZeT96JyCxI9TyBgYHdu3dfv369BWuhHz16dOjQocWLF7f42evUqSNm
UPYYE/sRZzrWnKdXqVLlm2++seAaHlH8S5cuffPNNy0+afX09BRTWXuMiV1Z
cxdk9uzZu3XrJmaMFpS3mIV++eWXJUqUsPjZa9as6XS3Nty+fduad3SlSpUm
TJhw7tw5rc8bHx//888/t2vXzuJZvShvceZrjzGxK5ktkp8nICDgnXfeWbt2
7f3797U+r/gCHTZsmDjltPjZq1ev/szyFq+ju7u7BQ9YsWJFG27xJj7rLD40
EwnHjx9/9uxZrWFEeS9btqx9+/YW7wLs4eHhjLvbi9N5caJt2SH7+/t37dp1
zZo1FpR3RETEiBEjSpUqZdlTZ3j8TW3B86p19+5daw65QoUK48aNs6C8ExIS
fvnll7feesua8nbGBaUXLVpkcXn7+fl16dJl9erV9+7d0/q8x48fHzlypDWL
hItvagueVy3xKWrNwtHly5f/+uuvT58+rfV5RXkvX768Q4cOWbNmteypxRei
Ky0oDbsSxWb6UyU4ONiCMgbwhN27dxveU+LL1Pgfje1HMQlUmM2hiLMPy07r
ihYtumDBAptstihODxs3bmzZjKtz587WB9CNGK6qVatacJienp6dOnU6duyY
9Rnu3LkzceLE3LlzWxAjW7ZsNsmgG3GaadkWMEWKFHGE8n777betD6AbMVyv
v/66BYdpKO+jR49an0GcLFtc3uJE4MiRI9Zn0M3mzZst2yOjcOHCorxt0gmx
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
adKkiWTyPHnyOMJiZSKz/CKH/v7+eq5IZtbevXvl18P8/PPPVed9JDw83MfH
RzJznz59VOf9j+bNm0smz5UrlyN8Eorylt9h08/P7/z586Yf8Pbt2927d9e6
y7kOTCw1qacjR47IbzHQq1cv1Xn/Q3414xw5cjjIJ2Hnzp0lM4vX5fTp06rz
/h/xSSi/Huann36qOu8jx44d8/X1lczco0cP1Xn/o127dpLJg4KCzp07pzrv
I+KkSTJz1qxZT506pTrv/zl8+LD8epgOstRkRESEcSdTs7p166Y6739IftE7
7CJXTueHH34wPdR58+Z1hEkg4MKenrXqs3WygxNnajJfBx4eHjt37lQd9n/i
4uLk7/GpVq1acnKy6siP3Lx5U/4n+Pr16zvOrd+zZs2SjC1O+detW6c67/9M
nDhRMrYo723btqnO+z/x8fHySwhWqVIlKSlJdeRHxCdJaGioZOzatWs7zq3f
8+bNk4wtylufTT9lyC8L4O7urs9G6jISEhLklxCsVKmSTHlv2bLFmo2hba5G
jRqOU95mT0CMRHk7zk2m06dPl4wtylufjdRl3Lt3r1SpUpLJy5cvf//+fdWR
H7l79678UhKvv/6641yJtHjxYsnYGRzpJlP5ZQHEu3Lt2rWq8/6PKNdXXnlF
MnnZsmUdpLzFnEr+S6dy5coOcsogLF26VDJ2hscrg6nO+z/z58+XzLxnzx7V
YV3Bxo0bTV/E4ufnZ2LtawA20bJly7Tvu7x58zrOuYBCqampMr+aDRkyRHXS
/zh48KD8xYEffPCB6ryP9heuW7euZOCgoCBH25ftibePCQEBASdPnlSd91Hz
Qf76ukGDBqnO+x+HDh2SD9+zZ0/VeR8tQ21cnsKs7NmzO8Llo2m1adNGMry/
v/+JEydU5/13+/bt8vtNf/LJJ6rz/sfhw4flw7/33nsyj5mUlDR58mTxySn5
sPbj4eGh5871Mt566y3J8L6+vn///bfqvP/u3LlTvkIc6kL6fx9fiSR/cWCX
Ll1U5320q1TTpk0lA4vpoqNdGGNcEMmsbNmyOcLp9u7du+Wvr+vdu7fqvP9x
/Phx+fBhYWGq8z4q7xYtWshXiNkL6XUmf5l01qxZxXer6ryP7m2RrxBHmwo6
I3E6LF56E4Msvkwd51IKwIU1btw47VvP0U6+FDJ7M3LRokUd5KfJtD7++GPJ
7zJh/PjxCqOmpqa+++678mkdcHnJyMhI+fs4ihQpovZGe3E2Ib9+XeHChR1t
eUlhwIAB8gWjtryFnj17yqc1u/6e/jSt5ykKRvy9wrQRERHy69cVKlTI0dbf
+1fLep7C2LFjJR/21q1b4pHlP6nswQF3Ao2OjpYvmIIFC6ptJZ04cUJ+/bqQ
kBDla0c/bejQofIFo3yZFLObCKTlgMtLxsTEyP/EIApG7Q8Bp06dMrt+nZED
rr/3r8bldocPH6427UcffSSf9ptvvlGb9mmxsbE5cuSQzF+gQAG1n96nT5/O
lSuXZNpSpUopjOoazp49a/rzxM3NzXEudgVcW7169dK++xzhpx8HcfToURPX
D7i7u//xxx+qMz6Dpk2chW+//VZJztTU1H79+snndMwts//VuIlzsWLFVDUb
T548KT/VERznzru0EhIS5O+1F3MJhe27Tz/9VH60Te8prNC0adPkj+Lll1++
ceOGkpxiJi+/SZPgOLd7p5WYmCi/R7ko7+nTp8s/+J07d8aOHZs7d275UbIV
Dw8Px7nzLi1NmzgXLlxY1emqOG/StMvPr7/+qiSnaZo2cRZGjRqlKqqmLfYc
c8vsf7WsgCG89NJLqu4ZOX/+vPwmTRkc6XbvtER5y99rL0ycOFFVVE09/1de
ecUxP7017VEuXhpVv4RevHhRftYqLFu2TElOlxEdHV2kSBHTgzxp0iTVMYH0
onr16sa3XokSJRyzmaPKzJkzn7eo/ujRo1Wney5xEi3/pZZBxa+rYt7SpUsX
+YReXl6OcPPaM6WkpFSsWFH+WEJDQ/VfxnzPnj3y18MI7dq10zmhvNWrV8sf
iHj/6n+6Ksq7W7du8iE9PT0d9iceUd6vvfaa/LGI+bz+5b1//37562GEli1b
6pxQnqZPb1HeI0aM0PT4Dx48WLFiRbNmzeQXIrCeA16ObiAmPGmnQGaFhITo
v6HDwYMHNf1I1Lx5c50Tytu6daumjYoGDhyo86T04cOH77//vnxCDw+PAwcO
6JlQnhi6atWqyR+LmJzoX97iu0/Tj0QNGzbUOaG8zZs3yx9IhscbwOlc3uIL
vXfv3vIJ3d3d//rrLz0TytP66V2oUKF//vlH55BHjx7NmzevfMj69evrnNDF
xMfHm52yDhgwQHVMIB2pUKGC8d3nyN0zVX799Vfx9ZT2M0pMin744QfVucyQ
34faoHPnzrrdKnvjxo2aNWtqiucgO5Y+z5EjRzSdtufIkWP79u26xVu0aJG3
t7d8PH9/f7W3wZolv7mwwdtvv61becfExNSpU0dTPEdbUe0JBw8eFGfT8ocT
HBys5/XeS5Yskd8FPsPjJaccbcHAJ8iv/mrQsWPHxMRErc8SHR09ZcqUunXr
yi/9ZxlH/tni38d3JcuvHygEBgbquZHQzz//LL8LfIbHi5I52oKBT9D0I6Oh
fnRb6ODmzZtvvPGGpngffvihPtksc+zYMU2Tk+zZs2/cuFG3eMuXL5ffBV4Q
H/UOst/088iv/mog5uq6LXRw+/btRo0aaYonuSCwKhEREZq+vwICAtavX69b
vFWrVmkqbzFRP3PmjG7xXE9SUlLDhg1ND3KnTp24pArQU9o22oULF1THcUTJ
ycnbt2+f8Zg4xXDAtRmfduPGDU1XQQhlypTR4brBLVu2aLpNJsPjRUsccMHA
J4wcOVLTQYnJv/gn9r4nJS4uTkwUNQUTfvzxR7umst61a9fkl+gxKF26tDjn
snewbdu2abpNRihevLgDLhj4hC+++ELTQXl6eg4fPtze5S3GrVevXpoukcrg
wNfXGV2/fl3TJZoZHt/gZvGeDuL086effuratetLL72kdTDNKlasmAMuGPiE
8ePHazooUd5Dhw619+72orx79+6t9RWZM2eOXVNZ79atW1rnACVLljx06JC9
g+3cuVN+7QKDF1980fHLe/To0ZoOysPDY8iQIfYu78TExL59+2ot7++//96u
qawXExOj6Rq2DI/vJgsPD7d3sF27dhUuXFhTsNDQUAdcD/MJX3/9taaDEuU9
ePDgBw8e2DWVOGfp37+/1vJ2wOVenUhqaqqYxpge4Xr16tn7pQeQlnhjGi92
qlatmuo4sKV169Zp/ZrLnDnzyJEj7fQ5fPPmzR49emiNJOozIiLCHnls6+HD
h1WrVtV0aMJrr71mvxOo33//Xet5U4bHl//ZKY9tWVDemTJlGj58uJ1+Kbh9
+3avXr3c3d01RRLvuCNHjtgjj20lJydbUN7lypU7ePCgnSJt3LhR63lTBoe/
vs5IvHktKO9hw4ZZWd6xsbFr1qwR527du3evXbt2wYIFTe/eaDaSDg0i66Wk
pNSqVUvr0ZUpU2b//v12irR582azK009rW3btnbKY1vbtm3T+lGZMWPGL774
wk6/Od65c6dPnz4WRLLf55sNWVbepUuX3rt3r50ibd26tVixYlojtWjRwk55
bEscndZa8vLy+vzzzy24NF3G3bt3+/Xrp+nGBEMk+xWADYnyrlu3rqZDy/D4
t7k9e/bYKZL4fHvppZe0RmratCnX2llDvINMj7D4ynb8zjngYm7dumV8D4qT
C9VxYGOaNuo1evHFFxcsWGDDX7RFmY0ZM0brRWgZHq9CJpLYKoa9Xbx4UeuV
SBkeXx7zzjvv2HZxpB07djyxp7ykUqVKOdEX8cCBAy04RnH+Pn/+fBuWd1xc
3IQJE7ReQmwwc+ZMW8Wwt0uXLllQ3uLspmvXridPnrRhkn379jVr1syC0RaT
/9u3b9swiV0NGjTIgmMU5T1v3jwblnd8fPy4ceMs+PQWNG1Yo9bVq1e1XomU
4XF5d+7c+cSJEzZMsnv3bq2rQxiI8hZftTZMYlfDhw+34BhfeOGF2bNn2/DH
UPF9Jz69LdsmyfGvrzOKjIy0oLzd3d3ffvvt48eP2zBJeHh4q1atLLh2unDh
wrGxsTZMYleWlXehQoVmzZplwx9DExISJk2aZMFLn0HphjVaXbt2TdOGWQai
vDt16mTbO7kOHTrUpk0bC8pbfLLFxMTYMEl6Y3bvQvHmUrXjFZCebd++3fg2
dMydlGGNlJQUManT+pVnEBISMnnyZCv7TmfOnOnXr5+mhUrSGjJkiK2GQh97
9+7VtCKikThjbdu2rZVXyIgJ6rJlyzRtT5OWONty8AW+niDKu2nTppYdbIEC
Bb777rs7d+5YEyA6OnrYsGGBgYGWZejTp4+thkIfu3bt0rSinZGY0ovp9759
+6x5dvFyb9myxYKrFwzEy3T69GlbDYUOxPFa1nES8ufPL84TrSzvGzduiPPl
oKAgyzL07t3bVkOhj/DwcMsu4BTl3bJlSyv3TTDs1FOlShXLRjtHjhxnz561
1VDoIDU1VZzmW3awefPm/eabb6z81eDChQuffvqpn5+fZRkcfHHdp4nZhWWT
E1HeLVq02L17tzXPLl7ubdu2NWjQwLL1GcTLZNuGp72J433zzTctONIMj8t7
woQJVv5qEBsbO3r0aMt+IRK6detmq6HQx8GDBzUt12wkyrtZs2ZibmPNs4uX
W5xNN2zY0LLy9vX1ddgtL53CypUrTV9FLKYx9tjrKioq6u233/7kk08cf4Ev
QBXj8kTi49HKsxI4psTExMqVK1vw3WeQOXPmJk2azJs3T9OvyWIOP27cuHLl
yln8vBmcdtlecbao9S6VtEJDQ8Xpz549e+SPPSkpad26dZ07d/b397f4ebNl
y+YUN4I94e7du2XLlrX4qDNlytS4ceO5c+dq+jX50qVLkyZNqlmzpjUvtHhb
PXz40H4jYyc//vij1vvC0nrhhRfErOyvv/6SL+/k5ORNmzb17NlT0/6kTxCf
Y+I8164jYw9xcXHWfIqK8m7UqNGcOXM0lffly5cnT55sZXmL57X3Kp32sGbN
Gmu25C5UqFD//v3FSWtKSorkM4pR2rBhQ9euXbNnz27x8/r4+Djs/rAm3L9/
34K7eo0yZszYoEGDWbNmRUdHyz+pKO9vvvmmYsWK1ixJ2qpVK/mX2HEsW7bM
mjd1wYIFP/rooz///FP+2MV33JYtWz744AMLLjkzEi+0npvU2IqYe1eqVMma
o7agvK9evTp16tQ6dep4enpa/NR169a19yqd9iDm3tYcdUhISL9+/Xbu3Kmp
vLdu3dq7d+/8+fNb/Lzihf7999/tOjKuTXwiiQmeiRHOkiWLndYBMN42uHTp
Uns8PuAC6tevb3ibFCtWTHUW2MutW7deeeUVi78HDcS0PDQ0tGXLll9++eXi
xYvXr1+/f//+s2fPnjp1as+ePevWrfvhhx8GDhwopkaW3anxhMaNGzvjVMdg
7ty51m+skC1btsqVK/fo0WPatGmrVq3asWPH33//LQb86NGj27ZtW758+cSJ
E7t06VKmTBnLLjNLS3xNi/mS6mGzUExMzMsvv2zlCIjX64UXXmjRosXQoUMN
5b1v3z4x2qdPnzaU96JFi0R5N2zY0CblXbt2bef9DXTGjBnWl3fWrFnFWdh7
7733zPIWpwzfffdd165dy5Yta3oOKcPLy2vNmjWqh81CsbGxpUqVsnIEZMr7
s88+a9SokTUNAaOaNWvaacExHVjZSzcQ5V2xYkVR3t9///3KlSufWd7vvPOO
TcpbnKjquZuqbd29e/e1116zcgQyPO7xNmvW7IsvvhAvn6G8z5w5I8pbnGCK
s3hR3oMGDRLlbU1DwEh8ejvFtoDPtGDBAuvL28fHp0KFCt27d586daoo7+3b
txvK+9ixY4bynjRp0rvvvluuXDnLrqJMy9PTU8x2VA+bhW7fvm3NL6FGhvIe
MmTI88p78ODBYs6sdaOlZ6pSpYrjb3L0POI0xIblPWXKlCfKW/xvUd6TJ0+2
VXl7eHgsW7ZM9bA5sePHjwcEBJge4bVr19rjqZOTk43LbjjFiqaA/sSXoPHn
+06dOqmOAzu6fv16iRIlrPxO1E2dOnWc90TVQExFbL6Lq52IU91ff/1V9YBZ
RZS39c1G3dSoUcN5Z/IG4gTT+vm8PjJlyuS8J6oGUVFR1jcbdVO9evW4uDjV
Y2aVmTNnOkt5Z8yY0dlPVGNiYsqUKaN6IGVVrVrViZYyfqbZs2dbc2WjnsQZ
yuLFi1UPmFVEeduk2aiPypUrO9FSxs80d+5cZylvT0/PRYsWqR4wJ3blyhWz
3XVRD3Z69nXr1hmeIiAgwBnv4AB0IM6/jG/GCRMmqI4D+xJnfxYvcaand999
1xnvKn3aypUrrb9exd6Cg4Nd48c4Ud716tVTPZzmde3a1TXmJKtWrbL+B317
CwoKst/+knqKj4833oDgyN566y0b7tah0OrVqx2/vAMDA53xpumnifJu0KCB
6uE0r127dq5R3r/99ptli9rpyc/PzzVWj09ISGjYsKHq4TSvbdu2znuxblqb
Nm2yeHF43fj6+jrvnUSO4Pbt22YvMBg5cqT9AnTo0MHwLGFhYfZ7FsCpvffe
e8b344YNG1THgd2JCY+YS9jxu9M6bm5uAwcOdMblj55HvK0s3i5EB6GhoUeP
HlU9SDYjyrtNmzaqB9WUjz76yDW66AYbN260ZnE5eytQoMChQ4dUD5LNJCYm
OvKnt9C3b19XKu8//vjD4v0UdFCwYMHw8HDVg2Qz9+/ff/vtt1UPqil9+vRx
pfLetm2bxZs96SBv3rxW7iDmUER5d+zYUfWgmtKzZ0/X+A3UYMeOHcHBwaoH
9bny5MnjGj/xqyLeUDVq1DA9yKKk7bfUf3x8vI+Pj+GJnP2mMMBOxBuwUKFC
xrfk1atXVSeCTr799ltrFr23Ez8/v5UrV6oeG9u7cOGClTvj2EnTpk2t3NzQ
AYmPtVGjRjngnY+ZM2deuHCh6uGxvTP/r707D/K5/uMATliLJmeuhHLuJBJJ
zumcRpRmOkahSSTVqHSHTKNosCwNGU1TuhxdyKicHSrNZMtRkiu3DopYt/l9
xs5sO0tfP2u/n89+9/t4/LX/vV/f1zzf3+/n897P5/1eu7ZJkyZRd/ckOnbs
eFob6SeEIN7Dhw8vnPGePHly1O0peJs3bz6TMx3i5/rrrz+tU34Sxcsvv3zm
2w4XuLPPPnvKlClR96bgbdiw4ZJLLom6uyfRpk2b7du3R92egpeenn4mR5bE
SUpKyqRJk6LuTcHbuHFj4dyWIfhNccd9Jo4ePXrK/7p27do1rv8Yeuedd7IH
KleuXOJuug5xtWbNmpwpWbFixUQ85Jd8W7JkSb169eL4U3qagl/e9evXR92V
eDlw4MCAAQMKz7aNqampGRkZRXjKL1y4sE6dOlG3+V/B3VxRenY0j7179/br
16/wxLtUqVLPPfdcUXo8I4/PPvusbt26Ubf5X82aNVu2bFnUXYmXQ4cOPfXU
U4VndTclJWXEiBFF6cn/PDIzMxs3bhx1m//VsmXL1atXR92VeMnKynrooYcK
z7d3yZIlBw4cWDReUT+pxYsXF6pr74suumjp0qVRdyVegng/8sgjhefbu0SJ
Ek8//XQRjncIgjuX4Csrdp/btm0b763+O3funD3WbbfdFteBIHGNHz8+Z1a2
b98+6nII2549e/r06RP5T3BqamrRXhbI8emnn+Z+ijgqLVq0KMLLAjl27959
7733Rh7v0qVLDx48OBkuLIN4X3jhhdF2u9jxRd3vvvsu6mbEXRDvvn37FoZ4
Dxo0KBnivXDhwvr160fb7WLHF3WL8LJAjn379j344IORH+uQkpLyzDPPJEO8
FyxY0KBBg2i7Hbj44ouLxra6se3du7cwxLtUqVJPPvlkMjyOtWjRooYNG0bb
7WLHF3W//vrrqJuR8EaMGBG7z2lpaTt37oxrDX/88UfOw8lTp06N61iQuG66
6aacidmvX7+oyyEawV15u3bt4vjjGtPNN9+8bt26qHsQnuCi7oUXXjj77LMj
6XbVqlUnTZpUhB+GOVFwV96hQ4dIul3s+Pvpa9asiboH4Tlw4MDw4cOj2om9
SpUqEydOLEobqZ1SZmZmx44dI+l2oEuXLkkV74MHDwb3OOecc04k3a5cufKE
CROSKt7Lli276qqrIul2oFOnTkX4UcYTBfEeOXJk+fLlI+l2pUqVXnrppWT4
j3OO5cuXX3311ZF0u9jx7RdWrVoVdQ/Cc+jQofT09AoVKkTS7YoVK44dOzap
4h0nb731VuxW16xZc+PGjfEuIyMjI3u40qVL79mzJ97DQSIKvnVz3w+OHz8+
6oqI0uLFizt37hzaGzTBl3P//v2T6i41t3/++Sf4nTrvvPPC6XagcePGkydP
ToZnM05q6dKlt956a2jxLlWqVI8ePVasWBH1545G+PFu1KhRMsc7MzMzyFto
T8iULFkyGK4I7wYQW3a8a9WqFU63Aw0bNgziXTTOhM2H77//XrxDs3fv3iDe
559/fjjdDjRo0EC8Q453MrzVclLindDmzp0be5vT8uXLh/DVfeTIkZzX07p0
6RLv4SBBffnll7mn5+effx51RURvxYoVwUVIXDesDn4IhgwZUiT3+j5dBw8e
DK5A4v1Ox+WXXz5r1qykeo7xv4QQ77Jly/bv3//XX3+N+rNGLzvejRo1il+3
A61atRLvbCtXrgziHdejvsQ7R3a8472d4GWXXSbe2dauXRtkL66HxWTHe8OG
DVF/1uiFE++WLVuKd7bseKempsav22XKlAmGKMLbof//Dh06FMQ7LS0tft0u
dnyfIvEuQJmZmbFfB0tJSVm0aFEIlbz//vs5g7722mshjAiJaPDgwTkz5ayz
ztq9e3fUFVFY/PLLL0OHDm3atGkB/uYGGWvfvv24ceN27NgR9ecrXIJL+uBn
q1u3bgX7zum5557bt2/fBQsWFOFjX/JnzZo1zz//fLNmzQqw20G827Ztm5GR
sW3btqg/X+ESxPuDDz644447CjbeVapU6dOnz7x581zG5xHcsQbxLtjzZIsX
L96mTZsxY8aIdx7BHeuMGTPuvPPOgn2lunLlyr179547d65457F+/fphw4YV
7HmyQbyvuOKK0aNHOw02jyDeM2fO7N69e8G+Ul2pUqVevXp98skn4p1HEO/h
w4cXeLxbt26dnp6+ZcuWqD9f4XL48OFZs2b16NEjHvGeM2eOeBegYGpUq1Yt
ds6nTZsWTjHB5VD2oCVKlIj3hpCQuC6//PKcGdqyZcuoy6EwWr16dXDT2qJF
i3w/J1OmTJkOHTqMGzfONfwpZWVlffjhh3fccUfVqlXz1+1A7dq1+/btO3/+
/KTazit/fvnllxdeeCH49st3vFNTU9u3b5+RkeEa/pT279+fvSYT+3Ixtlq1
avXp02fu3Ln2OzqlIN7Dhg07w3i3a9duzJgxmzdvjvrTFHYHDhyYOXNmcNNa
vXr1M4l37969P/30U/E+pbVr17744outWrVKSUnJd7zbtm07evToTZs2Rf1p
Crsg3rNmzerZs+eZxPu8887r1avXxx9/fOjQoag/UGG3bt26IN7BbVq+4126
dOk2bdqkp6eHsGddogvi/dFHH9111101atTId7xr1qwp3nHy+++/n/K8qrFj
x4ZTzJIlS3IGveaaa8IZFBLOzp07c59ZOWDAgKgrolA7ePDg999/P3ny5Ecf
fTT4am3atGnt2rXzPMVRsWLFCy644NJLL+3Spcszzzwzbdq0VatWWe/Kn+3b
twf3myNGjOjevXtwM9WwYcOqVavmvuYM7pKCi6K0tLQrrrgiuDkdN27cokWL
du3aFXXhCSmI9w8//PDGG2889thj1157bbNmzerUqXPSeDdv3rxz587ifYZ2
7Ngxd+7c7HgHN1MnjXdwS5sd73vuuSe4hgzi7X/H+RPc+JxWvJ9++umpU6f+
9NNP1rvy57fffgviPXLkyB49egTxbtSo0Unj3bhx4+x4Z2RkLFy4ULzzJ4j3
smXL3nzzzccff/y6667Ljneeh5QqVKiQHe8bbrjhqaeeCuL9448/inf+BPGe
N2/eqFGjevbsmR3vatWqnTTerVu37tWr15gxYxYsWPDnn39GXXhCCuK9fPny
t95664knnogR77p16wbx7tSpUxDvKVOmrFy5Urzz5/fffz8x3rk3bQj+zon3
3XffLd7xtnfv3uAmKPYyYzA7QqvnxhtvzBl3woQJoY0LiWX69Om5J+mMGTOi
roiEdPTo0V27dv31119RF5Isgt/coOH79++PupCkkB1v67eh2bdvn3iHRrxD
Jt5hOnbsmHiHKTveWVlZUReSFMQ7ZOIdicOHD99www2xlxm7d+8e2ovqs2fP
zhm3ePHi9pOB/9K7d+/c89S/YwAAAIAIHTt27J577om9zHjttdcePHgwnHqy
srJyjpwOtG3bNpxxIeEEk7d27do5k6VJkyZRVwQAAAAktdwH157UpZdeumfP
ntDqGTRoUO7R09PTQxsaEsvPP/+ce7Lcf//9UVcEAAAAJK+JEyfGXma84IIL
tm/fHlo9q1atynM804YNG0IbHRLLhAkTck+WqVOnRl0RAAAAkKRmzJiR+9Ta
E1WpUmX16tWh1bN79+60tLQ8j1OGNjoknDvvvDP3fNm6dWvUFQEAAADJ6Kuv
vkpNTY2xzFi2bNlvv/02tHoOHz6c+7zpbM8//3xoBUDCyb2jaf369aMuBwAA
AEhGP/30U8WKFWMsM5YoUWL27Nmh1XP48OFu3bqdWEZQZ2g1QGLZtm1b7snS
q1evqCsCAAAAks7WrVtzn1d7Uq+++mpo9ezbt++WW245sYa0tLTQaoCE8+67
7+aeL6+//nrUFQEAAADJ5e+//27atGnsZcahQ4eGVs/69esvueSSk5YxcODA
0MqAhPPwww/nni/r1q2LuiIAAAAgiRw4cODKK6+Mvcx43333HTt2LIRijhw5
kpGRUa5cuf+qJDMzM4QyIEG1atUqZ7LUr18/nGkLAAAAEDh69Ojtt98ee5mx
a9euR44cCaGS9957L/ajlXXr1rVyAv8lmES5T3R69NFHo64IAAAASBbHjh3L
867lidq0aZOVlRXXMrZs2TJq1KjGjRvHriQwYMCAuFYCCW3jxo2558sXX3wR
dUUAAABAshg5cmTslb20tLSdO3fGY+isrKzPP/98yJAh7dq1K168+CnXGLMt
Xrw4HsVA0TB//vycyVKrVq0QHkUGAAAACLz99tuxl/XKli07e/bsFfm1fPny
b7755pNPPpk+fforr7wyatSowYMH9+/fv0uXLvXq1fv/VxdzVK9e/ejRo1G3
DQqvCRMm5MyXZ599NupyAAAAgKSwePHiUqVKne5aX7T69esXddugUBsxYkT2
ZClbtuymTZuiLgcAAABICv369Yt22TAf5s+fH3XboFD74YcfSpYsGUyW8ePH
R10LAAAAkCyaN28e9cLh6alRo4ZN5+CUVq5caTtTAAAAIEwPPPBAtWrVUlNT
o15BPLXSpUs3bNhwzpw5UfcMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACApPY/KTYP0w==
    "], {{0, 828}, {1742, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
   
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{335.73333333332937`, Automatic},
  ImageSizeRaw->{1742, 828},
  PlotRange->{{0, 1742}, {0, 828}}]], "Input",ExpressionUUID->"4659ee3e-15cd-\
47e7-864f-e67336039fff"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MZ\[Gamma]", "=", 
     RowBox[{"Contract", "[", 
      RowBox[{
       RowBox[{"AZVCVC", "[", 
        RowBox[{"\[Mu]", ",", "\[Nu]", ",", "\[Alpha]", ",", "\[Beta]"}], 
        "]"}], ".", 
       RowBox[{"propVC", "[", 
        RowBox[{
         RowBox[{"q", "-", "l"}], ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MZ\[Gamma]L", "=", 
     RowBox[{"OneLoop", "[", 
      RowBox[{"l", ",", "%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MZ\[Gamma]LPV", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"PaVeReduce", "[", "MZ\[Gamma]L", "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.742037406968343*^9, 3.742037430289743*^9}, {
  3.7420378920535307`*^9, 3.742037922730783*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"06c9e017-6eb5-417c-8a4e-11437ab5248d"],

Cell[CellGroupData[{

Cell["Getting the term proportional to gmunu", "Section",
 CellChangeTimes->{{3.741691979268497*^9, 3.741691982243298*^9}, {
  3.742037305154234*^9, 3.742037307215893*^9}, {3.742038065473579*^9, 
  3.742038077033461*^9}},ExpressionUUID->"80524923-24e0-4663-a5cc-\
1e5946f7430f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPi]Z\[Gamma]", "=", 
   RowBox[{"Contract", "[", 
    RowBox[{"MZ\[Gamma]LPV", ",", 
     RowBox[{
      RowBox[{"FV", "[", 
       RowBox[{"y", ",", "\[Mu]"}], "]"}], ".", 
      RowBox[{"FV", "[", 
       RowBox[{"y", ",", "\[Nu]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPi]Z\[Gamma]x", "=", 
   RowBox[{"\[CapitalPi]Z\[Gamma]", "/.", 
    RowBox[{
     RowBox[{"ScalarProduct", "[", 
      RowBox[{"q", ",", "q"}], "]"}], "\[Rule]", "x"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.742038079446944*^9, 3.7420380902693777`*^9}, {
  3.7420382369245567`*^9, 3.742038249801321*^9}, {3.74204230059888*^9, 
  3.742042328821718*^9}, {3.742042451896305*^9, 3.742042460428014*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0f8aa653-5608-4398-b33a-54ca5513f6ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expanding some amplitudes and replacing q^2->MZ^2", "Section",
 CellChangeTimes->{{3.741691979268497*^9, 3.741691982243298*^9}, {
  3.742037305154234*^9, 3.742037307215893*^9}, {3.742038065473579*^9, 
  3.742038077033461*^9}, {3.742042419304443*^9, 
  3.742042448557547*^9}},ExpressionUUID->"d5ac513f-230e-48fc-87e2-\
d8775948a24d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Z\[Gamma]F", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"\[CapitalPi]Z\[Gamma]x", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"B0", "[", 
          RowBox[{"x", ",", 
           RowBox[{"MV1", "^", "2"}], ",", 
           RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB12"}], 
        "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"B0", "[", 
         RowBox[{"x", ",", 
          RowBox[{"MV1", "^", "2"}], ",", 
          RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB1C"}], 
       "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"x", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", " ", "BB2C"}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z\[Gamma]MZ", "=", 
   RowBox[{
    RowBox[{"Expand", "[", "Z\[Gamma]F", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      SuperscriptBox["MZ", "2"]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7420423324712687`*^9, 3.742042403886951*^9}, {
  3.742042724300316*^9, 3.742042728919923*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"9b3f9dbc-ed0e-4d8e-b4ae-820c4d7876ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["T-parameter (Simple form)", "Subchapter",
 CellChangeTimes->{{3.741695820336858*^9, 3.7416958226072397`*^9}, {
  3.742042468028912*^9, 
  3.742042473792171*^9}},ExpressionUUID->"121f5376-bf87-40b4-8fc4-\
1cb3039abe55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"T1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"WW0", "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"cw", "*", "MZ"}], ")"}], "2"]}], "-", 
       RowBox[{"ZZ0", "/", 
        SuperscriptBox["MZ", "2"]}]}], ")"}], "/", "\[Alpha]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{
       RowBox[{"e", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", "\[Pi]"}], ")"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741695729972888*^9, 3.741695730786051*^9}, {
   3.7416959081832047`*^9, 3.74169591605157*^9}, {3.741695963931672*^9, 
   3.741695967280142*^9}, {3.741696172285418*^9, 3.741696208239944*^9}, {
   3.741696249003154*^9, 3.741696252231338*^9}, 3.7416977355810738`*^9, 
   3.741709568779838*^9, 3.741710271495284*^9, 3.741710317548356*^9, 
   3.7417123393073483`*^9, 3.741956012947434*^9, {3.741967891918095*^9, 
   3.741967919184588*^9}, {3.742043340206767*^9, 3.74204342085933*^9}, 
   3.742063581330346*^9, 3.742063653217032*^9, 3.7421497649055758`*^9, 
   3.742294467031809*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"e0e68327-8794-4476-83b3-95f0cbae4ac3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Pag", ".", " ", "70"}], " ", "One"}], "-", 
    RowBox[{"Loop", " ", 
     RowBox[{"Romao", ".", " ", "DB0"}], " ", "were", " ", "calculated", " ", 
     "with", " ", "Mathematica"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Rep", ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"A0", "[", 
        RowBox[{"MV1", "^", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MV1", "^", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "1", "-", 
          RowBox[{"Log", "[", 
           RowBox[{"MV1", "^", "2"}], "]"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A0", "[", 
        RowBox[{"MV2", "^", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MV2", "^", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "1", "-", 
          RowBox[{"Log", "[", 
           RowBox[{"MV2", "^", "2"}], "]"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A0", "[", 
        RowBox[{"MVC", "^", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MVC", "^", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "1", "-", 
          RowBox[{"Log", "[", 
           RowBox[{"MVC", "^", "2"}], "]"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "+", "1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MV1", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV1", "^", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"MV2", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV2", "^", "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MV1", "^", "2"}], "-", 
           RowBox[{"MV2", "^", "2"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "+", "1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MV1", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV1", "^", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"MVC", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MVC", "^", "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MV1", "^", "2"}], "-", 
           RowBox[{"MVC", "^", "2"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV2", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "+", "1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MV2", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV2", "^", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"MVC", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MVC", "^", "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MV2", "^", "2"}], "-", 
           RowBox[{"MVC", "^", "2"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MV1", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"Log", "[", 
         RowBox[{"MV1", "^", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV2", "^", "2"}], ",", 
         RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"Log", "[", 
         RowBox[{"MV2", "^", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MVC", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"Log", "[", 
         RowBox[{"MVC", "^", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DB0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          SuperscriptBox["MV2", "4"], "-", 
          RowBox[{"2", 
           SuperscriptBox["MV1", "2"], " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "/", 
             SuperscriptBox["MV2", "2"]}], "]"}], " "}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "-", 
             SuperscriptBox["MV2", "2"]}], ")"}], "3"]}]]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DB0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          SuperscriptBox["MVC", "4"], "-", 
          RowBox[{"2", 
           SuperscriptBox["MV1", "2"], " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "/", 
             SuperscriptBox["MVC", "2"]}], "]"}], " "}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "-", 
             SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DB0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV2", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["MV2", "4"], "-", 
          SuperscriptBox["MVC", "4"], "-", 
          RowBox[{"2", 
           SuperscriptBox["MV2", "2"], " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["MV2", "2"], "/", 
             SuperscriptBox["MVC", "2"]}], "]"}]}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["MV2", "2"], "-", 
             SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]]}]}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7417091655122757`*^9, 3.7417092013911047`*^9}, {
  3.741709292051649*^9, 3.741709339361772*^9}, {3.741709411955652*^9, 
  3.741709489330265*^9}, {3.741709526800027*^9, 3.741709533279068*^9}, {
  3.7417097491865673`*^9, 3.741709785639215*^9}, {3.7417098575479183`*^9, 
  3.74170995840797*^9}, {3.741713091905369*^9, 3.741713093971752*^9}, {
  3.7417132658619967`*^9, 3.7417132674192047`*^9}, {3.7419528148811502`*^9, 
  3.741952820967764*^9}, {3.741956026545911*^9, 3.741956031674634*^9}, {
  3.741956405067115*^9, 3.741956414502782*^9}, {3.7419676252133417`*^9, 
  3.741967631064558*^9}, {3.741973074755497*^9, 3.7419730767967033`*^9}, {
  3.741973134181013*^9, 3.74197317650038*^9}, {3.741974385496827*^9, 
  3.741974447629622*^9}, {3.742049727182621*^9, 3.742049728762608*^9}, {
  3.742049763205659*^9, 3.742049791256646*^9}, {3.742049828723721*^9, 
  3.742049857007723*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"66de1b58-0cc3-4576-af8f-8ec63e68f694"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Pag", ".", " ", "70"}], " ", "One"}], "-", 
    RowBox[{"Loop", " ", 
     RowBox[{"Romao", ".", " ", "DB0"}], " ", "were", " ", "calculated", " ", 
     "with", " ", "Mathematica"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Rep\[Mu]", ":=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"A0", "[", 
        RowBox[{"MV1", "^", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MV1", "^", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "1", "-", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{"MV1", "^", "2"}], "/", 
            RowBox[{"\[Mu]", "^", "2"}]}], "]"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A0", "[", 
        RowBox[{"MV2", "^", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MV2", "^", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "1", "-", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"MV2", "^", "2"}], "]"}], "/", 
           RowBox[{"\[Mu]", "^", "2"}]}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A0", "[", 
        RowBox[{"MVC", "^", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MVC", "^", "2"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", "+", "1", "-", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"MVC", "^", "2"}], "]"}], "/", 
           RowBox[{"\[Mu]", "^", "2"}]}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "+", "1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MV1", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV1", "^", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"MV2", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV2", "^", "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MV1", "^", "2"}], "-", 
           RowBox[{"MV2", "^", "2"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "+", "1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MV1", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV1", "^", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"MVC", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MVC", "^", "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MV1", "^", "2"}], "-", 
           RowBox[{"MVC", "^", "2"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV2", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "+", "1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"MV2", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MV2", "^", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"MVC", "^", "2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"MVC", "^", "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MV2", "^", "2"}], "-", 
           RowBox[{"MVC", "^", "2"}]}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MV1", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"MV1", "^", "2"}], "/", 
          SuperscriptBox["\[Mu]", "2"]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV2", "^", "2"}], ",", 
         RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"MV2", "^", "2"}], "/", 
          SuperscriptBox["\[Mu]", "2"]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"B0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MVC", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"MVC", "^", "2"}], "/", 
          SuperscriptBox["\[Mu]", "2"]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DB0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          SuperscriptBox["MV2", "4"], "-", 
          RowBox[{"2", 
           SuperscriptBox["MV1", "2"], " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "/", 
             SuperscriptBox["MV2", "2"]}], "]"}], " "}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "-", 
             SuperscriptBox["MV2", "2"]}], ")"}], "3"]}]]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DB0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV1", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          SuperscriptBox["MVC", "4"], "-", 
          RowBox[{"2", 
           SuperscriptBox["MV1", "2"], " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "/", 
             SuperscriptBox["MVC", "2"]}], "]"}], " "}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["MV1", "2"], "-", 
             SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DB0", "[", 
        RowBox[{"0", ",", 
         RowBox[{"MV2", "^", "2"}], ",", 
         RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["MV2", "4"], "-", 
          SuperscriptBox["MVC", "4"], "-", 
          RowBox[{"2", 
           SuperscriptBox["MV2", "2"], " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             SuperscriptBox["MV2", "2"], "/", 
             SuperscriptBox["MVC", "2"]}], "]"}]}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["MV2", "2"], "-", 
             SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]]}]}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSFlQ+6+B68d3zXrFIFomeWNtSB68eTsZhC9ZUpd
D4jumKg1DURfmnlzFohWeLdiNoiO+bF0G4guLjHZDaJ7OgyPgGhxvrMXQPSJ
HzURB4D0DIn9YLpqqnUeiFbIygXTSUZ3Uk0fvnZ8831eGoiWqgj8bgakZ037
CqbPqS5SMwfSp8QuqIPoTZfVFtoA6TsCj8A0h26Elz2QnlE3E0zfOXU0EETL
MguEg2imZ/rvQPRd1S9fQTTHjafbU4C0Z7rEDhB9aEraHhBdZPZiP4jeqTH9
CIh2sVc4AaJ7DvqU3wHSLPZRDSD6wK/rHx6C1ElN+wSi1Z75/wDRd66L/gHR
AH7wxzo=
  "],
 CellLabel->
  "In[100]:=",ExpressionUUID->"28b896f8-2cac-4701-b406-e073c2261810"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The T parameter with Rep", "Subchapter",
 CellChangeTimes->{{3.7419563386745863`*^9, 3.741956365050582*^9}, 
   3.741967728806078*^9},ExpressionUUID->"9af2ec9c-6d74-4a1f-8dd8-\
87480c93b855"],

Cell[BoxData[
 RowBox[{
  RowBox[{"T2", "=", 
   RowBox[{
    RowBox[{"T1", "/.", "Rep"}], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741697740901742*^9, 3.741697766031774*^9}, {
   3.741706977274131*^9, 3.7417070688320417`*^9}, {3.741707673646798*^9, 
   3.741707682641163*^9}, {3.741707713305224*^9, 3.7417077217888393`*^9}, {
   3.74170792075183*^9, 3.741707926425663*^9}, 3.741708427858964*^9, {
   3.741708706494766*^9, 3.7417087189105253`*^9}, {3.741708750232621*^9, 
   3.741708766189391*^9}, {3.741709450915279*^9, 3.741709451213202*^9}, 
   3.741709551807675*^9, {3.741709978982028*^9, 3.7417099822033167`*^9}, {
   3.741710018443959*^9, 3.7417100189127283`*^9}, {3.74171024887934*^9, 
   3.741710258454817*^9}, 3.7417103290044823`*^9, 3.741713281254051*^9, {
   3.7417133115790586`*^9, 3.741713316677648*^9}, 3.741951253369424*^9, {
   3.741952910592257*^9, 3.7419529228298893`*^9}, 3.741954076235786*^9, 
   3.7419677261612797`*^9, 3.742042493791451*^9, 3.7420608188432198`*^9, 
   3.7420636664761953`*^9, 3.7421497746711607`*^9, 3.74229455148394*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"5c6cfbeb-4eb1-4075-8619-0de49016aef1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The expansion of the T parameter in \[CapitalDelta]", "Subchapter",
 CellChangeTimes->{{3.7419562463867073`*^9, 
  3.7419562616519537`*^9}},ExpressionUUID->"c84b1bee-9530-4aa2-83d5-\
cd95b75aa92d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T3a", "=", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{"T2", ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T3b", "=", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{"T2", ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumT3b", "=", 
   RowBox[{"Numerator", "[", 
    RowBox[{"Normal", "[", "T3b", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NumT3b", "/.", 
  RowBox[{"{", 
   RowBox[{"MV2", "\[Rule]", "MVC"}], "}"}]}]}], "Input",
 CellChangeTimes->{
  3.741713734764964*^9, {3.7419560804638777`*^9, 3.741956084085211*^9}, {
   3.741956638248417*^9, 3.7419566396729937`*^9}, 3.7420424999487963`*^9, 
   3.742043137934504*^9, 3.7420435621379004`*^9, 3.7420500353736343`*^9, 
   3.742055554918252*^9, 3.7420564704691*^9, 3.74206084197985*^9, 
   3.742063670365382*^9, 3.742149782834153*^9, {3.742294632079198*^9, 
   3.7422946736219873`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"22951ed9-ff7b-4344-8bf3-ecdb344f1da8"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{3.74229467411045*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"0f9b9b40-c09f-44a1-adce-dff64d402865"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Considering the divergence", "Subchapter",
 CellChangeTimes->{{3.7420500579334373`*^9, 
  3.7420500620022793`*^9}},ExpressionUUID->"0b9eec2c-d1bd-4ef9-ae50-\
1f5dbae095a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"T30", "=", 
    RowBox[{
     RowBox[{"Normal", "[", "T2", "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]", "\[Rule]", 
       RowBox[{"Log", "[", 
        RowBox[{
         SuperscriptBox["\[CapitalLambda]", "2"], "/", 
         SuperscriptBox["MZ", "2"]}], "]"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.742050064974945*^9, {3.742055579832756*^9, 3.742055669705234*^9}, {
   3.742055751313723*^9, 3.742055798777897*^9}, {3.742056450601725*^9, 
   3.7420564585496397`*^9}, 3.742056494912403*^9, {3.7420645218576603`*^9, 
   3.742064541766577*^9}, 3.742064657744996*^9, 3.74214979929139*^9, {
   3.742234099914197*^9, 3.742234113601308*^9}, 3.742295112726062*^9, {
   3.742295418278842*^9, 3.74229542368578*^9}, {3.7422954662628*^9, 
   3.7422954692578573`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"4fbaaeff-9aa6-4c4f-9012-64a82358fa70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "MV1", ",", "MV2", ",", "MVC", ",", "MZ", ",", "sw", ",", "cw", ",", 
     "\[CapitalLambda]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MV2", "=", "605"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MVC", "=", "600"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sw", "=", "0.4"}], ";", "\[IndentingNewLine]", 
    RowBox[{"cw", "=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["sw", "2"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MZ", "=", "91.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalLambda]", "=", "2000"}], ";", "\[IndentingNewLine]", 
    RowBox[{"A3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"T30", ",", 
       RowBox[{"{", 
        RowBox[{"MV1", ",", "400", ",", "600"}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742055810296259*^9, 3.74205597100284*^9}, {
   3.74205600425441*^9, 3.7420561773200073`*^9}, {3.742056276162114*^9, 
   3.742056329896049*^9}, {3.7420563717055492`*^9, 3.742056389009204*^9}, {
   3.742056432828705*^9, 3.742056434190465*^9}, {3.742056555006032*^9, 
   3.742056572492496*^9}, 3.7420568493964663`*^9, 3.742061574236418*^9, {
   3.742062513783895*^9, 3.742062518430841*^9}, {3.742064561437851*^9, 
   3.742064576905446*^9}, {3.74206468183606*^9, 3.742064708731933*^9}, {
   3.742065402837379*^9, 3.742065418476102*^9}, {3.742234128610282*^9, 
   3.7422341878302107`*^9}, {3.7422342889587097`*^9, 3.742234309569748*^9}, {
   3.742234341900401*^9, 3.7422343442825193`*^9}, {3.742234487767404*^9, 
   3.7422345084675217`*^9}, {3.7422948449649754`*^9, 
   3.7422949012289352`*^9}, {3.7422949321507998`*^9, 3.742294938465131*^9}, {
   3.74229545655379*^9, 3.7422954602762938`*^9}, {3.74229551531901*^9, 
   3.74229555343864*^9}, {3.7422956977021*^9, 3.7422956984708347`*^9}, {
   3.742310530980489*^9, 3.742310547755311*^9}, {3.74231059771144*^9, 
   3.742310597812902*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"51069be5-796c-4c41-9166-7397296be3de"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1tYeHIszBHNz6cIiZRAqK52fjoD/AAi46CM=
        "]]},
      Annotation[#, "Charting`Private`Tag$35966#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{400, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{552.7999999999998, Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{400, 600}, {0., 0.44527157263841977`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.742055973166171*^9, {3.742056043413683*^9, 3.742056067075139*^9}, {
   3.742056100414304*^9, 3.7420561153985453`*^9}, {3.7420561501950693`*^9, 
   3.7420561779819403`*^9}, 3.742056276437742*^9, {3.742056319798689*^9, 
   3.742056330406794*^9}, {3.742056372338791*^9, 3.7420563894909477`*^9}, 
   3.7420564350056057`*^9, 3.74205649823779*^9, {3.742056556870678*^9, 
   3.742056573017448*^9}, 3.742056850658997*^9, 3.7420615770830183`*^9, 
   3.742062519945627*^9, {3.742064551224395*^9, 3.742064577381013*^9}, {
   3.7420646630303698`*^9, 3.742064713065246*^9}, {3.742065406637822*^9, 
   3.7420654189553013`*^9}, {3.7422341202828293`*^9, 3.742234188420863*^9}, 
   3.742234313008108*^9, 3.7422343466829844`*^9, {3.7422344910684013`*^9, 
   3.7422345114906483`*^9}, 3.742294785927895*^9, {3.74229484576906*^9, 
   3.742294881423853*^9}, {3.742294916657052*^9, 3.742294939287799*^9}, {
   3.742295457313919*^9, 3.742295472914514*^9}, {3.7422955223544416`*^9, 
   3.742295554014648*^9}, 3.742295699174807*^9, {3.742310534318248*^9, 
   3.742310548191346*^9}, 3.742310598754524*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"4abcd012-ce35-41e9-943e-2ca9eea791cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "MV1", ",", "MV2", ",", "MVC", ",", "MZ", ",", "sw", ",", "cw", ",", 
     "\[CapitalLambda]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MV2", "=", "1001"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MVC", "=", "1000"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sw", "=", "0.4"}], ";", "\[IndentingNewLine]", 
    RowBox[{"cw", "=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["sw", "2"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MZ", "=", "91.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalLambda]", "=", "2000"}], ";", "\[IndentingNewLine]", 
    RowBox[{"A2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"T30", ",", 
       RowBox[{"{", 
        RowBox[{"MV1", ",", "600", ",", "1000"}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742234498665464*^9, 3.7422345191196547`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"47095227-785b-492e-b28a-538d4c41f8b0"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV1Gs01AkYBvBJKhFSWNmIbC6tboQo875LUZORiG4KQ2WFiU0XDTlj3Gf+
f3InS0UyG4uoRBI77Y6ZMaQwbimnXMKqpKS09sNznvP79Hx79BlM1xNyFAqF
MZ//u6TYUZ7SwMbSTbO+VooS2D3jbz87b6vm5JQ9iyUwTEtkTz9m45+y706e
chIwnBBTxpvYWFxgeTr6ixgKt7p+k/3NxrR7T3/pGhXD7489p+9I2Rjl5AxX
RWK40hMyfOoFG02n4nK4PDGEq14VS+fYuI1utFJhpRiCy/foDdtF43rHMSFr
uQgumspRI9jRmHt4NSXEqBk+Xn+xvL0hGg0+tXR50YSQ6qrJDJHnoLlOU6A/
4x/Y03cwk2vPwUXPf+wZSP4b9K+9p03GcVDw9qXxp6onEOBVeUddxMGxccuw
oUEBiD6z3lQvjUFnwzVWfEMBOIsKCvPpMVhfM9Hn7/UXjFyQmi7mxaCyA9uv
lN8EU3oGARtEMejzwdVz01wjrJVrNctTiUVpWabdnGMjnKqPEyTQYzGEfB91
8vpjkN7JGqxPicU/z0g1Qz40QPGNlrtVz2KRb5hfKO/UAJnBqgeMVsbhBw01
2+WnHkFJaAnrlUccvndR8mg1qIf2/c5M7Yw4TPUZaxN8rYM1AU7jOd1xOLXJ
/81YUy30sph6vTrxeIhybic98wFUBOTp5HjGo2qB4wIPTg3cSvnpZkFBPBoo
0as6ve7DvdS7nw0G4tFu2rf+vts9sEoOovjrJmCT+7oV1P13QSaISJ3yScDV
O769C7KthtSOrMlvBQm4lBoZqolVwNRTlu17nYAmE6xz17bcgTq/m+cYxol4
PShHOvdzJehxaP3vTibiVGfU3s3bK6C417FNyJ93v2H6Puty2LXchdAdTcTW
3/oyuzPK4AA1grLVOAmL2r3MvYW3IaZo4VzK6SR8WLmup1LGh5ahNEEgPwmN
umbbM1RLwNr3slbyRBJCWm063aAY6mrOWmzeyEV2jdCbfrQIyhXJJSmBXExo
olYcyr8BT9LkTtiUc1HpsIA92HANpmaiuN7/cpFfFmY3Il8AO7MOgdSch4pF
Q4nBTldh0Rb34rlzPFylP+5XWpgF/YWeMn41D7fJ85IHqOkg2/8wI3+Ghx/n
FJ6dv5ICYzJjXTVrAoW17fGjTlxgetYcsT9P4B98r47B7BhQ17qxtv4BgYuq
191uLmUBc3SU8qCWwEedksfkeRY015m9qK4j0PKgmZv/LyyI8mnMLa0n8Kb7
K8aq55dgjP9SPa+RwOE8mvvar+HQZKu3hNVM4OqXGrJk2kUI9c17a91NoIbk
YceVoTCQWLwWWvQQyNKZqdxfEQbGChtubeklsFmk+aPppTDov13nZ9JPYOet
ihVilTCgTff0ab0isCG7u2SN5VlYm6Dd+mmEwMtq+3oZnFBoK8usqp4hcPYA
W+ZtFwwXtlT1tXwh8LUkO/2BMAh0q1oXD88SeCTvbIetSxAE1Cw9rD1HIPud
z6NlxwNB7q9L3yLlSPzaG951LTwAzGReDruVSByvffvPq4qT0HWUxfRZRmJt
fKdI0/okRPZnZYUrkxi7ezLPpeEENA+2jd5WJdEwUf+lRYsf+E7Yk2rqJFpH
jGs8GWFA2kLjru7VJC6IsSg6tes42MTuXDClQ6IWb2Qx4XEMBhR81iuvmd8v
MNLK8PYEU5UcFuiTOHQl+Gpe2BEQaC3TL1xHotv27AWhlR4QmGtMe2hIomdj
T2p1gzus0N31W4cRiQ5un0gj4QE4bhApUFhP4ueBn77vHXOF6Q2TvwZtJPF9
6ky5s+v8x5UvS43dROLzyzNqC884gZ25SV3+ZhKLmUXJaSdoQGxjqDw1I3FP
t9/Y7CMH2FobafXWnMSfNcK4xsU7ods211vegsQfaJy9F5fYg6H9s0pLKxLZ
QsZelxoqiAWTPfu2kSgfbbVxlaINhO5WXvSrNYlyrcdou5IsQUtkspFtQ+Kh
S5zvR5TMoZ7ucDB3+7yzI2JE4Sbg18qIqtpBolSz7aj2yHpQdLtcIrElURLZ
Vlkbrw/lz3OfvqGSSH9nk6t1s4uqQusq0wYS1dPTX/O4HfAfxcLwJA==
        "]]},
      Annotation[#, "Charting`Private`Tag$19026#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{600, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{600, 1000}, {0., 0.3523287527117003}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7422344993121*^9, 3.7422345206466007`*^9}},
 CellLabel->"Out[75]=",ExpressionUUID->"5b9edf03-5e71-4501-a01b-f1bc3a2d70d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AR", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"0.12", ",", 
    RowBox[{"{", 
     RowBox[{"MV1", ",", "600", ",", "1000"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.742234611519432*^9, 3.742234643455138*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"05ba7950-d058-4fd8-ad83-ee019fc5e721"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvXK5OwvDgSaHHXKtrwN37LOfdLvwRfp9BL+Kf86Z
8/8Q/LwNngovnJrh/EodJrvaJgT/66L7ApcPIPiTg8TyC1la4HzPu+HTe5wR
fMWFn7w+tCP4WfGbNoucRvBP/6h5tpWzFc73O71gyXxfBP9lxXkdtl4E/4uC
cpbuaQRfiemC0Vy+Njg/fV/70U5fBP/85hmP901E8JcvPrdtyxUEf3oef4i6
cDucv7JoZc2jMAT/cqBfvtQ0BF8+y+ftrFsI/p2afIU7sh1w/sasubKzYhD8
FRNVli1YgOBvn7zth/IDBN98Qi5DhlwnnH/zaO3kL4kI/uRrMz78XYDg5yvw
3vR/iuDvSVlWlqTRBecrtHjd+5iG4C+/437x5CoE31UgoE/uFYIfYlfLYKLR
Dee3LmX+NzEbwT/3fMrRnFUIvmVyvcSEdwj+np0lpgZ6PXD+Bq5+9ok5CP6x
KUypVhsQ/C8/G3oS3iP4LjMi7M8b98L5rIahy/+VIfj3lsTcXLUVwb8ZuHfa
/J8I/pubGnKCln2I8InZGeVcjuCLSCxW2rcLwb+4bvqWrT8R/CnMGjduyfTD
+eERO37/t0fwAa9iqfM=
        "]]},
      Annotation[#, "Charting`Private`Tag$25196#1"]& ]}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{600, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{600, 1000}, {0., 0.24}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.74223463521288*^9, 3.742234644220231*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"0bc3ae1a-ac0b-405c-afd2-bcfade48d950"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"AR", ",", "A2", ",", "A3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7422345766129217`*^9, 3.742234582792301*^9}, {
  3.7422346464571447`*^9, 3.742234648351494*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"1d2d036d-b27c-4d8c-95f7-e92bb2060567"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvXK5OwvDgSaHHXKtrwN37LOfdLvwRfp9BL+Kf86Z
8/8Q/LwNngovnJrh/EodJrvaJgT/66L7ApcPIPiTg8TyC1la4HzPu+HTe5wR
fMWFn7w+tCP4WfGbNoucRvBP/6h5tpWzFc73O71gyXxfBP9lxXkdtl4E/4uC
cpbuaQRfiemC0Vy+Njg/fV/70U5fBP/85hmP901E8JcvPrdtyxUEf3oef4i6
cDucv7JoZc2jMAT/cqBfvtQ0BF8+y+ftrFsI/p2afIU7sh1w/sasubKzYhD8
FRNVli1YgOBvn7zth/IDBN98Qi5DhlwnnH/zaO3kL4kI/uRrMz78XYDg5yvw
3vR/iuDvSVlWlqTRBecrtHjd+5iG4C+/437x5CoE31UgoE/uFYIfYlfLYKLR
Dee3LmX+NzEbwT/3fMrRnFUIvmVyvcSEdwj+np0lpgZ6PXD+Bq5+9ok5CP6x
KUypVhsQ/C8/G3oS3iP4LjMi7M8b98L5rIahy/+VIfj3lsTcXLUVwb8ZuHfa
/J8I/pubGnKCln2I8InZGeVcjuCLSCxW2rcLwb+4bvqWrT8R/CnMGjduyfTD
+eERO37/t0fwAa9iqfM=
         "]]},
       Annotation[#, "Charting`Private`Tag$25196#1"]& ]}, {}, {}}, {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$19026#1"]& ]}, {}, {}}, {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
+cg=
         "]]},
       Annotation[#, "Charting`Private`Tag$18689#1"]& ]}, {}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{600, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{845., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{600, 1000}, {0., 0.24}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{3.742234583037054*^9, 3.742234648649016*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"6dd18035-5b3f-4c05-8bb7-9490e3be94d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "MV1", ",", "MV2", ",", "MVC", ",", "MZ", ",", "sw", ",", "cw", ",", 
     "\[CapitalLambda]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MV2", "=", "990"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MVC", "=", "1000"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sw", "=", "0.4"}], ";", "\[IndentingNewLine]", 
    RowBox[{"cw", "=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["sw", "2"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MZ", "=", "91.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalLambda]", "=", "1000"}], ";", "\[IndentingNewLine]", 
    RowBox[{"A3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"T30", ",", 
       RowBox[{"{", 
        RowBox[{"MV1", ",", "600", ",", "1000"}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742234685132648*^9, 3.7422347186039333`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"92323376-4ee3-4f21-b693-0ba209a9e1d1"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwBMQTO+yFib1JlAgAAAEIAAAACAAAAqadHBADAgkAFuMisGTUFwEj5aEP7
wIJA4Pq2Jz0yBcDoSoqC9sGCQPGIgwlhLwXAJu7MAO3DgkDKtFsBqikFwKQ0
Uv3Zx4JAhn19v0AeBcCewVz2s8+CQI7dYGGBBwXAkttx6GffgkA564abTtoE
wHoPnMzP/oJAxL8k+xOBBMBusEkg6EKDQKNZR/fGxAPAeSwCPn2Cg0DJJVZs
ChsDwPWi3xDTwINAZnpiwgV6AsCTUhZvcQSEQDLphK0O0QHASd1Xl4xDhEBN
P+9MbTgBwCGh8krwh4RArZZwFjmYAMBqX7KzFMuEQI5eJK3T//+/y/h85rUJ
hUCTnH68Eez+v07LoKSfTYVA4DlENrHJ/b/peM8sBo2FQEP5OOdIwvy/9CAj
ai3LhUD939zh3Mb7vyIC0DKdDoZAGRKbY0a9+r9nvofFiU2GQBEuVD/by/m/
z7OY476RhkCuziJ+wMz4v6ejzra01IZAea3+15nY97+Xbg9UJxOHQIDYqaoz
+va/qXKpfOJWh0BY99uPcA72v9NRTm8alodAg3kUuzc39b8fakztmtqHQE2S
Tfz3UvS/3HxvINwdiEDjjwk1mXfzv7FqnR2aXIhA7uCvMuqu8r+okSSmoKCI
QIkIa/Nl2fG/t5O2+CPgiECvxwxgohXxvzeQbQBoHolAxMR0dN9Y8L/ZxX2T
9GGJQAfXHSnSHu+/k9aY8P2giUB21+Z1pKztv28gDdlP5YlAQo11l10h7L+8
ZKZ2YiiKQCdMCrrjouq/IIRK3vFmikAYZulex0Lpv6fcR9HJqopAA2piTp3J
579FEFCOHuqKQM6EX/aabea/VD59ADQoi0ClW/Vg9xvlv4WlA/6Ra4tAPZCp
czax47/O55TFbKqLQG+x9G3dYeK/OWN/GJDui0BlApIKZ/ngv7y5dDUwLoxA
rDdld9ZW37+wCo8HkWyMQCuYsiZYzNy/xpQCZTqwjECGuIa2Gw/av/T5gIxg
74xA3VuCQTqE179EmFg/zzONQIJhd9dBxtS/BTFVp/52jUCkrJQP9BfSv96k
XNmqtY1AZp07rLIzz7/ZUb2Wn/mNQA2qGEaDz8m/7NkoHhE5jkB2PfcbfcnE
v29cuVpDd45Act52fZm8v78UGKMivrqOQEnL8hgHErW/b+rqALq7jkDmHOs7
OOq0v8q8Mt+1vI5A0SVQtmnCtL+AYcKbrb6OQK0e+wjMcrS/7KrhFJ3CjkCb
LfqvkNOzv8M9IAd8yo5AyHmfDhqVsr9yY53rOdqOQKa9KPgmGLC/zTXlyTXb
jkCjcxoLruCvvygILagx3I5Akd3QYQ2Rr7/erLxkKd6OQLUxBFvP8a6/Svbb
3RjijkArnqQnUrOtvyKJGtD36Y5AcOqBElI2q78z1ofG+u6OQPRuXml6oKm/
6rct7A==
         "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAyyl4OQXxjkCPs9CPg/uov3gxtN3O
+o5AktKsSEjjpb8etNAG6PuOQM9cmRpmiqW/arkJWRr+jkBo5NzyldikvwLE
e/1+Ao9AkFOVevV0o78y2V9GSAuPQDemC/OiraC/2Ft8b2EMj0CqWoSAt1Sg
v37emJh6DY9A75uxvJ33n7/K49HqrA+PQI6maj3qk56/Y+5DjxEUj0D7dzTu
h8ybv5QDKNjaHI9A9iV836A9lr86hkQB9B2PQOex+Wa9i5W/4AhhKg0fj0Ds
35in29mUvywOmnw/IY9AWA4ThhR2k7/FGAwhpCWPQF2xlbyFrpC/bJsoSr0m
j0BPTrR0QvmPvxIeRXPWJ49AHhnFCHOVjr9eI37FCCqPQOuA6/fSzYu/9i3w
aW0uj0A6staHeT6Gv5ywDJOGL49ASAfIxJzahL9CMym8nzCPQKJecTbDdoO/
jjhiDtIyj0Dg3rD/Ea+AvzS7fjfrM49AoRnIxGeWfr/aPZtgBDWPQP+xxcx1
znu/JkPUsjY3j0DYpHB5yD52v8zF8NtPOI9Ac3/lLgN3c79ySA0FaTmPQHGg
UtBfr3C/GMspLoI6j0AotcOQqM9rv75NRlebO49AehQew5A/Zr9k0GKAtDyP
QPpVTwI6sWC/ClN/qc09j0DF3lOyRUFWv7DVm9LmPo9AdE5SupQ7Rr9XWLj7
/z+PQKBeBeUG15G/4RwL6g==
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$28153#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{600, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{600, 1000}, {-2.6509278773073697`, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.742234686354637*^9, 3.742234719333137*^9}},
 CellLabel->"Out[85]=",ExpressionUUID->"2c6a64ea-1ec4-4729-a1a0-4370a7571dfa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "T21", "]"}]], "Input",
 CellChangeTimes->{{3.7423095783141403`*^9, 3.742309581089807*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"90e317dd-54b6-40a4-afdb-a7ef9f0cee09"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T20", "=", 
   RowBox[{
    RowBox[{"T1", "/.", "Rep\[Mu]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21", "=", 
   RowBox[{"Series", "[", 
    RowBox[{"T20", ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22", "=", 
   RowBox[{
    RowBox[{"Normal", "[", "T21", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[CapitalDelta]", "\[Rule]", 
      RowBox[{"Log", "[", 
       RowBox[{
        SuperscriptBox["\[CapitalLambda]", "2"], "/", 
        SuperscriptBox["\[Mu]", "2"]}], "]"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.742295078330587*^9, 3.7422950813004208`*^9}, {
  3.742309383616466*^9, 3.742309443522315*^9}, {3.742309559276889*^9, 
  3.742309662485414*^9}, {3.742310146433055*^9, 3.742310146531034*^9}, {
  3.742311233343637*^9, 3.7423112343122587`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"99f82478-014f-4822-a4db-f840e0b00166"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Log", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.742311295137909*^9, 3.742311303936907*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"de146426-4b55-4ec6-a5ec-790ab95d8dab"],

Cell[BoxData[
 FormBox["4.605170185988092`", TraditionalForm]], "Output",
 CellChangeTimes->{{3.7423112982085857`*^9, 3.742311304170354*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"684d233c-33ce-4081-977a-f388e123af59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "MV1", ",", "MV2", ",", "MVC", ",", "MZ", ",", "sw", ",", "cw", ",", 
     "\[CapitalLambda]", ",", "\[Mu]"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MV2", "=", "400"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MVC", "=", "620"}], ";", "\[IndentingNewLine]", 
    RowBox[{"sw", "=", "0.4"}], ";", "\[IndentingNewLine]", 
    RowBox[{"cw", "=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["sw", "2"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"MZ", "=", "91.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalLambda]", "=", "2000"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Mu]", "=", "MZ"}], ";", "\[IndentingNewLine]", 
    RowBox[{"A3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{"T22", ",", 
       RowBox[{"{", 
        RowBox[{"MV1", ",", "50", ",", "600"}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742049298434986*^9, 3.742049300327324*^9}, {
  3.742309462092976*^9, 3.742309507988612*^9}, {3.7423096956448*^9, 
  3.742309715590096*^9}, {3.7423097692566347`*^9, 3.7423098864530993`*^9}, {
  3.742310162997713*^9, 3.7423101677025557`*^9}, {3.742310872197159*^9, 
  3.7423108763939238`*^9}, {3.742311157497108*^9, 3.74231115781775*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"0e6d1f78-ceaa-40ba-a214-f4271586b561"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
/IM3XRT4Dwk3BzY=
         "]], LineBox[CompressedData["
1:eJwVzm0sFHAAx/HDtROZsTFaTVhKCJlciB/3p8Ly0GbuRVy3jtYRieF03P3l
6WpI9IDsPK9DWiRhVyYTmtLJmXDEjBSWYTMjvfju8/ZryY8PE2gzGIwT+/13
LVEvclg7DR29rO3i6TPIFUZoFXqJsMmfmM/IckUwSyYa2RLB30Qozds8i2di
rkVjbTpMNNZtWb5saIVGcg7x7qJryOjUjefnsLzLeMQ0FCOH/bLXWe0O2dWB
0YJOMTy1Wu6b6Xjionl/qTwpAyeTV2fyfc4jt4VPL1llwqbTOGBC4IX5apeV
tOlM1O/ylxcqvZFubWJTGSjBylxPzm4M0MfX/BqsksCqnBm9tAFUhpB4jz0J
6mrsjxwo8kGHXWp+SrgUHTWNVYpjvrDXKCt2GqUosh3KeNXiC0cfeXyfLsWY
dddUTxAHd4pCxrlRFDPrtPnRLAdmH9UJkzwKgUuYynmeg+6tyINRfAor/xKH
rwscMKPi3K8LKIw6dSUGvzkocZBV3BJScDPH5bJNDtoGe3lZKRRCd8f1An2C
TabbUlMhhV5c9s8PrgRlbKXU8SHF5dYxjYBN4BXrd/h1MUWNONhU34MgR3Ul
8G0pRc9skGM4CEyrE5p7yvd/a2UmqwEEbt6K22MNFBeM5Co7HsFkorMe9wWF
OmgqaZRPIKnvqP6hoHCeKwkVCwg+GfSrZpopLE+zlF9uEkRMzrkut1L4lenE
pCQT7BgKh+PeUKTbWixaphLIOX+j19opWO2TdZ9FBIsKxtONdxSePiNqKwnB
g+lcp9QuiidroUHDlMDJ2HBgu5uiaY+1m5ZNMOr3+JpYSXHPw+zP8TyC1LSj
23vvKb7HNph/kxH8A5pYITA=
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$37143#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{50, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{813., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{50, 600}, {-393.70624575027955`, 41.08453674960189}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.742309571682397*^9, {3.742309696789455*^9, 3.742309715924507*^9}, {
   3.742309769678337*^9, 3.742309841994153*^9}, {3.742309872620697*^9, 
   3.742309887022098*^9}, {3.742310156301076*^9, 3.742310169261307*^9}, 
   3.742310878670183*^9, 3.742311158685123*^9, 3.742311247688751*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"58503d2f-8cde-410b-a6f5-6a04042b6fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["T22"], "Input",
 CellChangeTimes->{{3.742309735987047*^9, 3.7423097363785048`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"6e70fe9d-01bb-4693-a02c-9a5e9b4ee80c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"1536", " ", 
      SuperscriptBox["MZ", "2"], " ", "\[Pi]", " ", 
      SuperscriptBox["sw", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV1", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MV2", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MV2", "4"]}], ")"}], " ", 
        SuperscriptBox["MV1", "6"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV2", "2"], "-", 
           SuperscriptBox["MV1", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "-", 
          SuperscriptBox["MVC", "4"]}], ")"}], " ", 
        SuperscriptBox["MV1", "6"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MVC", "2"], "-", 
           SuperscriptBox["MV1", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MV2", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "-", 
          SuperscriptBox["MV2", "4"]}], ")"}], " ", 
        SuperscriptBox["MV1", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MV2", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["MV1", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV1", "2"], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV2", "2"], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["MV1", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MV2", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV1", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MVC", "4"]}], ")"}], " ", 
        SuperscriptBox["MV1", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV1", "2"], ")"}]}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["MV1", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"14", " ", 
        SuperscriptBox["MV1", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MV1", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"]}]], "-", 
      FractionBox[
       RowBox[{"18", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MV2", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "-", 
          SuperscriptBox["MV2", "4"]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MV2", "2"]}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"20", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MV2", "2"], ")"}]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "-", 
      FractionBox[
       RowBox[{"86", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["MV1", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV1", "2"], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV2", "2"], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MV2", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"18", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "-", 
          SuperscriptBox["MVC", "4"]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"20", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MVC", "2"], ")"}]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "-", 
      FractionBox[
       RowBox[{"86", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV1", "2"], ")"}]}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"86", " ", 
        SuperscriptBox["MV1", "2"]}], 
       SuperscriptBox["cw", "2"]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MVC", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"]}]], "+", 
      FractionBox[
       RowBox[{"50", " ", 
        SuperscriptBox["MV2", "2"]}], 
       SuperscriptBox["cw", "2"]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["MVC", "2"]}], 
       SuperscriptBox["cw", "2"]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["MV2", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV1", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MV2", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MV2", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV2", "2"], "-", 
           SuperscriptBox["MV1", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"40", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MV2", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"24", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MV2", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"50", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV2", "2"], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["MV1", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV1", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MV2", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["MVC", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV1", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"18", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV2", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV2", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV2", "2"]}], "-", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV2", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["MV2", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV2", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV2", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV2", "2"]}], "-", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MVC", "2"], "-", 
           SuperscriptBox["MV2", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["MVC", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV2", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV2", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV2", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["MV2", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV2", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV2", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV2", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["MVC", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV2", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV2", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV2", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MVC", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MVC", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"20", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MVC", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "-", 
      FractionBox[
       RowBox[{"80", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MVC", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"384", " ", 
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"log", "(", 
         SuperscriptBox["MVC", "2"], ")"}]}], 
       SuperscriptBox["\[Mu]", "2"]], "-", 
      FractionBox[
       RowBox[{"384", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"log", "(", 
         SuperscriptBox["MVC", "2"], ")"}]}], 
       SuperscriptBox["\[Mu]", "2"]], "-", 
      FractionBox[
       RowBox[{"50", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV1", "2"], ")"}]}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["MVC", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV2", "2"], ")"}]}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"86", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV2", "2"], ")"}]}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"50", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV2", "2"], ")"}]}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"18", " ", 
        SuperscriptBox["MV2", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV2", "2"], ")"}]}], " ", 
           SuperscriptBox["MV2", "2"]}], "+", 
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV2", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["\[Mu]", "2"]], ")"}]}], "-", 
          SuperscriptBox["MV2", "2"]}], ")"}]}], 
       SuperscriptBox["cw", "2"]], "-", 
      FractionBox[
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["\[Mu]", "2"]], ")"}]}], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}]}], 
       SuperscriptBox["cw", "2"]], "-", 
      RowBox[{"384", " ", 
       SuperscriptBox["cw", "2"], " ", 
       SuperscriptBox["MVC", "2"], " ", 
       RowBox[{"log", "(", 
        FractionBox[
         SuperscriptBox["MVC", "2"], 
         SuperscriptBox["\[Mu]", "2"]], ")"}]}], "-", 
      FractionBox[
       RowBox[{"96", " ", 
        SuperscriptBox["MVC", "2"], " ", 
        RowBox[{"log", "(", 
         FractionBox[
          SuperscriptBox["MVC", "2"], 
          SuperscriptBox["\[Mu]", "2"]], ")"}]}], 
       SuperscriptBox["cw", "2"]], "+", 
      RowBox[{"384", " ", 
       SuperscriptBox["MVC", "2"], " ", 
       RowBox[{"log", "(", 
        FractionBox[
         SuperscriptBox["MVC", "2"], 
         SuperscriptBox["\[Mu]", "2"]], ")"}]}], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MV2", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MVC", "2"]}]], "-", 
      FractionBox[
       RowBox[{"18", " ", 
        SuperscriptBox["MV2", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV1", "2"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MVC", "4"]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["MV1", "2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["MV2", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "4"], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MV2", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "-", 
          SuperscriptBox["MV2", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MV2", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox["MV1", "2"]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MV2", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MV2", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        SuperscriptBox["MV1", "2"]}]], "+", 
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["MV2", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["MV1", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV1", "2"], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["MV2", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MV2", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MV2", "2"]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["MVC", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["MV1", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            FractionBox[
             SuperscriptBox["MV1", "2"], 
             SuperscriptBox["MVC", "2"]], ")"}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MVC", "4"]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["MV1", "2"], "-", 
           SuperscriptBox["MVC", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox["MV1", "2"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["MVC", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], "-", 
          RowBox[{"log", "(", 
           SuperscriptBox["MVC", "2"], ")"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        SuperscriptBox["MV1", "2"]}]], "+", 
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["MVC", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"log", "(", 
             SuperscriptBox["MV1", "2"], ")"}]}], " ", 
           SuperscriptBox["MV1", "2"]}], "+", 
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"], "+", 
          RowBox[{
           SuperscriptBox["MVC", "2"], " ", 
           RowBox[{"log", "(", 
            SuperscriptBox["MVC", "2"], ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["cw", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["MV1", "2"], "-", 
          SuperscriptBox["MVC", "2"]}], ")"}], " ", 
        SuperscriptBox["MV1", "2"]}]]}], ")"}]}], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox["MV1", "6"]}], "-", 
       RowBox[{
        SuperscriptBox["MVC", "2"], " ", 
        SuperscriptBox["MV1", "6"]}], "+", 
       RowBox[{
        SuperscriptBox["MV2", "6"], " ", 
        SuperscriptBox["MV1", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["MVC", "6"], " ", 
        SuperscriptBox["MV1", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox["MVC", "4"], " ", 
        SuperscriptBox["MV1", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["MV2", "2"], " ", 
        SuperscriptBox["MVC", "6"]}], "-", 
       RowBox[{
        SuperscriptBox["MV2", "6"], " ", 
        SuperscriptBox["MVC", "2"]}]}], ")"}], " ", 
     RowBox[{"log", "(", 
      FractionBox[
       SuperscriptBox["\[CapitalLambda]", "2"], 
       SuperscriptBox["\[Mu]", "2"]], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["cw", "2"], " ", 
     SuperscriptBox["MV1", "2"], " ", 
     SuperscriptBox["MV2", "2"], " ", 
     SuperscriptBox["MVC", "2"], " ", 
     SuperscriptBox["MZ", "2"], " ", "\[Pi]", " ", 
     SuperscriptBox["sw", "2"]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.742309736812687*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"9f7e8677-8fae-4ac3-a87d-9955630070e0"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.742049248340781*^9},ExpressionUUID->"8c23a819-787b-4484-be92-\
abbf7ca7fd84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another DB0 replacement", "Subchapter",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.741967096051556*^9, 
  3.741967111349118*^9}},ExpressionUUID->"d4cb2b7e-38fb-4a9a-8d58-\
80f6c3b2dae1"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Quiz\[AAcute]", " ", "esto", " ", "no", " ", "est\[AAcute]", " ", "bien"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.742048970280406*^9, 
  3.742048982285383*^9}},ExpressionUUID->"1d45b946-8d8c-419f-ae5b-\
1c8b0697dd66"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rep1", ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"DB0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"4", "*", 
        RowBox[{"B0", "[", 
         RowBox[{"0", ",", 
          RowBox[{"MV1", "^", "2"}], ",", 
          RowBox[{"MV2", "^", "2"}]}], "]"}]}], "-", "2"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DB0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"4", "*", 
        RowBox[{"B0", "[", 
         RowBox[{"0", ",", 
          RowBox[{"MV1", "^", "2"}], ",", 
          RowBox[{"MVC", "^", "2"}]}], "]"}]}], "-", "2"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DB0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"4", "*", 
        RowBox[{"B0", "[", 
         RowBox[{"0", ",", 
          RowBox[{"MV2", "^", "2"}], ",", 
          RowBox[{"MVC", "^", "2"}]}], "]"}]}], "-", "2"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rep2", ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"A0", "[", 
       RowBox[{"MV1", "^", "2"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"MV1", "^", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "+", "1", "-", 
         RowBox[{"Log", "[", 
          RowBox[{"MV1", "^", "2"}], "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A0", "[", 
       RowBox[{"MV2", "^", "2"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"MV2", "^", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "+", "1", "-", 
         RowBox[{"Log", "[", 
          RowBox[{"MV2", "^", "2"}], "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A0", "[", 
       RowBox[{"MVC", "^", "2"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"MVC", "^", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "+", "1", "-", 
         RowBox[{"Log", "[", 
          RowBox[{"MVC", "^", "2"}], "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", "1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"MV1", "^", "2"}], 
           RowBox[{"Log", "[", 
            RowBox[{"MV1", "^", "2"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"MV2", "^", "2"}], 
           RowBox[{"Log", "[", 
            RowBox[{"MV2", "^", "2"}], "]"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MV1", "^", "2"}], "-", 
          RowBox[{"MV2", "^", "2"}]}], ")"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", "1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"MV1", "^", "2"}], 
           RowBox[{"Log", "[", 
            RowBox[{"MV1", "^", "2"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"MVC", "^", "2"}], 
           RowBox[{"Log", "[", 
            RowBox[{"MVC", "^", "2"}], "]"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MV1", "^", "2"}], "-", 
          RowBox[{"MVC", "^", "2"}]}], ")"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "+", "1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"MV2", "^", "2"}], 
           RowBox[{"Log", "[", 
            RowBox[{"MV2", "^", "2"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"MVC", "^", "2"}], 
           RowBox[{"Log", "[", 
            RowBox[{"MVC", "^", "2"}], "]"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MV2", "^", "2"}], "-", 
          RowBox[{"MVC", "^", "2"}]}], ")"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV1", "^", "2"}], ",", 
        RowBox[{"MV1", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"Log", "[", 
        RowBox[{"MV1", "^", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MV2", "^", "2"}], ",", 
        RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"Log", "[", 
        RowBox[{"MV2", "^", "2"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B0", "[", 
       RowBox[{"0", ",", 
        RowBox[{"MVC", "^", "2"}], ",", 
        RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"Log", "[", 
        RowBox[{"MVC", "^", "2"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7417091655122757`*^9, 3.7417092013911047`*^9}, {
   3.741709292051649*^9, 3.741709339361772*^9}, {3.741709411955652*^9, 
   3.741709489330265*^9}, {3.741709526800027*^9, 3.741709533279068*^9}, {
   3.7417097491865673`*^9, 3.741709785639215*^9}, {3.7417098575479183`*^9, 
   3.74170995840797*^9}, {3.741713091905369*^9, 3.741713093971752*^9}, {
   3.7417132658619967`*^9, 3.7417132674192047`*^9}, {3.7419528148811502`*^9, 
   3.741952820967764*^9}, {3.741956026545911*^9, 3.741956031674634*^9}, {
   3.741956405067115*^9, 3.741956414502782*^9}, {3.74196686999393*^9, 
   3.741966929296669*^9}, 3.7419669842175426`*^9, 3.741967115006769*^9, {
   3.741967794063829*^9, 3.741967794153755*^9}, {3.7419739888838577`*^9, 
   3.741973997548518*^9}, {3.741974043037211*^9, 3.741974072096237*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"07392d06-c034-488c-9367-99e5fa8dfe9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T4", "=", 
   RowBox[{
    RowBox[{"T1", "/.", "Rep1"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T5", "=", 
   RowBox[{
    RowBox[{"T4", "/.", "Rep2"}], "//", "Simplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.741966951058297*^9, 3.74196695326272*^9}, 
   3.741967016011108*^9, 3.7419678037247267`*^9, {3.741974083688739*^9, 
   3.741974095565024*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"98cb4a6f-4eaf-4eae-ac00-a0c0ffc66918"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{"T5", ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
   "Simplify"}], ";"}]], "Input",
 CellChangeTimes->{{3.741967022547324*^9, 3.74196702467239*^9}, 
   3.741974107754727*^9, 3.7420425091293087`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"1191a0b0-34ba-4dc4-9a18-23b6678306d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["T-parameter (non-simple form)", "Subchapter",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.742042635684626*^9, 
  3.742042649557345*^9}},ExpressionUUID->"072dadee-21c3-401b-8410-\
193ce1ef3518"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"T9", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"WW0", "/", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"cw", "*", "MZ"}], ")"}], "2"]}], "-", 
         RowBox[{"ZZ0", "/", 
          SuperscriptBox["MZ", "2"]}], "-", 
         RowBox[{"2", "*", 
          FractionBox["sw", "cw"], 
          RowBox[{"Z\[Gamma]MZ", "/", 
           SuperscriptBox["MZ", "2"]}]}]}], "]"}], "/", "\[Alpha]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{
         RowBox[{"e", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", "\[Pi]"}], ")"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T10", "=", 
     RowBox[{
      RowBox[{"T9", "/.", "Rep"}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T11", "=", 
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{"T10", ",", 
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//",
       "Simplify"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.74204251865851*^9, 3.742042631505426*^9, {3.742042671282745*^9, 
   3.742042701717341*^9}, {3.742042737145369*^9, 3.742042836742496*^9}, {
   3.7420428829421043`*^9, 3.7420428867927856`*^9}, {3.742049022414261*^9, 
   3.74204903380933*^9}, {3.742049117309039*^9, 3.7420491440104647`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"8308e304-265c-443f-8ffe-669724275164"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"T12", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Numerator", "[", 
      RowBox[{"Normal", "[", "T11", "]"}], "]"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.74204903727639*^9, 3.742049063429421*^9}, 
   3.742049107682909*^9, {3.7420491497754908`*^9, 3.74204915943965*^9}, 
   3.742049200297226*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"c4e854c0-0c4c-421a-9afe-3a90e23b437e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"T12", "/.", 
   RowBox[{"{", 
    RowBox[{"MV2", "\[Rule]", "MVC"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.742049202860639*^9, 3.74204921214008*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"afbbb085-e226-403f-b60a-48ad866d3de0"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Power","infy",
    "\"Infinite expression \\!\\(\\*FormBox[FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0\\\", \\\"3\\\"]], TraditionalForm]\\) encountered.\"",2,
    98,4,24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742049212758461*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"d2ebbb71-f73d-4b6c-89dd-1fab38727dc6"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Infinity","indet",
    "\"Indeterminate expression \\!\\(\\*FormBox[RowBox[{\\\"0\\\", \\\" \
\\\", SuperscriptBox[\\\"MV1\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[\\\"MVC\\\", \\\"8\\\"], \\\" \\\", \\\"ComplexInfinity\\\"}], \
TraditionalForm]\\)\\n encountered.\"",2,98,5,24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742049212769404*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"ab8e66f7-34c2-4e13-89de-de4baee5bf63"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Power","infy",
    "\"Infinite expression \\!\\(\\*FormBox[FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0\\\", \\\"3\\\"]], TraditionalForm]\\) encountered.\"",2,
    98,6,24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742049212779043*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"9d7002b5-f04b-4433-8689-1aa8e4100c1f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Infinity","indet",
    "\"Indeterminate expression \\!\\(\\*FormBox[RowBox[{\\\"0\\\", \\\" \
\\\", SuperscriptBox[\\\"MV1\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[\\\"MVC\\\", \\\"8\\\"], \\\" \\\", \\\"ComplexInfinity\\\"}], \
TraditionalForm]\\)\\n encountered.\"",2,98,7,24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742049212871723*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"fcc18c86-f8d7-42e4-98d6-5a01a8e860d1"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Power","infy",
    "\"Infinite expression \\!\\(\\*FormBox[FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0\\\", \\\"3\\\"]], TraditionalForm]\\) encountered.\"",2,
    98,8,24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.7420492128729362`*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"8417a5a9-6ea6-4761-9690-c277a63984e8"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General","stop",
    "\"Further output of \\!\\(\\*FormBox[StyleBox[RowBox[{\\\"Power\\\", \
\\\"::\\\", \\\"infy\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be \
suppressed during this calculation.\"",2,98,9,24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742049212882494*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"a8157e6d-aca9-467a-9dfc-8ea24e05c2fd"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Infinity","indet",
    "\"Indeterminate expression \\!\\(\\*FormBox[RowBox[{\\\"0\\\", \\\" \
\\\", SuperscriptBox[\\\"MV1\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[\\\"MVC\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[\\\"MVC\\\", \\\"6\\\"], \\\" \\\", \\n     \
\\\"ComplexInfinity\\\"}], TraditionalForm]\\)\\n encountered.\"",2,98,11,
    24786385338180073915,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.742049212889855*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"7dda9a41-83f0-4fda-9be9-1751ac38d617"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General","stop",
    "\"Further output of \\!\\(\\*FormBox[StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will \
be suppressed during this calculation.\"",2,98,12,24786385338180073915,
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.7420492128968353`*^9},
 CellLabel->
  "During evaluation of \
In[98]:=",ExpressionUUID->"ce284418-3afb-4c46-8a48-82adb1fcc431"],

Cell[BoxData[
 FormBox["Indeterminate", TraditionalForm]], "Output",
 CellChangeTimes->{3.742049212903928*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"81cbea48-41be-4c52-9548-5a6f96ac801c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trush", "Chapter",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.741635333380395*^9, 
  3.741635333910285*^9}},ExpressionUUID->"346186b1-1429-429b-b746-\
cbcc729c8ec8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"B0", ",", "B1", ",", "B00", ",", "B11"}], "}"}], ",", 
    RowBox[{"BReduce", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741632984030181*^9, 3.7416329844007387`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"715b04a7-d323-46d4-95c3-7d6c92334fba"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "SetOptions","sstm",
    "\"Argument \\!\\(\\*FormBox[RowBox[{RowBox[{\\\"B0i\\\", \\\"(\\\", \
RowBox[{\\\"bb0\\\", \\\",\\\", \\\"##1\\\"}], \\\")\\\"}], \\\"&\\\"}], \
TraditionalForm]\\) is not a symbol or a stream.\"",2,33,13,
    24783661878232447580,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.7416329874988623`*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"3fc35884-763b-4b0e-b967-5ebdb880684d"],

Cell[BoxData[
 FormBox[
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"B0i", "(", 
        RowBox[{"bb0", ",", "##1"}], ")"}], "&"}], ",", "B1", ",", "B00", ",",
       "B11"}], "}"}], ",", 
    RowBox[{"BReduce", "\[Rule]", "True"}]}], "]"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.741632987500602*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"0cf386f9-b24a-4880-9a8a-03117be45f4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AA", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"B0", "[", 
     RowBox[{"x", ",", 
      RowBox[{"MV1", "^", "2"}], ",", 
      RowBox[{"MV2", "^", "2"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.74163452541103*^9, 3.741634568562121*^9}, {
  3.741634648382009*^9, 3.7416346496809196`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f78a250c-9306-4e41-8c91-60e5dacbd0ec"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    RowBox[{
     SubscriptBox["B", "0"], "(", "0", ",", 
     SuperscriptBox["MV1", "2"], ",", 
     SuperscriptBox["MV2", "2"], ")"}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"DB0", "(", 
      RowBox[{"0", ",", 
       SuperscriptBox["MV1", "2"], ",", 
       SuperscriptBox["MV2", "2"]}], ")"}]}], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["x", "2"], ")"}],
     SeriesData[$CellContext`x, 0, {}, 0, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`x, 0, {
     HighEnergyPhysics`fctables`B0`B0[
     0, $CellContext`MV1^2, $CellContext`MV2^2], 
     HighEnergyPhysics`fctables`DB0`DB0[
     0, $CellContext`MV1^2, $CellContext`MV2^2]}, 0, 2, 1],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{{3.7416345618421907`*^9, 3.741634570557412*^9}, 
   3.741634650464506*^9, 3.741634683878809*^9, 3.741691307190115*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"05dd501c-97ab-4560-89c9-2d96ec5e9bf1"]
}, Open  ]],

Cell[BoxData["7"], "Input",
 CellChangeTimes->{
  3.7416913071108093`*^9},ExpressionUUID->"b2469c0d-25be-496a-8f02-\
785ba3535434"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AO", "[", 
   RowBox[{"MVC", "^", "2"}], "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"MVC", "^", "2"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"B0", "[", 
      RowBox[{"0", ",", 
       RowBox[{"MVC", "^", "2"}], ",", 
       RowBox[{"MVC", "^", "2"}]}], "]"}], "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.741690725923458*^9, 
  3.7416907265223637`*^9}},ExpressionUUID->"47c5ff3c-6bba-49a4-af69-\
8069b9577e28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"m0_", ",", "m1_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     FractionBox[
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}]}], 
      RowBox[{
       RowBox[{"x", "*", 
        SuperscriptBox["m1", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "*", 
        SuperscriptBox["m0", "2"]}]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.74171209354173*^9, 3.741712107089581*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"9a8b1bed-44bd-4289-9ecb-54f4e01e465f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    FractionBox[
     RowBox[{"x", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}]}], 
     RowBox[{
      RowBox[{"x", "*", 
       SuperscriptBox["m1", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "*", 
       SuperscriptBox["m0", "2"]}]}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"ff78df87-c3b5-4163-91a8-8fbd02e0ee54"],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["m0", "4"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m0", "2"], " ", 
        SuperscriptBox["m1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"log", "(", 
           RowBox[{"-", 
            SuperscriptBox["m1", "2"]}], ")"}], "-", 
          RowBox[{"log", "(", 
           RowBox[{"-", 
            SuperscriptBox["m0", "2"]}], ")"}]}], ")"}]}], "-", 
       SuperscriptBox["m1", "4"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m0", "2"], "-", 
          SuperscriptBox["m1", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "(", 
       FractionBox[
        SuperscriptBox["m0", "2"], 
        RowBox[{
         SuperscriptBox["m0", "2"], "-", 
         SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}], "\[Or]", 
     RowBox[{
      RowBox[{"Re", "(", 
       FractionBox[
        SuperscriptBox["m0", "2"], 
        RowBox[{
         SuperscriptBox["m0", "2"], "-", 
         SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
     RowBox[{
      FractionBox[
       SuperscriptBox["m0", "2"], 
       RowBox[{
        SuperscriptBox["m0", "2"], "-", 
        SuperscriptBox["m1", "2"]}]], "\[NotElement]", 
      TemplateBox[{},
       "Reals"]}]}]}], "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.741712536624567*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"11e8eabf-e736-40cc-93d5-7e923c822b95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"f", "[", 
   RowBox[{"2", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741712111526375*^9, 3.7417121690071697`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"c26f9440-d7f2-45fc-8c37-fd4652e71ed2"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{"25", " ", 
     RowBox[{"log", "(", "5", ")"}]}], "-", "156"}], "27648"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.741712116817037*^9, 3.7417121736684237`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"5f94aad7-33da-456b-b711-5fcf2fbf24b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"10", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.741712137167535*^9, 3.741712171308415*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"7794d2cf-39a9-4a08-a9bc-a70f5e017c06"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{"25", " ", 
     RowBox[{"log", "(", "5", ")"}]}], "-", "156"}], "27648"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.741712139098701*^9, 3.741712175611169*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"b1ff73ca-d912-451c-bbc2-7ee90b685537"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DB0", "[", 
    RowBox[{"0", ",", 
     RowBox[{"MV1", "^", "2"}], ",", 
     RowBox[{"MV2", "^", "2"}]}], "]"}], "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["MV1", "4"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["MV2", "2"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         SuperscriptBox["MV1", "2"]}], "]"}], " ", 
       SuperscriptBox["MV1", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["MV2", "2"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         SuperscriptBox["MV2", "2"]}], "]"}], " ", 
       SuperscriptBox["MV1", "2"]}], "-", 
      SuperscriptBox["MV2", "4"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["MV1", "2"], "-", 
         SuperscriptBox["MV2", "2"]}], ")"}], "3"]}]]}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DB0", "[", 
    RowBox[{"0", ",", 
     RowBox[{"MV1", "^", "2"}], ",", 
     RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["MV1", "4"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["MVC", "2"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         SuperscriptBox["MV1", "2"]}], "]"}], " ", 
       SuperscriptBox["MV1", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["MVC", "2"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         SuperscriptBox["MVC", "2"]}], "]"}], " ", 
       SuperscriptBox["MV1", "2"]}], "-", 
      SuperscriptBox["MVC", "4"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["MV1", "2"], "-", 
         SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]]}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DB0", "[", 
    RowBox[{"0", ",", 
     RowBox[{"MV2", "^", "2"}], ",", 
     RowBox[{"MVC", "^", "2"}]}], "]"}], "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["MV2", "4"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["MVC", "2"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         SuperscriptBox["MV2", "2"]}], "]"}], " ", 
       SuperscriptBox["MV2", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["MVC", "2"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"-", 
         SuperscriptBox["MVC", "2"]}], "]"}], " ", 
       SuperscriptBox["MV2", "2"]}], "-", 
      SuperscriptBox["MVC", "4"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["MV2", "2"], "-", 
         SuperscriptBox["MVC", "2"]}], ")"}], "3"]}]]}]}]}]], "Input",Expressi\
onUUID->"4f8c9882-31a0-4756-8b9b-6ce173157ba4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m0", ",", "m1"}], "}"}], ",", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m0", 
       StyleBox["\[Element]", "SearchResultSummary"], 
       StyleBox[" ", "SearchResultSummary"], "Real"}], "&&", " ", 
      RowBox[{"m1", 
       StyleBox["\[Element]", "SearchResultSummary"], 
       StyleBox[" ", "SearchResultSummary"], "Real"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"-", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "1"], 
       RowBox[{
        FractionBox[
         RowBox[{"x", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}]}], 
         RowBox[{
          RowBox[{"x", "*", 
           SuperscriptBox["m1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], "*", 
           SuperscriptBox["m0", "2"]}]}]], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741712816439139*^9, 3.741712846665814*^9}, {
  3.7417129352505293`*^9, 3.74171297962278*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"48121f97-a941-4fe4-80dc-282d8c664a82"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Element","bset",
    "\"The second argument \\!\\(\\*FormBox[\\\"Real\\\", TraditionalForm]\\) \
of Element should be one of: Primes, Integers, Rationals, Algebraics, Reals, \
Complexes, or Booleans.\"",2,82,4,24784172955607584191,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.741712988408194*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"97ea07e1-f699-4f24-8c32-0de87c56077d"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Element","bset",
    "\"The second argument \\!\\(\\*FormBox[\\\"Real\\\", TraditionalForm]\\) \
of Element should be one of: Primes, Integers, Rationals, Algebraics, Reals, \
Complexes, or Booleans.\"",2,82,5,24784172955607584191,"Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.741712988519905*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"e55a6c79-5352-4cc7-86c6-3ede7d6f2a4c"],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["m0", "4"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m0", "2"], " ", 
        SuperscriptBox["m1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"log", "(", 
           RowBox[{"-", 
            SuperscriptBox["m1", "2"]}], ")"}], "-", 
          RowBox[{"log", "(", 
           RowBox[{"-", 
            SuperscriptBox["m0", "2"]}], ")"}]}], ")"}]}], "-", 
       SuperscriptBox["m1", "4"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m0", "2"], "-", 
          SuperscriptBox["m1", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Im", "(", "m0", ")"}], "2"], "\[GreaterEqual]", 
      SuperscriptBox[
       RowBox[{"Re", "(", "m0", ")"}], "2"]}], "\[And]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Im", "(", "m1", ")"}], "2"], "\[GreaterEqual]", 
      SuperscriptBox[
       RowBox[{"Re", "(", "m1", ")"}], "2"]}], "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Re", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
       RowBox[{
        RowBox[{"Re", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}], "\[Or]", 
       RowBox[{
        FractionBox[
         SuperscriptBox["m0", "2"], 
         RowBox[{
          SuperscriptBox["m0", "2"], "-", 
          SuperscriptBox["m1", "2"]}]], "\[NotElement]", 
        TemplateBox[{},
         "Reals"]}]}], ")"}]}]}], "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.741712998612314*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"a7977341-81bf-4b61-a18e-f53059765e31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m0", ",", "m1"}], "}"}], ",", 
     RowBox[{
      RowBox[{"m0", ">", "0"}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{"m1", ">", "0"}], "&&", 
        RowBox[{"m1", ">", "m0"}], "&&", 
        RowBox[{"Im", "[", "m1", "]"}]}], "=", 
       RowBox[{"0", "&&", 
        RowBox[{"Im", "[", "m0", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"-", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{
         FractionBox[
          RowBox[{"x", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}]}], 
          RowBox[{
           RowBox[{"x", "*", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "x"}], ")"}], "*", 
            SuperscriptBox["m0", "2"]}]}]], 
         RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], "]"}], "\n", 
   FormBox[
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m0", "4"], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["m1", "2"], " ", 
          RowBox[{"log", "(", 
           RowBox[{"-", 
            SuperscriptBox["m0", "2"]}], ")"}], " ", 
          SuperscriptBox["m0", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["m1", "2"], " ", 
          RowBox[{"log", "(", 
           RowBox[{"-", 
            SuperscriptBox["m1", "2"]}], ")"}], " ", 
          SuperscriptBox["m0", "2"]}], "-", 
         SuperscriptBox["m1", "4"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m0", "2"], "-", 
            SuperscriptBox["m1", "2"]}], ")"}], "3"]}]]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "(", "m0", ")"}], "<", "0"}], "\[And]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], "<", "0"}], "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"m1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], "\[LongEqual]", "0"}], 
               "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                ")"}]}], ")"}], "\[Or]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], ">", "0"}], "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"m1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
         "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"m0", "\[Element]", 
            TemplateBox[{},
             "Reals"]}], "\[And]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", 
               FractionBox[
                SuperscriptBox["m0", "2"], 
                RowBox[{
                 SuperscriptBox["m0", "2"], "-", 
                 SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0", "\[LessEqual]", 
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "1"}],
                "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                 
                 RowBox[{
                  RowBox[{"Im", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                ")"}]}], ")"}], "\[Or]", 
             RowBox[{
              RowBox[{"Re", "(", 
               FractionBox[
                SuperscriptBox["m0", "2"], 
                RowBox[{
                 SuperscriptBox["m0", "2"], "-", 
                 SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "(", "m0", ")"}], ">", "0"}], "\[And]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], "<", "0"}], "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"m1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], "\[LongEqual]", "0"}], 
               "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                ")"}]}], ")"}], "\[Or]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], ">", "0"}], "\[And]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"m1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                   RowBox[{
                    RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                    RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                    ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], 
        ")"}], "\[And]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}], 
         "\[Or]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}], "\[Or]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}]}], ")"}], 
       "\[And]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
           "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}]}], ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{"Im", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", 
            "1"}]}], ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Im", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m1", ")"}], " ", 
                RowBox[{"Re", "(", "m0", ")"}]}], "-", 
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Im", "(", "m1", ")"}]}], "+", 
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], 
            "\[GreaterEqual]", "0"}], "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", 
            "1"}]}], ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m1", ")"}], " ", 
                RowBox[{"Re", "(", "m0", ")"}]}], "-", 
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Im", "(", "m1", ")"}]}], "+", 
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], 
            "\[GreaterEqual]", "0"}], "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m1", ")"}], " ", 
                RowBox[{"Re", "(", "m0", ")"}]}], "-", 
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Im", "(", "m1", ")"}]}], "+", 
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], 
            "\[GreaterEqual]", "0"}], "\[And]", 
           RowBox[{
            RowBox[{"Im", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
           "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Im", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
           "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
           "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m1", ")"}], " ", 
                RowBox[{"Re", "(", "m0", ")"}]}], "-", 
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Im", "(", "m1", ")"}]}], "+", 
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
            "0"}]}], ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}], 
           "\[And]", 
           RowBox[{
            RowBox[{"Im", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m1", ")"}], " ", 
                RowBox[{"Re", "(", "m0", ")"}]}], "-", 
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Im", "(", "m1", ")"}]}], "+", 
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
            "0"}], "\[And]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
          ")"}], "\[Or]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Im", "(", "m0", ")"}], " ", 
             RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
            RowBox[{
             RowBox[{"Im", "(", "m1", ")"}], " ", 
             RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m1", ")"}], " ", 
                RowBox[{"Re", "(", "m0", ")"}]}], "-", 
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", "m0", ")"}], " ", 
                RowBox[{"Im", "(", "m1", ")"}]}], "+", 
               RowBox[{
                RowBox[{"Re", "(", "m0", ")"}], " ", 
                RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
            "0"}], "\[And]", 
           RowBox[{
            RowBox[{"Im", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
          ")"}]}], ")"}]}]}], "]"}],
    TraditionalForm]}]}]], "Input",
 CellChangeTimes->{{3.74170936720262*^9, 3.741709367587508*^9}, {
  3.741709693208188*^9, 3.741709719513894*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"aa7d3437-3de4-4ef7-828f-b0cd5cf56200"],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["m0", "4"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["m1", "2"], " ", 
        RowBox[{"log", "(", 
         RowBox[{"-", 
          SuperscriptBox["m0", "2"]}], ")"}], " ", 
        SuperscriptBox["m0", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m1", "2"], " ", 
        RowBox[{"log", "(", 
         RowBox[{"-", 
          SuperscriptBox["m1", "2"]}], ")"}], " ", 
        SuperscriptBox["m0", "2"]}], "-", 
       SuperscriptBox["m1", "4"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m0", "2"], "-", 
          SuperscriptBox["m1", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "(", "m0", ")"}], "<", "0"}], "\[And]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "<", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "\[LongEqual]", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0", "\[LessEqual]", 
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                  "1"}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}],
             ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], ">", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m0", "\[Element]", 
          TemplateBox[{},
           "Reals"]}], "\[And]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "\[LessEqual]", 
              RowBox[{"Re", "(", 
               FractionBox[
                SuperscriptBox["m0", "2"], 
                RowBox[{
                 SuperscriptBox["m0", "2"], "-", 
                 SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "1"}], 
             "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
               RowBox[{
                RowBox[{"Im", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], ")"}]}],
             ")"}], "\[Or]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "(", "m0", ")"}], ">", "0"}], "\[And]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "<", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "\[LongEqual]", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0", "\[LessEqual]", 
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                  "1"}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}],
             ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], ">", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}],
      "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Im", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}], "\[Or]", 
       RowBox[{
        RowBox[{"Re", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}], "\[Or]", 
       RowBox[{
        RowBox[{"Re", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}]}], ")"}], "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}]}], ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[GreaterEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[GreaterEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[GreaterEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}]}], ")"}], 
       "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}]}], ")"}], 
       "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
          "0"}]}], ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}]}], ")"}]}]}], "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.7417098295151777`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"7ff29369-8ebc-4a79-ad7b-41c6515059a5"],

Cell[BoxData[
 FormBox[
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["m0", "4"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["m1", "2"], " ", 
        RowBox[{"log", "(", 
         RowBox[{"-", 
          SuperscriptBox["m0", "2"]}], ")"}], " ", 
        SuperscriptBox["m0", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["m1", "2"], " ", 
        RowBox[{"log", "(", 
         RowBox[{"-", 
          SuperscriptBox["m1", "2"]}], ")"}], " ", 
        SuperscriptBox["m0", "2"]}], "-", 
       SuperscriptBox["m1", "4"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m0", "2"], "-", 
          SuperscriptBox["m1", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "(", "m0", ")"}], "<", "0"}], "\[And]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "<", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "\[LongEqual]", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0", "\[LessEqual]", 
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                  "1"}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}],
             ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], ">", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m0", "\[Element]", 
          TemplateBox[{},
           "Reals"]}], "\[And]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "\[LessEqual]", 
              RowBox[{"Re", "(", 
               FractionBox[
                SuperscriptBox["m0", "2"], 
                RowBox[{
                 SuperscriptBox["m0", "2"], "-", 
                 SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "1"}], 
             "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
               RowBox[{
                RowBox[{"Im", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], ")"}]}],
             ")"}], "\[Or]", 
           RowBox[{
            RowBox[{"Re", "(", 
             FractionBox[
              SuperscriptBox["m0", "2"], 
              RowBox[{
               SuperscriptBox["m0", "2"], "-", 
               SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "(", "m0", ")"}], ">", "0"}], "\[And]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "<", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], "\[LongEqual]", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0", "\[LessEqual]", 
                  RowBox[{"Re", "(", 
                   FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                  "1"}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{
                RowBox[{"Re", "(", 
                 FractionBox[
                  SuperscriptBox["m0", "2"], 
                  RowBox[{
                   SuperscriptBox["m0", "2"], "-", 
                   SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], ")"}]}],
             ")"}], "\[Or]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], ">", "0"}], "\[And]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], "<", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[LessEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"m1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}], "\[Or]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "(", "m1", ")"}], ">", "0"}], "\[And]", 
                 RowBox[{
                  RowBox[{"Re", "(", "m1", ")"}], "\[GreaterEqual]", 
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"Im", "(", "m0", ")"}], " ", 
                    RowBox[{"Im", "(", "m1", ")"}]}], 
                    RowBox[{"Re", "(", "m0", ")"}]]}]}], "\[And]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                   
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", 
                    "1"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}], "\[Or]", 
                    
                    RowBox[{
                    RowBox[{"Im", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "0"}]}], 
                    ")"}]}], ")"}], "\[Or]", 
                   RowBox[{
                    RowBox[{"Re", "(", 
                    FractionBox[
                    SuperscriptBox["m0", "2"], 
                    RowBox[{
                    SuperscriptBox["m0", "2"], "-", 
                    SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}]}], 
                  ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}],
      "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Im", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}], "\[Or]", 
       RowBox[{
        RowBox[{"Re", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], ">", "1"}], "\[Or]", 
       RowBox[{
        RowBox[{"Re", "(", 
         FractionBox[
          SuperscriptBox["m0", "2"], 
          RowBox[{
           SuperscriptBox["m0", "2"], "-", 
           SuperscriptBox["m1", "2"]}]], ")"}], "<", "0"}]}], ")"}], "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}]}], ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[GreaterEqual]", "0"}], 
         "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[GreaterEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[GreaterEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[GreaterEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}]}], ")"}], 
       "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[GreaterEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}]}], ")"}], 
       "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[GreaterEqual]", "1"}], 
         "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
          "0"}]}], ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}], "\[LessEqual]", "0"}], "\[And]", 
         
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Re", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[LessEqual]", "0"}]}], 
        ")"}], "\[Or]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "(", "m0", ")"}], " ", 
           RowBox[{"Re", "(", "m0", ")"}]}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"Im", "(", "m1", ")"}], " ", 
           RowBox[{"Re", "(", "m1", ")"}]}]}], "\[And]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m1", ")"}], " ", 
              RowBox[{"Re", "(", "m0", ")"}]}], "-", 
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "(", "m0", ")"}], " ", 
              RowBox[{"Im", "(", "m1", ")"}]}], "+", 
             RowBox[{
              RowBox[{"Re", "(", "m0", ")"}], " ", 
              RowBox[{"Re", "(", "m1", ")"}]}]}], ")"}]}], "\[LessEqual]", 
          "0"}], "\[And]", 
         RowBox[{
          RowBox[{"Im", "(", 
           FractionBox[
            SuperscriptBox["m0", "2"], 
            RowBox[{
             SuperscriptBox["m0", "2"], "-", 
             SuperscriptBox["m1", "2"]}]], ")"}], "\[NotEqual]", "0"}]}], 
        ")"}]}], ")"}]}]}], "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.741709829753416*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"483681c5-9901-451a-b879-384c512fdd80"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.742302545097443*^9, 
  3.7423025873801537`*^9}},ExpressionUUID->"9544a59a-5c2e-48fd-b17e-\
790fb643050f"],

Cell[CellGroupData[{

Cell["Pauli-Villars", "Subchapter",
 CellChangeTimes->{{3.742302845056161*^9, 
  3.742302847172167*^9}},ExpressionUUID->"55d7c7d8-76b1-4030-8b91-\
6bca5bae63f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "\[CapitalLambda]", ",", "F"}], "}"}], ",", 
   RowBox[{
    RowBox[{"F", "=", 
     SuperscriptBox["10", "10"]}], ";", 
    RowBox[{"m", "=", "1"}], ";", 
    RowBox[{"\[CapitalLambda]", "=", 
     SuperscriptBox["10", "3"]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F", "*", 
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["p", "2"], "-", 
            SuperscriptBox["m", "2"]}]], ")"}]}], ",", 
        RowBox[{"F", "*", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             SuperscriptBox["m", "2"]}]], "-", 
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             SuperscriptBox["\[CapitalLambda]", "2"]}]]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", 
        SuperscriptBox["10", "5"]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742302594106084*^9, 3.742302652858511*^9}, {
  3.7423027834541492`*^9, 
  3.7423028501819677`*^9}},ExpressionUUID->"1e918222-e4e6-4805-ac55-\
ffb5b261c0be"],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVlXs41IkChkXu08mUS6QMxhqFmEFP19+Xp5wtShSpSTm11rUL1RYrl6zI
ZUW1Z/ecLirXLrKKpNNWR4iSXGbGZTDDTKEZfsPg59I4nT++533ef99/Pssj
J3yD1dXU1KK/7f90/+ND3dm2dgTN7bbeo3JFTvrKapPhdlTf06KfbXKF+6bN
qnZFO0r897MDX7hCORronjvdjpximrXfQ1f4+91opOnykBXZpRub5Qozhnn3
AhYPejURZtd2uSK/wnTuSzAPLbVNO2baXPBUZLj5lZiHpJXDBl3DHMz4+6T5
D/EQ6hUaTO/hYHNTVquM5EF901eNfc0cvHmmFWKqxgfXq+gj7QkHrblUdvRK
PhoS5lMZ8RyMbBWKmVw+qOCHXQJDDmxK7qZcaudj3LeiU9uLjVALUbOFkI+D
3IwiCcHGg2vmZpUDfKjW2aU0cdhgX7hW2j/Gx8XnqjU1y9kAN1WwgS7A06Y/
MjbKnHFwUYTdyE4BeMp/De/PdsaVKHaTb70A2ZoJdR09TjDIjGL/2izAhjoR
x7nVCZmFZf9sEAjAbUr881qdEy52Ox7BoAAV9cb/vvDICbHbVk856HZAuWZR
4HCSE4JMmZa6nh1Yx4i9M8ByguNrozMvP3TAfC/vdxuVIxoNps3t+Z2ozB/4
74tce1xUic939XTC73Gyxtske2yRNfamSTthe3PnfvFJe1TVX8+TKjuRvUrz
K7ztURgP5q2lXRhmeq4tp9njgix19RKfLjjMFgTuTF+N9W+N11PvuhC9N7Ns
LHsV7ie47HvzuhtJRuzSgtcs5NEZbSaN3cjp0XFpLWfh6l1974jWbnwMPq5N
y2chvr7fY8lAN06GhuwrusiC7+Ict6CFQtjP1EhivViYuSk3mvMQ4rS7j0da
ly12/FXYznkvhPHVahfe/HcYnFvme5ffA92N/h3ukTY44WvZ3tzbg0Lz9dPp
QTaYLLLzn/vUg18ie58I99pAc8/6A35TPUhiXWy9vskGViXcI9rLesGc25Ty
62IbcP1uRkfs70W0zj6pYwUTHx5aX+EIezGUOuNmoc1ExSHH9hpxH85f4am9
qbFCbKrI5+hQH6ild/Q+VFsBZbnN6oo+/BxKj+/90wqfEn+WMtREmFGPvLQk
zwrRrX2iw4tFcIkrTauLs8KlM8WCHgcRVCnFEwFrrVD1fF1tZ7gIwkDbvfNl
ljD6/mBei0QENrMz06aCgaullbLxQRF2n9v6/ewDBgyN6OuM5SLYfE1W8fO/
eX9ty4EJEUgz5615VxlYErdGQ6IpxoaRktyY0wwYlKn/OPmdGEMUzcPdlQG9
ZSWrl4eJscraOVL/JwuoPk9U/iAX4/C2ydhjD1bgP6MN7vsk/Zgg7m2LqTJD
cfyYo3x0AFJ7rnihygTChMe9dycloFx2HAt+bATpYKlG9Rcp0uwkJ190LIV5
pyrt1MQn7Bz12fzUZAlYzpeSM+Wf0anUNGEUGyBu9v6WOtEg6FWaLzxb/gaV
l3XQ3cEhdGi7RtHDafDT4o339Q5jz4GZqFvheuj06P78cugLFG11P8hidVAw
HXPr1agMlonH5KfrteBhuOc9QyJH/bkcdUWAJowqE/cz5SM4/vlbc4UGnr0c
5KZKRuExePBy8it1tN1QXk6JIPGoItIu69ECHLawYJqOkmjMO6AzkKcGfvun
KGGYAtff/WXqc2qekDR1nFCMKLAiUdbqVfSVEM6EsNwixsD/6TxOms8RVFCN
u750DDr3qjhxlTPEfb3ti9hh4zi7Zcjqd+9pYvtgRG6aZBympydM00wpIl73
Wb1TuBLXa2POqvVPEoKjrYfC5ErkKD3ds+omCLOxtLKWkAmouIHY/lFJKGvC
yjNkE0gXCPhbBOPEs4bPx8+ETkJHpkp1Vo0Rt3XYWaPiSXiMyRry3MYIRkYh
93nwFAp/mzEsj1AQ6VuqJJWiKUgrHAdo1SRRSWroCvunsIueINd/ShL9t7wd
FkinYJXdW6f/hCTWqz6d8RyaQn7LbemiUpIYrjbSFimmIOIx3i2/QxI7XE7Z
6WpQGDlUPBGYThJ6to7HuTYUDLIb3sdwScKNH5ObaEvBMyx+dW4ASRxJqa0s
sKOQcW3t7vt+JFE9cHB+1IGCfODGcJ83SYTnZVz+xY1CCTOX67uVJBpNh8of
/p1C29xGBdeBJCbfughat1MwXngpO3EVSVidS5yd8qSwKSB5tMCWJGL5Jlvd
d1NYnhs1PmZJEquuePD4ARS8s15r/GZMEv7f3mf2AIXZUFrxq6UkcUHRs8Iy
kEL9uFRfZkASXd5nfoz4BwWdhLX0bfokoTX/Kv3yUQpVX1nl0TokwS6lPaoI
ptBne51+W5MkDgUGtHWFUAjR2rXmozpJpNPyp+bDKBS9nNVTUyOJ/wHKw5Wh

           "]]}, Annotation[#, "Charting`Private`Tag$21770#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4rc88k/VhfB/lyd8kw==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$21770#2"]& ], {}}, {{}, {}, {}, {}}}, {}, \
{}}, {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 100000}, {-13.205770959041663`, 21.99345608451074}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
        FractionBox["F", 
         RowBox[{
           SuperscriptBox["p", "2"], "-", 
           SuperscriptBox["m", "2"]}]], 
        RowBox[{"F", " ", 
          RowBox[{"(", 
            RowBox[{
              FractionBox["1", 
               RowBox[{
                 SuperscriptBox["p", "2"], "-", 
                 SuperscriptBox["m", "2"]}]], "-", 
              FractionBox["1", 
               RowBox[{
                 SuperscriptBox["p", "2"], "-", 
                 SuperscriptBox["\[CapitalLambda]", "2"]}]]}], ")"}]}]}, 
       "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                TagBox[#, HoldForm], ",", 
                TagBox[#2, HoldForm]}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.74230265345627*^9, {3.7423027881005163`*^9, 3.742302828838462*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"5abdb109-5370-4062-9bb5-d185a76a4a96"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1299, 713},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 99, "Title",ExpressionUUID->"742dced8-88f5-4fc6-95cb-492732d7382a"],
Cell[CellGroupData[{
Cell[819, 30, 227, 4, 69, "Chapter",ExpressionUUID->"656cf661-9172-4d2a-bc00-489086462765"],
Cell[1049, 36, 552, 13, 101, "Input",ExpressionUUID->"da5c61b8-ffff-42ca-950a-0f655c54967b"],
Cell[1604, 51, 303, 9, 20, "Text",ExpressionUUID->"c0019483-c38c-4646-bb09-90d4bb585b9e"],
Cell[1910, 62, 931, 18, 60, "Message",ExpressionUUID->"af912e52-938a-4f59-8a3f-76013415c032"],
Cell[2844, 82, 775, 25, 20, "Text",ExpressionUUID->"b896f594-f59c-4ad1-a36e-25d9e3e5e431"],
Cell[3622, 109, 228, 6, 20, "Text",ExpressionUUID->"ed8b6e71-37da-4de6-91bd-62fbeacb4341"],
Cell[3853, 117, 491, 13, 58, "Text",ExpressionUUID->"70b64ad7-41e6-4635-b40a-e32703047ff6"],
Cell[4347, 132, 433, 14, 20, "Text",ExpressionUUID->"16fa76b7-c6fb-48ab-81f3-bf1d05b4ea8c"],
Cell[4783, 148, 501, 17, 104, "Text",ExpressionUUID->"b752fdfd-921e-48a0-b6f1-19d2c7e7a5eb"],
Cell[CellGroupData[{
Cell[5309, 169, 495, 10, 31, "Input",ExpressionUUID->"3d76ba44-6f6b-4706-9d0c-3dba64654fd9"],
Cell[5807, 181, 917, 18, 22, "Message",ExpressionUUID->"9a9653e0-7e66-499a-ade0-1c66a87aa48e"],
Cell[6727, 201, 912, 19, 22, "Message",ExpressionUUID->"0fdb969e-f495-477a-8f19-7b1710e62527"],
Cell[7642, 222, 912, 19, 22, "Message",ExpressionUUID->"d958d7fa-e3b1-4f88-a700-fd6529fab4ab"],
Cell[8557, 243, 912, 19, 22, "Message",ExpressionUUID->"d4ebc2a0-d66b-4f74-9598-eab87c11d825"],
Cell[9472, 264, 912, 19, 22, "Message",ExpressionUUID->"264f8e0f-dc7d-44c9-a8a5-3a5a02c78bbd"],
Cell[10387, 285, 918, 19, 22, "Message",ExpressionUUID->"55f01063-bc24-4c4a-920d-1f31d0851299"],
Cell[11308, 306, 917, 19, 22, "Message",ExpressionUUID->"0e47175a-5d46-49aa-b43c-8ef2b475e31b"],
Cell[12228, 327, 919, 19, 22, "Message",ExpressionUUID->"b1f4ccfd-f19b-4f98-bcde-2410b1a30924"],
Cell[13150, 348, 917, 19, 22, "Message",ExpressionUUID->"91227b3b-a0bf-4721-b23d-1ea6f85e0e5b"],
Cell[14070, 369, 913, 19, 22, "Message",ExpressionUUID->"1000761a-0ecf-4e3b-8e57-fbea9fd2be4e"],
Cell[14986, 390, 912, 19, 22, "Message",ExpressionUUID->"a049fa11-c07e-4bb3-860c-9492621fef3c"],
Cell[15901, 411, 750, 16, 169, "Print",ExpressionUUID->"34296b2d-7db1-4dc5-b9b6-a024f078cb43"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16700, 433, 177, 3, 69, "Chapter",ExpressionUUID->"b3194975-4961-4ed3-a749-b4d02d0b797d"],
Cell[CellGroupData[{
Cell[16902, 440, 163, 3, 65, "Subchapter",ExpressionUUID->"2a4312f0-7a91-4326-b141-4d5e31a4f9a3"],
Cell[17068, 445, 181988, 3007, 144, "Input",ExpressionUUID->"20bff082-972c-4e67-8487-9d6ea5d22545"],
Cell[CellGroupData[{
Cell[199081, 3456, 156, 3, 68, "Section",ExpressionUUID->"4d73b131-f75a-4736-bf04-86a348dac92b"],
Cell[199240, 3461, 4768, 128, 472, "Input",ExpressionUUID->"af6544f5-ecc8-405e-a27f-1e51067910ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204045, 3594, 162, 3, 67, "Section",ExpressionUUID->"beeb1aad-9d92-4467-b755-5b7044b680f4"],
Cell[204210, 3599, 1674, 45, 148, "Input",ExpressionUUID->"7afc50f2-55a1-4dda-bea7-44709cb509c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205921, 3649, 234, 4, 67, "Section",ExpressionUUID->"5747785e-90cb-4c2f-94df-d2169d3e3499"],
Cell[206158, 3655, 1430, 30, 55, "Input",ExpressionUUID->"dd6e0816-09bb-4de5-9b69-a3b385b17f99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207625, 3690, 193, 3, 67, "Section",ExpressionUUID->"63e7deb1-addb-41a0-9260-5715f7b32003"],
Cell[207821, 3695, 365, 9, 31, "Input",ExpressionUUID->"e524ef36-96ba-40eb-8cdb-e2507d726ef1"],
Cell[208189, 3706, 1890, 47, 78, "Input",ExpressionUUID->"4c0035cd-f353-4fab-a8db-8b468b36b3d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210116, 3758, 179, 3, 67, "Section",ExpressionUUID->"8b8c07ec-417c-4e8a-9dfb-50d872c9bd83"],
Cell[210298, 3763, 1797, 44, 78, "Input",ExpressionUUID->"6d8b25ac-0a99-41dc-8e2f-07980bf76edb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212144, 3813, 164, 3, 64, "Subchapter",ExpressionUUID->"2c508c35-e918-4948-a1b6-f5222c6b0bd5"],
Cell[212311, 3818, 224530, 3712, 148, "Section",ExpressionUUID->"3cbeecf4-d53b-4fca-9c38-ec11be9fe795"],
Cell[CellGroupData[{
Cell[436866, 7534, 156, 3, 52, "Section",ExpressionUUID->"f3231b73-7510-4d52-8626-857cd0648505"],
Cell[437025, 7539, 4927, 136, 449, "Input",ExpressionUUID->"02ea6ecc-a4d3-4619-83c0-17f6db0745f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441989, 7680, 162, 3, 67, "Section",ExpressionUUID->"d21905d8-e3b1-4182-8f15-8253710cdc84"],
Cell[CellGroupData[{
Cell[442176, 7687, 1697, 45, 148, "Input",ExpressionUUID->"7c5b4ded-ed8d-4b41-882c-89447aee71cc"],
Cell[443876, 7734, 701, 14, 22, "Message",ExpressionUUID->"44403c3c-a46c-4870-b670-c51fd8c35925"],
Cell[444580, 7750, 701, 14, 22, "Message",ExpressionUUID->"362d6882-e457-4e31-8d77-d983cb47ecd5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445330, 7770, 234, 4, 67, "Section",ExpressionUUID->"07b5b67a-f439-40ac-afea-de0cd6eccbce"],
Cell[445567, 7776, 1580, 32, 55, "Input",ExpressionUUID->"7b955849-4eb7-443a-8847-95a8f0961d3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447184, 7813, 179, 3, 67, "Section",ExpressionUUID->"8fb63286-c4c1-4ee7-bfc5-fa04d6e33b5e"],
Cell[447366, 7818, 1948, 46, 78, "Input",ExpressionUUID->"1132a442-7839-47f8-b5aa-031f5ec6696e"],
Cell[449317, 7866, 296, 8, 31, "Input",ExpressionUUID->"28d19a5d-aa41-496f-887d-74635e1290c8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[449662, 7880, 182, 3, 64, "Subchapter",ExpressionUUID->"b595f79e-c096-493a-9b3c-1147de483832"],
Cell[449847, 7885, 53617, 885, 172, "Input",ExpressionUUID->"4659ee3e-15cd-47e7-864f-e67336039fff"],
Cell[503467, 8772, 957, 25, 101, "Input",ExpressionUUID->"06c9e017-6eb5-417c-8a4e-11437ab5248d"],
Cell[CellGroupData[{
Cell[504449, 8801, 278, 4, 67, "Section",ExpressionUUID->"80524923-24e0-4663-a5cc-1e5946f7430f"],
Cell[504730, 8807, 848, 20, 55, "Input",ExpressionUUID->"0f8aa653-5608-4398-b33a-54ca5513f6ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505615, 8832, 338, 5, 68, "Section",ExpressionUUID->"d5ac513f-230e-48fc-87e2-d8775948a24d"],
Cell[505956, 8839, 1292, 37, 62, "Input",ExpressionUUID->"9b3f9dbc-ed0e-4d8e-b4ae-820c4d7876ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[507297, 8882, 224, 4, 65, "Subchapter",ExpressionUUID->"121f5376-bf87-40b4-8fc4-1cb3039abe55"],
Cell[507524, 8888, 1216, 28, 39, "Input",ExpressionUUID->"e0e68327-8794-4476-83b3-95f0cbae4ac3"],
Cell[508743, 8918, 8237, 221, 503, "Input",ExpressionUUID->"66de1b58-0cc3-4576-af8f-8ec63e68f694"],
Cell[516983, 9141, 8194, 233, 525, "Input",ExpressionUUID->"28b896f8-2cac-4701-b406-e073c2261810"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525214, 9379, 197, 3, 65, "Subchapter",ExpressionUUID->"9af2ec9c-6d74-4a1f-8dd8-87480c93b855"],
Cell[525414, 9384, 1159, 18, 31, "Input",ExpressionUUID->"5c6cfbeb-4eb1-4075-8619-0de49016aef1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526610, 9407, 203, 3, 65, "Subchapter",ExpressionUUID->"c84b1bee-9530-4aa2-83d5-cd95b75aa92d"],
Cell[CellGroupData[{
Cell[526838, 9414, 1249, 32, 101, "Input",ExpressionUUID->"22951ed9-ff7b-4344-8bf3-ecdb344f1da8"],
Cell[528090, 9448, 176, 3, 34, "Output",ExpressionUUID->"0f9b9b40-c09f-44a1-adce-dff64d402865"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528315, 9457, 178, 3, 65, "Subchapter",ExpressionUUID->"0b9eec2c-d1bd-4ef9-ae50-1f5dbae095a1"],
Cell[528496, 9462, 947, 21, 63, "Input",ExpressionUUID->"4fbaaeff-9aa6-4c4f-9012-64a82358fa70"],
Cell[CellGroupData[{
Cell[529468, 9487, 2100, 41, 216, "Input",ExpressionUUID->"51069be5-796c-4c41-9166-7397296be3de"],
Cell[531571, 9530, 4808, 95, 355, "Output",ExpressionUUID->"4abcd012-ce35-41e9-943e-2ca9eea791cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536416, 9630, 1062, 25, 216, "Input",ExpressionUUID->"47095227-785b-492e-b28a-538d4c41f8b0"],
Cell[537481, 9657, 3740, 78, 231, "Output",ExpressionUUID->"5b9edf03-5e71-4501-a01b-f1bc3a2d70d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541258, 9740, 321, 7, 31, "Input",ExpressionUUID->"05ba7950-d058-4fd8-ad83-ee019fc5e721"],
Cell[541582, 9749, 2225, 54, 234, "Output",ExpressionUUID->"0bc3ae1a-ac0b-405c-afd2-bcfade48d950"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543844, 9808, 291, 5, 31, "Input",ExpressionUUID->"1d2d036d-b27c-4d8c-95f7-e92bb2060567"],
Cell[544138, 9815, 6991, 136, 536, "Output",ExpressionUUID->"6dd18035-5b3f-4c05-8bb7-9490e3be94d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551166, 9956, 1061, 25, 216, "Input",ExpressionUUID->"92323376-4ee3-4f21-b693-0ba209a9e1d1"],
Cell[552230, 9983, 3916, 83, 226, "Output",ExpressionUUID->"2c6a64ea-1ec4-4729-a1a0-4370a7571dfa"]
}, Open  ]],
Cell[556161, 10069, 211, 4, 31, "Input",ExpressionUUID->"90e317dd-54b6-40a4-afdb-a7ef9f0cee09"],
Cell[556375, 10075, 1041, 28, 85, "Input",ExpressionUUID->"99f82478-014f-4822-a4db-f840e0b00166"],
Cell[CellGroupData[{
Cell[557441, 10107, 235, 5, 31, "Input",ExpressionUUID->"de146426-4b55-4ec6-a5ec-790ab95d8dab"],
Cell[557679, 10114, 224, 4, 34, "Output",ExpressionUUID->"684d233c-33ce-4081-977a-f388e123af59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557940, 10123, 1430, 31, 239, "Input",ExpressionUUID->"0e6d1f78-ceaa-40ba-a214-f4271586b561"],
Cell[559373, 10156, 5007, 102, 513, "Output",ExpressionUUID->"58503d2f-8cde-410b-a6f5-6a04042b6fd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564417, 10263, 180, 3, 31, "Input",ExpressionUUID->"6e70fe9d-01bb-4693-a02c-9a5e9b4ee80c"],
Cell[564600, 10268, 28775, 847, 1037, "Output",ExpressionUUID->"9f7e8677-8fae-4ac3-a87d-9955630070e0"]
}, Open  ]],
Cell[593390, 11118, 147, 3, 55, "Input",ExpressionUUID->"8c23a819-787b-4484-be92-abbf7ca7fd84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593574, 11126, 201, 4, 74, "Subchapter",ExpressionUUID->"d4cb2b7e-38fb-4a9a-8d58-80f6c3b2dae1"],
Cell[593778, 11132, 266, 7, 31, "Input",ExpressionUUID->"1d45b946-8d8c-419f-ae5b-1c8b0697dd66"],
Cell[594047, 11141, 6563, 180, 380, "Input",ExpressionUUID->"07392d06-c034-488c-9367-99e5fa8dfe9b"],
Cell[600613, 11323, 510, 13, 55, "Input",ExpressionUUID->"98cb4a6f-4eaf-4eae-ac00-a0c0ffc66918"],
Cell[601126, 11338, 410, 10, 31, "Input",ExpressionUUID->"1191a0b0-34ba-4dc4-9a18-23b6678306d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601573, 11353, 207, 4, 75, "Subchapter",ExpressionUUID->"072dadee-21c3-401b-8410-193ce1ef3518"],
Cell[601783, 11359, 1588, 44, 125, "Input",ExpressionUUID->"8308e304-265c-443f-8ffe-669724275164"],
Cell[603374, 11405, 464, 10, 55, "Input",ExpressionUUID->"c4e854c0-0c4c-421a-9afe-3a90e23b437e"],
Cell[CellGroupData[{
Cell[603863, 11419, 291, 6, 55, "Input",ExpressionUUID->"afbbb085-e226-403f-b60a-48ad866d3de0"],
Cell[604157, 11427, 452, 11, 52, "Message",ExpressionUUID->"d2ebbb71-f73d-4b6c-89dd-1fab38727dc6"],
Cell[604612, 11440, 560, 12, 46, "Message",ExpressionUUID->"ab8e66f7-34c2-4e13-89de-de4baee5bf63"],
Cell[605175, 11454, 452, 11, 52, "Message",ExpressionUUID->"9d7002b5-f04b-4433-8689-1aa8e4100c1f"],
Cell[605630, 11467, 560, 12, 46, "Message",ExpressionUUID->"fcc18c86-f8d7-42e4-98d6-5a01a8e860d1"],
Cell[606193, 11481, 454, 11, 52, "Message",ExpressionUUID->"8417a5a9-6ea6-4761-9690-c277a63984e8"],
Cell[606650, 11494, 500, 11, 22, "Message",ExpressionUUID->"a8157e6d-aca9-467a-9dfc-8ea24e05c2fd"],
Cell[607153, 11507, 627, 14, 516, "Message",ExpressionUUID->"7dda9a41-83f0-4fda-9be9-1751ac38d617"],
Cell[607783, 11523, 512, 12, 22, "Message",ExpressionUUID->"ce284418-3afb-4c46-8a48-82adb1fcc431"],
Cell[608298, 11537, 189, 3, 34, "Output",ExpressionUUID->"81cbea48-41be-4c52-9548-5a6f96ac801c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[608548, 11547, 180, 4, 79, "Chapter",ExpressionUUID->"346186b1-1429-429b-b746-cbcc729c8ec8"],
Cell[CellGroupData[{
Cell[608753, 11555, 387, 8, 55, "Input",ExpressionUUID->"715b04a7-d323-46d4-95c3-7d6c92334fba"],
Cell[609143, 11565, 518, 12, 22, "Message",ExpressionUUID->"3fc35884-763b-4b0e-b967-5ebdb880684d"],
Cell[609664, 11579, 454, 13, 34, "Output",ExpressionUUID->"0cf386f9-b24a-4880-9a8a-03117be45f4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610155, 11597, 488, 12, 31, "Input",ExpressionUUID->"f78a250c-9306-4e41-8c91-60e5dacbd0ec"],
Cell[610646, 11611, 1018, 26, 42, "Output",ExpressionUUID->"05dd501c-97ab-4560-89c9-2d96ec5e9bf1"]
}, Open  ]],
Cell[611679, 11640, 131, 3, 31, "Input",ExpressionUUID->"b2469c0d-25be-496a-8f02-785ba3535434"],
Cell[611813, 11645, 465, 14, 31, "Input",ExpressionUUID->"47c5ff3c-6bba-49a4-af69-8069b9577e28"],
Cell[612281, 11661, 699, 21, 60, "Input",ExpressionUUID->"9a8b1bed-44bd-4289-9ecb-54f4e01e465f"],
Cell[CellGroupData[{
Cell[613005, 11686, 539, 17, 60, "Input",ExpressionUUID->"ff78df87-c3b5-4163-91a8-8fbd02e0ee54"],
Cell[613547, 11705, 1619, 50, 64, "Output",ExpressionUUID->"11e8eabf-e736-40cc-93d5-7e923c822b95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615203, 11760, 262, 5, 55, "Input",ExpressionUUID->"c26f9440-d7f2-45fc-8c37-fd4652e71ed2"],
Cell[615468, 11767, 316, 8, 56, "Output",ExpressionUUID->"5f94aad7-33da-456b-b711-5fcf2fbf24b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615821, 11780, 223, 4, 31, "Input",ExpressionUUID->"7794d2cf-39a9-4a08-a9bc-a70f5e017c06"],
Cell[616047, 11786, 314, 8, 56, "Output",ExpressionUUID->"b1ff73ca-d912-451c-bbc2-7ee90b685537"]
}, Open  ]],
Cell[616376, 11797, 2802, 88, 205, "Input",ExpressionUUID->"4f8c9882-31a0-4756-8b9b-6ce173157ba4"],
Cell[CellGroupData[{
Cell[619203, 11889, 1200, 33, 92, "Input",ExpressionUUID->"48121f97-a941-4fe4-80dc-282d8c664a82"],
Cell[620406, 11924, 491, 11, 22, "Message",ExpressionUUID->"97ea07e1-f699-4f24-8c32-0de87c56077d"],
Cell[620900, 11937, 491, 11, 22, "Message",ExpressionUUID->"e55a6c79-5352-4cc7-86c6-3ede7d6f2a4c"],
Cell[621394, 11950, 2068, 62, 128, "Output",ExpressionUUID->"a7977341-81bf-4b61-a18e-f53059765e31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623499, 12017, 56360, 1429, 3380, "Input",ExpressionUUID->"aa7d3437-3de4-4ef7-828f-b0cd5cf56200"],
Cell[679862, 13448, 53510, 1388, 3318, "Output",ExpressionUUID->"7ff29369-8ebc-4a79-ad7b-41c6515059a5"],
Cell[733375, 14838, 53508, 1388, 3318, "Output",ExpressionUUID->"483681c5-9901-451a-b879-384c512fdd80"]
}, Open  ]],
Cell[786898, 16229, 154, 3, 31, "Input",ExpressionUUID->"9544a59a-5c2e-48fd-b17e-790fb643050f"],
Cell[CellGroupData[{
Cell[787077, 16236, 161, 3, 64, "Subchapter",ExpressionUUID->"55d7c7d8-76b1-4030-8b91-6bca5bae63f1"],
Cell[CellGroupData[{
Cell[787263, 16243, 1398, 41, 124, "Input",ExpressionUUID->"1e918222-e4e6-4805-ac55-ffb5b261c0be"],
Cell[788664, 16286, 23366, 450, 228, "Output",ExpressionUUID->"5abdb109-5370-4062-9bb5-d185a76a4a96"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

